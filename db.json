{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-nexmoe/source/js/app.js","path":"js/app.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/js/copy-codeblock.js","path":"js/copy-codeblock.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/fancybox/fancybox.umd.js","path":"lib/fancybox/fancybox.umd.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/fancybox/fancybox.css","path":"lib/fancybox/fancybox.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/demo_index.html","path":"lib/iconfont/demo_index.html","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.eot","path":"lib/iconfont/iconfont.eot","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/demo.css","path":"lib/iconfont/demo.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.css","path":"lib/iconfont/iconfont.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.js","path":"lib/iconfont/iconfont.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.ttf","path":"lib/iconfont/iconfont.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.svg","path":"lib/iconfont/iconfont.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.json","path":"lib/iconfont/iconfont.json","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.woff","path":"lib/iconfont/iconfont.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.woff2","path":"lib/iconfont/iconfont.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/mdui_043tiny/mdui.css","path":"lib/mdui_043tiny/mdui.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/mdui_043tiny/mdui.js","path":"lib/mdui_043tiny/mdui.js","modified":0,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/icon.jpg","path":"icon.jpg","modified":0,"renderable":0},{"_id":"source/illust_79559380_20210801_212327.png","path":"illust_79559380_20210801_212327.png","modified":0,"renderable":0},{"_id":"source/illust_99248298_20220722_142026.jpg","path":"illust_99248298_20220722_142026.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/CNAME","hash":"469db3c87d835cd47f4aaff80c3cc577d8e6360e","modified":1692098539965},{"_id":"source/archive.md","hash":"7a47b9b66e1400a499184bf80336508d46d2dac7","modified":1691040098087},{"_id":"source/custom.css","hash":"acf467c9d851602d9c232314981a12ef467987b1","modified":1691040098087},{"_id":"source/about/me.md","hash":"97de55d3c06057acf6d1573f062e8705b4ced458","modified":1691040098087},{"_id":"source/illust_99248298_20220722_142026.jpg","hash":"c77d622313d3d2d8fd6204cf0619b1dadddc5b23","modified":1702115582912},{"_id":"source/py.md","hash":"6628a957592754e789736b648f1786991e194534","modified":1692439436665},{"_id":"source/_posts/BUU MISC第一页.md","hash":"15ebfedce1600f1898c152e0b38876982003ac72","modified":1702121159362},{"_id":"source/_posts/BUU MISC第二页.md","hash":"8e659df25996efac6d4df38daf926e0df3aa1638","modified":1702297214562},{"_id":"source/_posts/C语言初次学习笔记(1).md","hash":"bd7f6add1d37ff1468d8da6d29dd9b421d0892db","modified":1702117193333},{"_id":"source/_posts/C语言初次学习笔记(2).md","hash":"077c31e12764b6ec5d11c178b11b04d08999453a","modified":1702117193828},{"_id":"source/_posts/markdown语法.md","hash":"201f42b1b18e49467c21462cfb8a857e4fa20a7a","modified":1702121160448},{"_id":"source/_posts/BUU MISC第一页/image-20230930164004910.png","hash":"777fcaf3e0406408750edcb5cd0a8e254628326c","modified":1702118462643},{"_id":"source/_posts/BUU MISC第一页/image-20230930163911778.png","hash":"81243424ff2775d30196189137b89b29be73768d","modified":1702118458490},{"_id":"source/_posts/BUU MISC第一页/image-20230930212147299.png","hash":"23f812e38a5c08a404abbcfc7a73b06365784e07","modified":1702086858440},{"_id":"source/_posts/BUU MISC第一页/image-20231001172555622.png","hash":"30271f7a3c5a0fdeac627b50969e2d6be3239934","modified":1702118412561},{"_id":"source/_posts/BUU MISC第一页/image-20231002094128310.png","hash":"8befc7331b3aadef4bd3c628c0293fee22139750","modified":1702086364926},{"_id":"source/_posts/BUU MISC第一页/image-20231002094431742.png","hash":"82de88fac19e1a715f1ffaeceb17cf38e291fea6","modified":1702086364926},{"_id":"source/_posts/BUU MISC第一页/image-20231028224942131.png","hash":"bc30e731f9be56d567e807849e75e437a3925d85","modified":1702086279983},{"_id":"source/_posts/BUU MISC第一页/image-20231029003945960.png","hash":"d5034f1b8d962b10288a62b4ced92b19526da259","modified":1702118442168},{"_id":"source/_posts/BUU MISC第一页/image-20231029004836940.png","hash":"dc9f8f34ed129cceb39463fcfce76ca4f4f940f2","modified":1702118454952},{"_id":"source/_posts/BUU MISC第一页/image-20231029005308275.png","hash":"6ecdf7d6bc398c4ff63734ff58a3f3056f21f6a2","modified":1702086803899},{"_id":"source/_posts/BUU MISC第一页/image-20231029010621087.png","hash":"a8a64fa5d29b7362bcc542cb3daac685ef651a02","modified":1702118429945},{"_id":"source/_posts/BUU MISC第一页/image-20231029115441069.png","hash":"41772e3bd89009117f3c9ce8df008301426cbdea","modified":1702086267987},{"_id":"source/_posts/BUU MISC第一页/image-20231029115626925.png","hash":"8f9242d3c1231e9f006b057a5c71e7b7f6a2498c","modified":1702086296417},{"_id":"source/_posts/BUU MISC第一页/image-20231029120238846.png","hash":"fad489ae79c205186d9cf1a8fd19c17bf6c5bbbd","modified":1702086296422},{"_id":"source/_posts/BUU MISC第一页/image-20231102213403194.png","hash":"aede97c451ffda54681f1ab070ffeb7e2577e140","modified":1702086314625},{"_id":"source/_posts/BUU MISC第一页/image-20231102212518643.png","hash":"e0d12ea83eafa7aaba4c39bbfafc40dc1f4e2487","modified":1702086314625},{"_id":"source/_posts/BUU MISC第一页/image-20231102214029035.png","hash":"48f065ed998c844d07d69dff56cd2c3b09c2bcbf","modified":1702086348266},{"_id":"source/_posts/BUU MISC第一页/image-20231102214520587.png","hash":"22e712b80424f1f19bf5350eb061f873e492d5ac","modified":1702086348269},{"_id":"source/_posts/BUU MISC第一页/image-20231102214846232.png","hash":"6807d9600b2a305734dd135cefbcf2da748e2854","modified":1702086387540},{"_id":"source/_posts/BUU MISC第一页/image-20231102215855616.png","hash":"12b25b021b60dd0bbab7923cb8ce2e581a819b5b","modified":1702086715163},{"_id":"source/_posts/BUU MISC第一页/image-20231102220055514.png","hash":"509dea29b4f518f04e00ecfe37b27e96cbfaf05c","modified":1702086715165},{"_id":"source/_posts/BUU MISC第一页/image-20231102221601915.png","hash":"27ecd2847131a942b2f82c16eb306c0f4f4436a9","modified":1702086834542},{"_id":"source/_posts/BUU MISC第一页/image-20231102221721436.png","hash":"3fc582e5d27d58ad26b152cef6dd520cef4cc170","modified":1702086897228},{"_id":"source/_posts/BUU MISC第一页/image-20231102221521959.png","hash":"cca51b2b1f6b2f6a6cc75867e3313a098747af1c","modified":1702086834547},{"_id":"source/_posts/BUU MISC第一页/image-20231001173850299.png","hash":"31a2f3a6f8ec16634452b76f5649104652c74ce3","modified":1702118425651},{"_id":"source/_posts/BUU MISC第一页/image-20231102222308370.png","hash":"4f8484ebc3e8b6a5aa1a7051c8f4934ac5399fc2","modified":1702086897228},{"_id":"source/_posts/BUU MISC第一页/image-20231102222345938.png","hash":"22f61245a13433d01d08847fcee7dfb9aeab3855","modified":1702086897229},{"_id":"source/_posts/BUU MISC第一页/image-20231102222523421.png","hash":"9f7434a98370ce63481431bbdaea254ce43edb06","modified":1702086909577},{"_id":"source/_posts/BUU MISC第一页/image-20231102222908349.png","hash":"73502afc49aabc690f912164a3777b66244fcead","modified":1702086909577},{"_id":"source/_posts/BUU MISC第一页/image-20231102223141331.png","hash":"746d98dfb53bd6ef6fbe4d25efb82c5792adf484","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231102223807463.png","hash":"da6ff3d9d4719893faa93988b6b8da04289b7e66","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231102225030297.png","hash":"222ffe19f045e550d4e4c1097c1cec0e217bcfb7","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231102225220084.png","hash":"e581258fe0cb88948912d3cc4d1370e46e0271c6","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231102225844041.png","hash":"0dbf9f6530c62b9905b0517d8146e09b360c9776","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231102230147582.png","hash":"7ee42bf8516573f6a5756042b49bdc05a7594e5d","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231102230035556.png","hash":"81cfb589c2f692e8cd4387252a7b0885bd08c20d","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231102230818881.png","hash":"dc2eb6aec0477972b21a253c35103271d8336763","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231102231012323.png","hash":"32211025283b826d0a6c3d0847859c8204f8e055","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231102231106840.png","hash":"97737fd53886ca3ac9a7a3886570bb45197d33d0","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231102231956416.png","hash":"ac4cec8f95d511d884553997dc1c5d7693df8b83","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231102233459493.png","hash":"4df2a629a8bbce58ea2cb59c730e5bf07c8b6334","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231102234139687.png","hash":"cc590da5fff4c9b0d2aa97cda87cfbae796f5885","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231103003547955.png","hash":"3d6eca608ffb6bdb40a86983fa4397eb02cf0832","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231103003852745.png","hash":"fe0722623434256f0e29405ba9edc799784f7483","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231103004735062.png","hash":"0a517b72c0d6ebec41700f418fc8bc65d58a8df7","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231103004510022.png","hash":"72431dc9526569a4b0a89274364647c7c9b123bf","modified":1702086934442},{"_id":"source/_posts/BUU MISC第一页/image-20231103004156589.png","hash":"ea4178bde6b0fa9b78cf941846aba351a5e75519","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231103005639019.png","hash":"5eb32ad86cef12f1f69fef0dd00e17ecaf3336f8","modified":1702086934434},{"_id":"source/_posts/BUU MISC第一页/image-20231103005837061.png","hash":"0fd5a6cc6e799451fc390d85cfbeb0f0fbdd7004","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231103010912859.png","hash":"8c411cb0ae5e5844eb9a4104129cfa58373e8844","modified":1702086934434},{"_id":"source/_posts/BUU MISC第一页/image-20231102230514379.png","hash":"826c5a8c53acf6e6f05ba384f9cc8fdefde8f256","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231103005941061.png","hash":"e95f4847a0748bf659da343ce2d3e55e78aa254a","modified":1702086934432},{"_id":"source/_posts/BUU MISC第一页/image-20231103013245028.png","hash":"5fed61388d9dd2a0b92eff20e9ffc1f11b1171f3","modified":1702086934434},{"_id":"source/_posts/BUU MISC第一页/image-20231103013233392.png","hash":"906378acaf230e5bfff4ee8eae7621084796acef","modified":1702086934434},{"_id":"source/_posts/BUU MISC第一页/image-20231103013646579.png","hash":"42a11100b0559d8c8c125e43356cc37c27a78fd9","modified":1702086934434},{"_id":"source/_posts/BUU MISC第一页/image-20231103221255746.png","hash":"245854b44376b66c86a5480a77c3c673730ddfce","modified":1702086934434},{"_id":"source/_posts/BUU MISC第一页/image-20231104015204886.png","hash":"62e25c74d6be433ac547311988d7b49074b622f4","modified":1702086934434},{"_id":"source/_posts/BUU MISC第一页/image-20231104020306299.png","hash":"0427c49d575a75089ce1b1ed33da1dcbd33057af","modified":1702086934442},{"_id":"source/_posts/BUU MISC第一页/image-20231209093654842.png","hash":"d1d0ee3d953f51d006748be35508c94ad4141525","modified":1702118417948},{"_id":"source/_posts/BUU MISC第一页/image-20231209094302547.png","hash":"0b42c5aa2a8920dbe81a15de4b0bd700a9c2558b","modified":1702118485026},{"_id":"source/_posts/BUU MISC第一页/image-20231209093808700.png","hash":"f6d05bc1363e4a7d17b0afbc0011d85e2f11e6be","modified":1702118476242},{"_id":"source/_posts/BUU MISC第一页/image-20231209094950730.png","hash":"d606c7684089f9587ebc9385dca437137f9dad10","modified":1702086590735},{"_id":"source/_posts/BUU MISC第一页/image-20231209094829089.png","hash":"df2df5a053783c1c35b2b7474ca44a2565b74f25","modified":1702086509095},{"_id":"source/_posts/BUU MISC第二页/image-20231116200756188.png","hash":"39c396ae651e37ee963af59762094e5df2b5d0d4","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231116201610324.png","hash":"3187c458999daa7be84be12a3bd17341a453133b","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231116202242375.png","hash":"08de0469bb068fb160489509e3a10f5e10f48f3d","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231116202652184.png","hash":"ba5a13499088fc1f32ee056b1a9e93e3a714f798","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231116202048077.png","hash":"840a7a29580a5f6d54d5ed151a08e5f35755e124","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231116221219237.png","hash":"422fa5722ec913f3edede32c427ee76712089591","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231116202340218.png","hash":"f6bc4003ce13c2efa3577e794243b29b3277ee4d","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231125114517454.png","hash":"7a0ff66b5ea0c0f3eea9e58fa6efdedd8d9f13f0","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231125114810488.png","hash":"f5eeff49bf678a054c31b68504c9628efe1372cb","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231116221149333.png","hash":"0145d1273616011e47fa9daa79fdf55fe07bd783","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231125114555413.png","hash":"b258a8689b354e30c0214919e9762085c2abec25","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231125114834857.png","hash":"b66fe781a6487e3e3e8ada56c33251f96f19d025","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231203190350284.png","hash":"aeb3bb71542dbc2df4c58bb9784b5b481d40e886","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231125115216084.png","hash":"6823e2132ba83f714e4e85a7daadbc429636eb7d","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231203192100854.png","hash":"7c45e248149173a5a14f41f43d22fb509dc4ab7b","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231203192447918.png","hash":"a7b6a969cbb15c944ea226216e3a07ba081e1e93","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231203193202986.png","hash":"06444deea8363b11a423ed25dbe3372f4c593ca5","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231203192350491.png","hash":"047b35ff927dcc2b966a1d3edc872d85cefbc6d1","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231203193406311.png","hash":"1f37d1069069d09398253ac91fcb74226c495c10","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231203193314238.png","hash":"3919d75eeca738878e4fa630be758eec64b4d7d6","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203193700775.png","hash":"145b00ff380331a7ddbb9f997599aaa4a12b1370","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231203193558273.png","hash":"5225ed0973d1cb9471547c868c64dbd00756c3d9","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231203193508467.png","hash":"470af00d348483af2c126cdf9caeafb27ee1680a","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203194054577.png","hash":"82cc9c793766af1967ea4d855633f89a9068ad02","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231203194211872.png","hash":"3d8e6e4369414828c7da5be3ec86d6449061aa6d","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231203194305702.png","hash":"eebd462e18dfa2e2e62d89302afa30d5b3292628","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231203194617231.png","hash":"6ce6f644a1adaebd9ec41e3a791160ed19e89629","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231203194139439.png","hash":"c026d4aedf7d6bb8b3ce756486ec70d2e201f796","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231203195313506.png","hash":"c8927585a83c400905c7b584a6c7458fb121957a","modified":1702114599119},{"_id":"source/_posts/BUU MISC第一页/image-20231103014131334.png","hash":"c12ac6423fd9d85a68034bd437b4082476a5f19e","modified":1702086934434},{"_id":"source/_posts/BUU MISC第二页/image-20231203194647200.png","hash":"7bbbff5c42399ec9f7c4e2ccce824e4200fdb4bb","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203201344531.png","hash":"21d14385b01c95f65d6c466828f67d9fb99e905d","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203201439351.png","hash":"94b5946151ecbf21aa751eff7542b54d6a485097","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203201303694.png","hash":"e1f37031080c773e32a50c1621b8c02e084a9089","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203200040795.png","hash":"a152706eea240be989ca0bbd193e8835d851677c","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203201654872.png","hash":"048c8be6f3ec2c4cf0ceafb04c19dae6c107f6a5","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203234908095.png","hash":"725dc7961afa5afac66e6e1d2c097041ba2a958c","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203201759058.png","hash":"9782792c9ae9f260aa9c51ab1a2f86931a5f55f4","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203234818626.png","hash":"2bd18c21313a82aa7b97f811a5bad9d3a39a9d88","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203235021837.png","hash":"38e6ee57145d610febca5897c9d89c15dbfc98cf","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203235207075.png","hash":"393f0c35f31acf69494a15743358ddd3584a24ae","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203235306913.png","hash":"34a68ab9dfd1b3876d65df5af6658b367a86a93e","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203235419051.png","hash":"4df69ab53fcacac87bb15cf103daf940f81a2b18","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203235950197.png","hash":"e880b382da9bf3001e69818e3b2ac8915101023b","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203201833309.png","hash":"fcb76521daa47c8cb01104bf597de68e38e64e1f","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203194837293.png","hash":"5d73c33bdcaade3503fc45cc91ae4934252c6edf","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231204000002248.png","hash":"7837e91a62e405d50f282f779c3765ca4b30bfcb","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231204000213007.png","hash":"4e51691be0a7141c5486bc861a06b86c28195711","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203195411777.png","hash":"45ab25c3cb600001cd06dea805c3cd3e8e4c4484","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231204000656325.png","hash":"dda35c0ea60c56e92fd7fe9233c3826d31979d28","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231203235552446.png","hash":"775f8dabb1be2ba241f1fd7569a3771a0c4954d7","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231204003047862.png","hash":"d4a846ea008355881d1628659cb4cbf746daf504","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231204190517609.png","hash":"37b17e28a0b3cfd74899a5056b86774f426c0d2a","modified":1702114599119},{"_id":"source/_posts/BUU MISC第一页/image-20231209095025603.png","hash":"1612781b599ac68c8e6ae94f7f63dd5857406514","modified":1702086625607},{"_id":"source/_posts/BUU MISC第二页/image-20231204190453001.png","hash":"e0e402e364ea882f8a34da72e5c4ba62d6d8c308","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231204191340102.png","hash":"09c5cc73f818f3a15a52857d88824329e936445e","modified":1702114599120},{"_id":"source/_posts/BUU MISC第二页/image-20231204190948248.png","hash":"b99c7b058b265bd64c8a2676a702dd3e48de0ac4","modified":1702114599120},{"_id":"source/_posts/BUU MISC第二页/image-20231204191213913.png","hash":"3b08a2cdd6e81827cb742ea7a3ba6adb59d5ae85","modified":1702114599119},{"_id":"source/_posts/BUU MISC第二页/image-20231204191408741.png","hash":"8b086dc3d8f32dfe50753c4e386e86b3021284ba","modified":1702114599120},{"_id":"source/_posts/BUU MISC第二页/image-20231204193006361.png","hash":"245d4c996991dcc08581ea1351e64f3c83f69805","modified":1702114599120},{"_id":"source/_posts/BUU MISC第二页/image-20231204193242805.png","hash":"d533c40f944da8243acaa45cd8c8b2e9967ba512","modified":1702114599120},{"_id":"source/_posts/BUU MISC第二页/image-20231204193356600.png","hash":"e30a3913357908d6f2765589512dca7178e351bf","modified":1702114599120},{"_id":"source/_posts/BUU MISC第二页/image-20231204193508018.png","hash":"e10742c90355d8054b4f99f1a8e06b0790ead82e","modified":1702114599120},{"_id":"source/_posts/BUU MISC第二页/image-20231204193210939.png","hash":"679e727a07134fde5b402455197ff589034405cb","modified":1702114599120},{"_id":"source/_posts/BUU MISC第二页/image-20231204193715022.png","hash":"24733cd96db0cb0c3940b936878b1879c4626ea4","modified":1702114599120},{"_id":"source/_posts/BUU MISC第二页/image-20231204194155541.png","hash":"4aee12239779946a9538e38d1a533cc6d9761b51","modified":1702114599120},{"_id":"source/_posts/BUU MISC第二页/image-20231204195602509.png","hash":"c6b0c16ea33778f77566e5156d5c73b24e836248","modified":1702114599120},{"_id":"source/_posts/BUU MISC第二页/image-20231203192156470.png","hash":"86d3c9fb3ac055cfff58373ec76ade961b6cf954","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231204211456819.png","hash":"3513d0377bead618c51bb6f389a788201b126f5d","modified":1702114599120},{"_id":"source/_posts/BUU MISC第二页/image-20231204194313711.png","hash":"e3f609ea127540c4099385a960f4d5ac6ff57759","modified":1702114599120},{"_id":"source/_posts/BUU MISC第二页/image-20231207192019538.png","hash":"7e1eef2296ab49e416e3dd4190138a4eb9d94403","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231204211343476.png","hash":"dcbc79a93a236ddfb9c5c8e255eb6acc6cf1573d","modified":1702114599120},{"_id":"source/_posts/BUU MISC第二页/image-20231207191425076.png","hash":"34dc80d722bf7569e64c8c55151d4e539430649e","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231207192155042.png","hash":"29d328546a7f9657246529703685692182d8a753","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231207192302627.png","hash":"ee47c6760bee107a91a0101aeb23cf9bad7a800d","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231207192129749.png","hash":"5609d2726a97cfed4a4f38ed18456070afd222fb","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231207195203651.png","hash":"8a02cbfb01292131fbac2ef02fb07101f5b84e28","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231207195745064.png","hash":"15f114bd48b1563b7111042f14889c83a25e3021","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231207200019211.png","hash":"a036b3be8e5168361abfda2c0b3a24c88da8d712","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231207195431073.png","hash":"a8e39070ba14194ec2d797fdccd643ebaed6b797","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231207200405626.png","hash":"e4ec280b0e689cc8ac9009748b61e20e41fbe66c","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231207200452371.png","hash":"0eeaf997d587cdb0e8b0403fd58fb79a00605c23","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231207200225524.png","hash":"37ca36ab3cc0c53c3e7e6ce043ccd9c54b206af4","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231207201125291.png","hash":"66f277d03603c84acc9f11fd566f32b1c3538ed0","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231207201323027.png","hash":"ffcbb96b9039efae2eaaf02ea196a8908133b744","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231207201537387.png","hash":"32b412225e7b098cd6629069ecf2732439f006a9","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231207201739356.png","hash":"fe8293489dfc823a3dc73d9117eaab7dcfd44d98","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231207202128334.png","hash":"ad8ab784254450684c3470e86a24b5fbda64ae9c","modified":1702114599122},{"_id":"source/_posts/BUU MISC第二页/image-20231207202117408.png","hash":"c1e4d9456fa9921d54ab55f318f7212ee9ff9d0c","modified":1702114599122},{"_id":"source/_posts/BUU MISC第二页/image-20231207221841155.png","hash":"117b58f1346384556e798403718015c27106a769","modified":1702114599122},{"_id":"source/_posts/BUU MISC第二页/image-20231208135026442.png","hash":"c3e22ef438c24de537af3bc65515c0eb244e9786","modified":1702114599122},{"_id":"source/_posts/BUU MISC第二页/image-20231207202214558.png","hash":"d2985820e55ec78e0fbfb3188758660b62d64f5c","modified":1702114599121},{"_id":"source/_posts/BUU MISC第二页/image-20231208140756245.png","hash":"6b36587ada8930f7ac69cd9b4f44ba046d824971","modified":1702114599122},{"_id":"source/_posts/BUU MISC第二页/image-20231208141521644.png","hash":"b45b204ba52f91c68fd060d036b2323fe90f8c25","modified":1702114599122},{"_id":"source/_posts/BUU MISC第二页/image-20231208141323096.png","hash":"14eeb1a95ea2da756e6e82ef91250ddaf2005274","modified":1702114599122},{"_id":"source/_posts/BUU MISC第二页/image-20231209011036959.png","hash":"b49eedc7b664766b31afef9e4943ba4ca1262b93","modified":1702114599122},{"_id":"source/_posts/BUU MISC第二页/image-20231209011121881.png","hash":"d18fde722b6b31ce7f8858925511f85a6f7d9403","modified":1702114599122},{"_id":"source/_posts/BUU MISC第二页/image-20231209011152563.png","hash":"c3f6d2f35d31b885ce67ee9276494eda2c2137a1","modified":1702114599122},{"_id":"source/_posts/BUU MISC第二页/image-20231209011611589.png","hash":"df92c0be23b10ffb661ddb854a9209f56794be28","modified":1702114599122},{"_id":"source/_posts/BUU MISC第二页/image-20231209011700990.png","hash":"57c2ed52018929a5f1e3c05e03c137e1f5da41eb","modified":1702114599123},{"_id":"source/_posts/BUU MISC第二页/image-20231209012523387.png","hash":"55dfcdbccb719baee6b18d7bf148b97c1f0752b6","modified":1702114599122},{"_id":"source/_posts/BUU MISC第二页/image-20231209012139794.png","hash":"62af0ca3e0488c030c7756d021b5492f6e6353d1","modified":1702114599122},{"_id":"source/_posts/BUU MISC第二页/image-20231209012303742.png","hash":"8fe48d1ba4684cefee502e9b8b48b10cdcf8f9d5","modified":1702114599122},{"_id":"source/_posts/BUU MISC第二页/image-20231209013048700.png","hash":"44e3eca7e8108ab969e26f20e50d235fde5ddb59","modified":1702114599122},{"_id":"source/_posts/BUU MISC第二页/image-20231209012740846.png","hash":"297421dedc312475f4c6cfaa16163061c16c3c46","modified":1702114599122},{"_id":"source/_posts/BUU MISC第二页/image-20231209100928434.png","hash":"447c07bb1528e565459249cc7f2ee4f86942f529","modified":1702114599123},{"_id":"source/_posts/BUU MISC第二页/image-20231209100308231.png","hash":"10b9915d58d5816f3291f5d95b1e74c1a23676ed","modified":1702114599123},{"_id":"source/_posts/BUU MISC第二页/image-20231209100935662.png","hash":"c82dc8f5c7b1c2d8fa53cf8147422ca6039b04b9","modified":1702114599123},{"_id":"source/_posts/BUU MISC第二页/image-20231209101119204.png","hash":"3fc84148403b6439254adf9f0f93c3e800aa797f","modified":1702114599123},{"_id":"source/_posts/BUU MISC第二页/image-20231209100947253.png","hash":"8a1ba61781be9f7adc6dfc8bb8eed94b2b8d72b0","modified":1702114599123},{"_id":"source/_posts/BUU MISC第二页/image-20231209101148513.png","hash":"abd2524b9de94a1a424de951451fb1e8e1338af2","modified":1702114599123},{"_id":"source/_posts/BUU MISC第二页/image-20231209101820536.png","hash":"c7011dd8853d4a90edb68677fdf8cdb958969a68","modified":1702114599123},{"_id":"source/_posts/BUU MISC第二页/image-20231209170630653.png","hash":"e1ca50678c1531c987b8b9156efa534f82435c1e","modified":1702114599123},{"_id":"source/_posts/BUU MISC第二页/image-20231209170236676.png","hash":"4e6c59e50f8ac66fda8ad067a912bf87bc3c55d2","modified":1702114599123},{"_id":"source/_posts/BUU MISC第二页/image-20231209170721640.png","hash":"bb4ecdb57af8e199944e0d61b73da4d566237248","modified":1702114599123},{"_id":"source/_posts/BUU MISC第二页/image-20231209170749859.png","hash":"8ad1672e85fdde3ecf77ff1327646920d746f59c","modified":1702114599123},{"_id":"source/_posts/BUU MISC第二页/image-20231209172049261.png","hash":"2f95f0fbf70ddd003f9ccb0876748f8cbffd2b65","modified":1702114599124},{"_id":"source/_posts/BUU MISC第二页/image-20231209171448092.png","hash":"48d30182e8e6e438d0bc234abc9a35aa96935ca6","modified":1702114599124},{"_id":"source/_posts/BUU MISC第二页/image-20231209172415401.png","hash":"9f57e60dbdb82abbdc2ed5b1669aa1854a7d56a2","modified":1702114599124},{"_id":"source/_posts/BUU MISC第二页/image-20231209172524394.png","hash":"e7731586a4d6305d3ac038495d010f893530cf5c","modified":1702114599124},{"_id":"source/_posts/BUU MISC第二页/image-20231209171406231.png","hash":"217d107128f549573d38648532cd9cc4eaeedf66","modified":1702114599123},{"_id":"source/_posts/BUU MISC第二页/image-20231209172213470.png","hash":"837090a15ed99b39d6caa72e0dd3e8170e9954aa","modified":1702114599124},{"_id":"source/_posts/BUU MISC第二页/image-20231209170524315.png","hash":"e3e6b64cc942e177746b83660c3da1758abe90f3","modified":1702114599123},{"_id":"source/_posts/BUU MISC第二页/image-20231209172550260.png","hash":"2f11f5a6538d19812d2230a47d950b4d16238d3d","modified":1702114599125},{"_id":"source/_posts/BUU MISC第二页/image-20231209172641900.png","hash":"b7f24f512b28437b07073f5730c5565e301bf9a4","modified":1702114599124},{"_id":"source/_posts/BUU MISC第二页/image-20231208140317860.png","hash":"2e6f18291e40be19aa1f6b9f9b7e020eb15fd0e8","modified":1702114599122},{"_id":"source/_posts/C语言初次学习笔记(1)/image-20230805154931621.png","hash":"7b153bcc9417d921003b51ea574b505eb630e5bb","modified":1691221771647},{"_id":"source/_posts/C语言初次学习笔记(1)/image-20230805170423462.png","hash":"ae18cbf5df62329f84229d5c5606cf3e57389f40","modified":1691226263475},{"_id":"source/_posts/C语言初次学习笔记(1)/image-20230805155452616.png","hash":"14daf8bb29d2af23a75b6184e177ea190fc94022","modified":1691222092636},{"_id":"source/_posts/C语言初次学习笔记(1)/image-20230805165608821.png","hash":"f495f1c8fa4e49ec62b3e8ca07f3521c1e543bc2","modified":1691225768831},{"_id":"source/_posts/C语言初次学习笔记(2)/image-20230815170254386.png","hash":"7b767656b4db83c749c3d3cccde884a7723d9da5","modified":1692090174391},{"_id":"source/_posts/C语言初次学习笔记(1)/image-20230805171655526.png","hash":"9254b08cc6fb77ee4a11eeea750517091fa9d9bc","modified":1691227015540},{"_id":"source/_posts/C语言初次学习笔记(1)/image-20230805172114403.png","hash":"3fe87fcfb95e43cd111c247d222fc5a8524f991f","modified":1691227274421},{"_id":"source/icon.jpg","hash":"2185f1e73a36c0551e39cb4afd59837f4ff089be","modified":1690966463594},{"_id":"source/_posts/BUU MISC第一页/image-20230930164221394.png","hash":"ec9f065556f747d270902f9233f9a07af2cf9e7d","modified":1702118465394},{"_id":"source/_posts/BUU MISC第一页/image-20230930173034922.png","hash":"cb8c4bd2929bd79cb8ac7ac9b57fec6a77634b23","modified":1702118469108},{"_id":"source/_posts/BUU MISC第一页/image-20231028235343604.png","hash":"7ae20b002b4e03ef1fbe1fa6254da3544bcb2ec4","modified":1702086279987},{"_id":"source/_posts/BUU MISC第一页/image-20231029004746711.png","hash":"413d142100ecdd0775df57ce898915c825b668b3","modified":1702118451866},{"_id":"source/_posts/BUU MISC第一页/image-20231029005951080.png","hash":"90e4fa3a932800bfc7caa6a202d7d22964ebc7f4","modified":1702086803899},{"_id":"source/_posts/BUU MISC第一页/image-20231029010246211.png","hash":"137928591136829b26c1a6642ef9faa983513f92","modified":1702086803902},{"_id":"source/_posts/BUU MISC第一页/image-20231029011321260.png","hash":"9a49c63dc6a5f9278514b43410bb524efaafa0b8","modified":1702118437563},{"_id":"source/_posts/BUU MISC第一页/image-20231029115542623.png","hash":"e562318cc584192cdc2c2199f159d50326e4aae5","modified":1702086267988},{"_id":"source/_posts/BUU MISC第一页/image-20231029120258482.png","hash":"1345c5ce45a1eddbd60cdbc15606c4e62d9a649b","modified":1702086296424},{"_id":"source/_posts/BUU MISC第一页/image-20231029010704171.png","hash":"47649b18b7ceb6ac88376d135e5279d8e9f1a445","modified":1702118433769},{"_id":"source/_posts/BUU MISC第一页/image-20231102213431727.png","hash":"6e2c1572351ad0c5dda114e13e89a041f1e7e96b","modified":1702086314631},{"_id":"source/_posts/BUU MISC第一页/image-20231102213914912.png","hash":"1f277b3df7fcf9132eab4e82de98fe91546a4c70","modified":1702086314629},{"_id":"source/_posts/BUU MISC第一页/image-20231102215310432.png","hash":"c4a576aff8c8cf53e6ae4724bdbab62aee15bd11","modified":1702086387543},{"_id":"source/_posts/BUU MISC第一页/image-20231102214710293.png","hash":"669232c7530bf3e053b1dc82dc8e92fc4db50a8a","modified":1702086348271},{"_id":"source/_posts/BUU MISC第一页/image-20231102220653728.png","hash":"9f507c2b8bcc3d3d4bbd4a5a03ec74ee98d07904","modified":1702086834549},{"_id":"source/_posts/BUU MISC第一页/image-20231102222126043.png","hash":"4eb9d71a202bfbcdf50c8e3a3c98cb81db7ae1c9","modified":1702086897232},{"_id":"source/_posts/BUU MISC第一页/image-20231102223501625.png","hash":"6fcbfe7a79ca61c4f11451927432506ebde08708","modified":1702086934442},{"_id":"source/_posts/BUU MISC第一页/image-20231102223852291.png","hash":"f53d7446dbaeb055a16fe968a17a030687618bdd","modified":1702086934442},{"_id":"source/_posts/BUU MISC第一页/image-20231102224321611.png","hash":"bdd2287f224625d30e605a8cc5c3a71ab397e625","modified":1702086934442},{"_id":"source/_posts/BUU MISC第一页/image-20231102225625699.png","hash":"aa74edbfb99ea47cf6dbb9f83c05ad9e7fcdcb34","modified":1702086934442},{"_id":"source/_posts/BUU MISC第一页/image-20231103003839414.png","hash":"e2865160d4618da7f525c2598fc216ad04461531","modified":1702086934443},{"_id":"source/_posts/BUU MISC第一页/image-20231102234729104.png","hash":"039f170c69673dfeddcd0bccbb58ba9dc542f7c4","modified":1702086934443},{"_id":"source/_posts/BUU MISC第一页/image-20231103004450135.png","hash":"26fa5ccbda5dd0af148588a4b38ca641a177a532","modified":1702086934443},{"_id":"source/_posts/BUU MISC第一页/image-20231103010501946.png","hash":"10c42d3c2732374c482873d8ae62ac4727e36a6f","modified":1702086934443},{"_id":"source/_posts/BUU MISC第一页/image-20231103010715509.png","hash":"b74f7f71d88e8d952f2251afe4cf6494106a2bd4","modified":1702086934443},{"_id":"source/_posts/BUU MISC第一页/image-20231102220347569.png","hash":"2749331ab15a32a7da27cc830f9a4c3dfbb3e460","modified":1702086834547},{"_id":"source/_posts/BUU MISC第一页/image-20231103011342352.png","hash":"07a9b0c1f9e6f76c65a13e05379b91960a3c14d9","modified":1702086934443},{"_id":"source/_posts/BUU MISC第一页/image-20231103012644500.png","hash":"39cf93ef450afe8ef684e0cac55e9e16bdd8f9ae","modified":1702086934443},{"_id":"source/_posts/BUU MISC第一页/image-20231103012341902.png","hash":"a1c892c6eb1eced5a5648084af99c418f3a6f08b","modified":1702086934443},{"_id":"source/_posts/BUU MISC第一页/image-20231103013912432.png","hash":"3fbb0e8f068560f1d2af6a454c8b5da8d48d72b2","modified":1702086934443},{"_id":"source/_posts/BUU MISC第一页/image-20231103221622135.png","hash":"940753b507923cde078333b8e1fda9adced59d0a","modified":1702086934443},{"_id":"source/_posts/BUU MISC第一页/image-20231104014429443.png","hash":"78c2f4c0cb397b330c4d6598f9cf7696fab537fb","modified":1702086934443},{"_id":"source/_posts/BUU MISC第一页/image-20231104014643534.png","hash":"8a55dc386cba6700c320e5aba9b8100a0cd521d6","modified":1702086934446},{"_id":"source/_posts/BUU MISC第一页/image-20231104020108651.png","hash":"184c02c116dd048ff64f029c30327c3b1abd3027","modified":1702086934446},{"_id":"source/_posts/BUU MISC第二页/image-20231116195450524.png","hash":"0bc551048903989f8563dcdcb5eab6e0a7d6003d","modified":1702114599118},{"_id":"source/_posts/BUU MISC第二页/image-20231116195953609.png","hash":"263809ea23fa693d517af93635dd4b9e483a645d","modified":1702114599124},{"_id":"source/_posts/BUU MISC第二页/image-20231116195905524.png","hash":"85502c3518c140ec7585fce74a04f45900b6b052","modified":1702114599124},{"_id":"source/_posts/BUU MISC第一页/image-20231103013306460.png","hash":"d346a58aaafcebfc3f3b956dcb36123329224e99","modified":1702086934443},{"_id":"source/_posts/BUU MISC第二页/image-20231125115048235.png","hash":"11312ae7bccd8c60233e87f9aa3b8bbb61c3bde1","modified":1702114599125},{"_id":"source/_posts/BUU MISC第二页/image-20231203192026164.png","hash":"effbcbcf0b4424a5afa7fbf68daefc94156b3648","modified":1702114599125},{"_id":"source/_posts/BUU MISC第二页/image-20231203192047884.png","hash":"722335d976718b6441344d6c481d6560aa0ac1ad","modified":1702114599125},{"_id":"source/_posts/BUU MISC第二页/image-20231204002850837.png","hash":"ae857e199e610cd837ca5ff1bf0d175289d67483","modified":1702114599126},{"_id":"source/_posts/BUU MISC第二页/image-20231204002452504.png","hash":"9383b35697e91e5fa51b966181a7bc020be7f5e7","modified":1702114599126},{"_id":"source/_posts/BUU MISC第二页/image-20231204192520360.png","hash":"42f8906913a6ea39bca683100a49662f0438f4a3","modified":1702114599126},{"_id":"source/_posts/BUU MISC第二页/image-20231204192355168.png","hash":"f7f7fc5f4b2c63858890ccc33a44a28ea6486030","modified":1702114599126},{"_id":"source/_posts/BUU MISC第二页/image-20231204193959516.png","hash":"affa8497fa14f9ca57ea228e6386c8c32ffbef1d","modified":1702114599127},{"_id":"source/_posts/BUU MISC第二页/image-20231207191452348.png","hash":"5f2be7740b257834a7d734353f4d3ccf64b28c64","modified":1702114599127},{"_id":"source/_posts/BUU MISC第二页/image-20231207194219079.png","hash":"ad43813a9ca9fdbe7081b3b148c1c4deb392cc5e","modified":1702114599127},{"_id":"source/_posts/BUU MISC第二页/image-20231207194435380.png","hash":"9ee4094405a6edc2d3814f8d797eadaa8fda9239","modified":1702114599127},{"_id":"source/_posts/BUU MISC第二页/image-20231207201445968.png","hash":"c80e14c20229d19a36aeae3bc9030225794bfe75","modified":1702114599127},{"_id":"source/_posts/BUU MISC第二页/image-20231207201214134.png","hash":"edf127f58773dfb9b38939784ce3638bea514b14","modified":1702114599127},{"_id":"source/_posts/BUU MISC第二页/image-20231208142144663.png","hash":"c8dbf1127f3ecd4677f812430128943d74c777f6","modified":1702114599127},{"_id":"source/_posts/BUU MISC第二页/image-20231209012049579.png","hash":"2749b2af3a46c4eeffc4a5c3a360fcb188c94b5d","modified":1702114599127},{"_id":"source/_posts/BUU MISC第二页/image-20231204194827296.png","hash":"d7f6b06d97a26748d7b6aa4ccd60a074c43bf92d","modified":1702114599126},{"_id":"source/_posts/BUU MISC第二页/image-20231209101318319.png","hash":"6fe9d5ab0eed761ee04885c3583ac63d677d48ea","modified":1702114599127},{"_id":"source/_posts/BUU MISC第一页/image-20230930173205837.png","hash":"e25a181715c4fa71aa8f0b36adadf87b8d8a779e","modified":1702118472989},{"_id":"source/_posts/BUU MISC第一页/image-20231102214111978.png","hash":"812ea144c10cbc587b4391a0bc74d8cdce03a813","modified":1702086348271},{"_id":"source/_posts/BUU MISC第一页/image-20231102214609938.png","hash":"a125d20debe0f427b07f0b97429844859bfab5d7","modified":1702086348273},{"_id":"source/_posts/BUU MISC第一页/image-20231102215106284.png","hash":"667cdc51b99adba3317a3501959d3fd80226b3aa","modified":1702086387545},{"_id":"source/_posts/BUU MISC第一页/image-20231102220155299.png","hash":"e265029cc21efe9bbd747d9e17bc889f2705dc3d","modified":1702086715169},{"_id":"source/_posts/BUU MISC第一页/image-20231102221834000.png","hash":"7f781884a43fc88e458647f1cedb27f179f23eaa","modified":1702086897232},{"_id":"source/_posts/BUU MISC第一页/image-20231102223628322.png","hash":"102f2007771a0b322b5677a0a4cde38467c30186","modified":1702086934446},{"_id":"source/_posts/BUU MISC第一页/image-20231102231640468.png","hash":"31e5a562cd363a9a21663b806b053becf139664c","modified":1702086934446},{"_id":"source/_posts/BUU MISC第一页/image-20231102233654669.png","hash":"628d11b9ecc2aeb3877865ed3b1db5c9f45c71c1","modified":1702086934446},{"_id":"source/_posts/BUU MISC第一页/image-20231103011637325.png","hash":"6bc12846a38eeea0bd8017ecffea95c4f3478440","modified":1702086934450},{"_id":"source/_posts/BUU MISC第一页/image-20231103013524387.png","hash":"abce4a1b16316e777ba5e834d76f455c58f40630","modified":1702086934449},{"_id":"source/_posts/BUU MISC第一页/image-20231103013456425.png","hash":"2dd0d77c1b8459bb21bdfbb5a5634019898f23f5","modified":1702086934450},{"_id":"source/_posts/BUU MISC第一页/image-20231104014235292.png","hash":"ead934eaf802bbe9ae2aa6533f5a3d7d0ae66bce","modified":1702086934450},{"_id":"source/_posts/BUU MISC第一页/image-20231104014606341.png","hash":"8eee0c7962e7c06a518577d5b44ffa8447c594bc","modified":1702086934462},{"_id":"source/_posts/BUU MISC第一页/image-20231209094335558.png","hash":"4ae6fb4e8b5ca48fc0e574eac6c933ef1dc4cfa4","modified":1702118488516},{"_id":"source/_posts/BUU MISC第二页/image-20231116221127242.png","hash":"4c1b2d88833fa69df12bfee06cd7bcabfdae9352","modified":1702114599129},{"_id":"source/_posts/BUU MISC第二页/image-20231116202136439.png","hash":"8418caf7a22efb94bd522d8fae477c8df3ea583f","modified":1702114599127},{"_id":"source/_posts/BUU MISC第二页/image-20231204002400611.png","hash":"1f18b79d1ffdbb1d6ce34f4f664f18db7d67d73a","modified":1702114599129},{"_id":"source/_posts/BUU MISC第二页/image-20231204000229830.png","hash":"53b71742182e96f8d4ab8b6eb938705fcd621222","modified":1702114599129},{"_id":"source/_posts/BUU MISC第二页/image-20231204191302186.png","hash":"1140ad289e58c7a48545c25216dd77cfaafbec2f","modified":1702114599129},{"_id":"source/_posts/BUU MISC第二页/image-20231204191629040.png","hash":"74733808f756ef35ab8268ddad025e4b2e892507","modified":1702114599129},{"_id":"source/_posts/BUU MISC第二页/image-20231204190542422.png","hash":"13ec9c085ea30ab5b755363e8985eb14dc780a51","modified":1702114599129},{"_id":"source/_posts/BUU MISC第二页/image-20231204194247971.png","hash":"5b4364e61a7dc9e407926c7aa1f9df474fc31cea","modified":1702114599130},{"_id":"source/_posts/BUU MISC第二页/image-20231208141659361.png","hash":"d4991bbe962993b16b5413c5361d40086889278e","modified":1702114599130},{"_id":"source/_posts/BUU MISC第二页/image-20231209164924674.png","hash":"aabb37206e4521cbe6d0ea76e371b36ddde9477b","modified":1702114599130},{"_id":"source/_posts/C语言初次学习笔记(2)/image-20230812202043325.png","hash":"8b6802f7804c03ffc7f009f734886315f525f35b","modified":1691842843362},{"_id":"source/_posts/BUU MISC第一页/image-20230930212627558.png","hash":"5c4b02185c38838146780776cb27c2bd39e5bf2f","modified":1702086858445},{"_id":"source/_posts/BUU MISC第一页/image-20230930213829225.png","hash":"db511a0145a4714bdf00fb034dad4030020e4f9e","modified":1702086858445},{"_id":"source/_posts/BUU MISC第一页/image-20231028234454306.png","hash":"26b93a1f78a1d57adbedc0c9ed8aa8473c144c77","modified":1702086279990},{"_id":"source/_posts/BUU MISC第一页/image-20231028234954685.png","hash":"4c21bf48cfbc1588924ddb5b2d1fafa19f915293","modified":1702086279990},{"_id":"source/_posts/BUU MISC第一页/image-20231029004112936.png","hash":"afe005ad8758aa78f316088332b428fd10859479","modified":1702118445282},{"_id":"source/_posts/BUU MISC第一页/image-20231029115756413.png","hash":"c7104aa1f1caeba2a6935cc8d067a9b5c6197d4a","modified":1702086296424},{"_id":"source/_posts/BUU MISC第一页/image-20231102221201766.png","hash":"e39e3dafa8e3f1d33829529c680e9471068e649a","modified":1702086834553},{"_id":"source/_posts/BUU MISC第一页/image-20231102222148401.png","hash":"0d6e9fe6665d3423f8fee2d788d5989dcd4c9f71","modified":1702086897235},{"_id":"source/_posts/BUU MISC第一页/image-20231102233018433.png","hash":"a56de98a5ea9cc379568e3d3174a676f4726c0e4","modified":1702086934462},{"_id":"source/_posts/BUU MISC第一页/image-20231102233746895.png","hash":"935e19b4a71aef2eeecca2eff0520e3663d48c17","modified":1702086934462},{"_id":"source/_posts/BUU MISC第一页/image-20231102233059352.png","hash":"b9d5406d78c55c11f0c1ac9b83df15fee95a20e4","modified":1702086934462},{"_id":"source/_posts/BUU MISC第一页/image-20231102233345082.png","hash":"dc462e8d5876332c0af4ff6f8a6da280f000e846","modified":1702086934462},{"_id":"source/_posts/BUU MISC第一页/image-20231103011023899.png","hash":"d726b10f2f3330f5430ed9d2002e30517e922fe7","modified":1702086934463},{"_id":"source/_posts/BUU MISC第一页/image-20231209094139199.png","hash":"baccd8ec8e9a4079ed39a2d16f80656b817da044","modified":1702118479484},{"_id":"source/_posts/BUU MISC第二页/image-20231209101456458.png","hash":"7df90301a5e509a3f224bfbed6943f01c230d0d0","modified":1702114599134},{"_id":"source/_posts/BUU MISC第一页/image-20230930214228085.png","hash":"15a1498f9a4164c59149dba440af8a5432db4db6","modified":1702086858446},{"_id":"source/_posts/BUU MISC第一页/image-20230930213926268.png","hash":"a24328c0a6bd35c9cb5a7fcd1a4dd44bc6074632","modified":1702086858446},{"_id":"source/_posts/BUU MISC第一页/image-20231103005021667.png","hash":"683035b22a534f17010313ddad9f24ec60aeaa90","modified":1702086934472},{"_id":"source/_posts/BUU MISC第一页/image-20231103004554135.png","hash":"04bf5d04acbda7cddd093f54153950944309b84a","modified":1702086934472},{"_id":"source/_posts/BUU MISC第一页/image-20231104015842337.png","hash":"dff6b4d724656e51211c94a04693bfc6322b053b","modified":1702086934476},{"_id":"source/_posts/BUU MISC第二页/image-20231203195200078.png","hash":"8404fcfb93ce0e023caa457c1d699476fe946664","modified":1702114599141},{"_id":"source/_posts/BUU MISC第二页/image-20231203235603898.png","hash":"3119a232f5841767621f39ec7a60d8964d5e252c","modified":1702114599142},{"_id":"source/_posts/BUU MISC第二页/image-20231204190628126.png","hash":"91f486f758b07b648f2f5b62d11d83cc748e8dd5","modified":1702114599142},{"_id":"source/_posts/BUU MISC第一页/image-20231102220519996.png","hash":"09da7e62e4558155a4d0cfae9aa0ccfc98b45a7b","modified":1702086834554},{"_id":"source/_posts/BUU MISC第一页/image-20231102225312706.png","hash":"5c526e31cbe9795adb292e36165f006ec675809d","modified":1702086934476},{"_id":"source/_posts/BUU MISC第一页/image-20231103003948441.png","hash":"33aeb5257b3fb6ff9566385f4f37ad69ea4cb49e","modified":1702086934477},{"_id":"source/_posts/BUU MISC第二页/image-20231204191844688.png","hash":"16ef5947968dfc182766e710937062104f74a37e","modified":1702114599144},{"_id":"node_modules/hexo-theme-nexmoe/package.json","hash":"ff7441150123cb68ff378e7897fea9c1b45d8bc0","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/crowdin.yml","hash":"2ad0f2dcd2b396f1169caee9e5e2aead81bda79b","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/_config.yml","hash":"7d580602ce3cff4ebe0d4c9bb37ab34e68d6947a","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/index.js","hash":"f3d92ae5f32a9aee66f8b24083a2004d69a2b761","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/renovate.json","hash":"cb29cc16e61b0b8a6dac34657d76822ae29ad5aa","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/README.md","hash":"bc78d5911da21732ec731212580cf12fd348f246","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/languages/it.yml","hash":"7638f8d5c0056d5193945164ff31918dea42c681","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/.github/release-drafter.yml","hash":"dd3b5e93c47c7da24f667ae9affc39b5f9318fc5","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/languages/zh-HK.yml","hash":"5cbcfabcae88d58302bf8f0a1a9fa8e9eefde56b","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/move_config.js","hash":"79f2fd683645d3cc68dd84d2a5a5636bea47a4f7","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/languages/default.yml","hash":"6b144fc5d123b2a7009f8994d079dc45df633107","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/languages/zh-TW.yml","hash":"ad005493a2ab10a96376ada036f484aac10e0c9e","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/languages/zh.yml","hash":"f8348834e4e0609b753bdf75216abbfa2db29361","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/languages/en.yml","hash":"314f4ffdb237612980e14e964db0b5c720f2dc00","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/languages/zh-CN.yml","hash":"7fc634168c705ae5d806433b280f2feff657d78b","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/languages/ja.yml","hash":"ff41a855af829cf7a8af4c34d5818435fa11140f","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/layout/py.ejs","hash":"c664e20467c66ae744f4ec62b862afe9d7c3db9f","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/scripts/index.js","hash":"cc0d9081ff5405d9d469c443c2ce385bb7169862","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/layout/archives.ejs","hash":"9027f1e8d5efaf289a6b4e119a145173d0cd912c","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/layout/index.ejs","hash":"d4df47d4fd6dd1ae2c4b85c5bb33b76b9a3c294a","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"0b267713fc9f986ef35b56ca3dfc55b2224395fd","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/source/_config.yml","hash":"8f508665b4512954103e04e1e86f9ebfe30e7748","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/layout/layout.ejs","hash":"663c78e211be8b543b7698de712021f7f32aec84","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"feb8a8754a6bd76bb4c612436b79a44f18bb2ec5","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/layout/post.ejs","hash":"ffbcb632414a6d09ecf9bb99ac76c4e7065ebd2d","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/.github/workflows/npm-publish.yml","hash":"d7535b512fb77548bf95c10d0a728d8112075c68","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/.github/ISSUE_TEMPLATE/bug_report_en.md","hash":"8d52806087943924734c51e51d11ccbdc0617046","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/.github/workflows/release-drafter.yml","hash":"264240842f4cc944636b31f326bbcd8e7d8f0d64","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/scripts/helper/image_filter.js","hash":"2ac7cb4937e7d5c425ccd5bc91d5068da787a52f","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_index/list.ejs","hash":"46085a341d54a07efba3f76ac697710544b588c7","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/head.ejs","hash":"24aa4becf0ba15c2d0dbed9a44de01c3d95152a1","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/paginator.ejs","hash":"4f4addec9993ba1dee104df98013f636a16e9cb4","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/searchbox.ejs","hash":"e03fec2c56b284f3cbfaaba6dda2354ccf5cc4a1","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/scripts/helper/js_auto_version.js","hash":"98cf6f7edcca3d54ede63556751b1e4f896c7016","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/scripts/tag/gallery.js","hash":"9bc38cea8684bfcf1293cc8f949a6e0407c0ced9","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/scripts/helper/css_auto_version.js","hash":"63c90dac6ad0a102ef302bf9fd9e030d521a8232","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/scripts/tag/links.js","hash":"ca6e804065fe1440dea4711f8b65e790f9c86de4","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/archive.ejs","hash":"b14dd3de1469f36d5ca131412380a4c151d29935","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/hitokoto.ejs","hash":"6b556dcaaa507a3548992755831fe1ad5ee99134","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/.github/ISSUE_TEMPLATE/feature_request_en.md","hash":"1de5315f528b54fd1be9f1c42bd14d9eee078dc6","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/social.ejs","hash":"d3925796a296b0ff41189ce505ebc290ba6986cf","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/tag.ejs","hash":"a14146c6177cc083f994c714ab414bb201ef1f07","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/category.ejs","hash":"a46946f96a512c6e035491b767b1a60828ce85b8","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/tagcloud.ejs","hash":"2f580aec6fb680fb84e8c1604ddd11e222cb4742","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/link.ejs","hash":"34dbdd31d5477928061e6f35cd5ca5679672bb50","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/source/js/app.js","hash":"0e32a395d6461e7243fe40174ee31b1f0a0e47d9","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/source/js/copy-codeblock.js","hash":"c5b3348adb7c29d3600b00b611c53f7d0dc42dd7","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/source/js/search.js","hash":"718593d468a4c3607dd30878e7fb6ab4b20e62f4","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/recent_posts.ejs","hash":"ac93edcc618dcdad716e2549636e9834da2092d7","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_layout/single/content.ejs","hash":"142dc0e2d63d26c5d2cb5be2b8960cfd3b321083","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/style.styl","hash":"4a30eeea438ae2f7e1fe3bccc98364d1508e7b19","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_layout/single/header.ejs","hash":"7671279153d8baa3d26561578553a4606ba83973","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_widget/search.ejs","hash":"792d8196536d3ffd34734aaa9f9b8145ce17ce89","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_post/copyright.ejs","hash":"f4dc4f5d09511f1ae775cb818d7fe3a9bff68912","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_post/tag.ejs","hash":"7a5f803b5fcdcc79fbe890c49b0e5d558f1aed5c","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_post/word-count.ejs","hash":"dfbf95e78cf2abf56e9626abef3a06c63cbbb94a","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/layout/_partial/_post/meta.ejs","hash":"9472684dc6ae3bebf745882d25bb812c6030b8cf","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_partial/article.styl","hash":"b97b40f3944a27b6e96c975a292824642fab7096","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_partial/copy-codeblock.styl","hash":"83372948cb098a8ad1da8bde17963701b8e39409","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_partial/archives.styl","hash":"d53095ea16062d224f455a47e965ba3da4965b2c","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_partial/py.styl","hash":"786cb173dbbd5fc3d446efb76836f251a7a7acd3","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_partial/searchbox.styl","hash":"022582a49e5f16fea1f2f7e2b66b3e373cbee1e3","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/source/css/_widget/hitokoto.styl","hash":"77dd73e562e8282e70f8340815c95d76234105c4","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.eot","hash":"1d1851c2197382a9b7cd3b3fcdef79a61ad331f6","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/fancybox/fancybox.css","hash":"cbce0cfc36f47e30e9c9824875f0b854a05f1916","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/demo.css","hash":"65c50db528a5abe06426b1a20735feaf1f2a0d9b","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/demo_index.html","hash":"df3f126af2695d3dd839edcfda49b951b02f701e","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.css","hash":"01952f8f10c716cbb463b589a345e46f1b8cc101","modified":1690362820000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.js","hash":"bac40fc7b766297cbf645849e583e8cd6496b2d2","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.json","hash":"79e09161126917b9729bb7e5fa04a5c9c634e666","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.ttf","hash":"b0f4b5501cbcaeaf15dc608359574a29bc4c4265","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.svg","hash":"c6d700d47886901027f92836a9e3b807876733b3","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.woff2","hash":"9209e4f7e45d37e58356e5ede7ea9d6d9e922d77","modified":1690362824000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/iconfont/iconfont.woff","hash":"e292802913e6c248a17797dc24ecfc0a3473c3cf","modified":1690362824000},{"_id":"source/_posts/C语言初次学习笔记(1)/image-20230805172454571.png","hash":"4b2e2d3b3d7959f90230264f3fe28df29dd332b3","modified":1691227494599},{"_id":"source/_posts/BUU MISC第一页/image-20230930213249124.png","hash":"107255977361b10663f7ed2e565140f0d68fcfb6","modified":1702086858450},{"_id":"source/_posts/BUU MISC第一页/image-20231029004556450.png","hash":"db972c504f70e511cdaa2b434a9041470aee8cc0","modified":1702118448743},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/fancybox/fancybox.umd.js","hash":"16dcba1f11b46fdb7d4fd86003fd8095ecd2166d","modified":1690362822000},{"_id":"source/_posts/BUU MISC第二页/image-20231207195254469.png","hash":"2f3a8ed189d69616dd60365cafdb8d495a170ac7","modified":1702114599146},{"_id":"source/_posts/BUU MISC第二页/image-20231209171933148.png","hash":"00e4bfedd8fd7af1b9c3f2b8020b59944642363f","modified":1702114599160},{"_id":"source/_posts/BUU MISC第一页/image-20231102223340945.png","hash":"e87a0ab02564a01274638f4d3aef7cf8c1821e23","modified":1702086934485},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/mdui_043tiny/mdui.js","hash":"280c0e0a4cab30f1ce0b8cad899d6e5cd2c1fd06","modified":1690362822000},{"_id":"node_modules/hexo-theme-nexmoe/source/lib/mdui_043tiny/mdui.css","hash":"b79ef94d2b11f8ce05ba048f5d74a3bd09f12e4d","modified":1690362820000},{"_id":"source/_posts/BUU MISC第一页/image-20231102233238234.png","hash":"a54b4397e465a518623429965a2edb9cd75a13c6","modified":1702086934488},{"_id":"source/_posts/BUU MISC第二页/image-20231203235059836.png","hash":"8be0250bdcc470889d3771d71636f25a4f183b80","modified":1702114599164},{"_id":"source/_posts/BUU MISC第一页/image-20230930213026565.png","hash":"31772a094e2669e023e1c53465f70e3fab820a2d","modified":1702086858453},{"_id":"source/_posts/BUU MISC第二页/image-20231204001906241.png","hash":"0d92668be61548fbbcb6e88299535555c4dca0a1","modified":1702114599168},{"_id":"source/_posts/BUU MISC第二页/image-20231209171124461.png","hash":"b5cdc6ade0a875fbbd620a89c5056dac58a64393","modified":1702114599172},{"_id":"source/_posts/BUU MISC第一页/image-20231102213104750.png","hash":"0bec6f36822d38a82063763c8d80adb2f2d39129","modified":1702086314639},{"_id":"source/_posts/BUU MISC第一页/image-20231209094240801.png","hash":"c1a0aa6ce8a81b389ef3a53ef5f707476ca7d5e4","modified":1702118482173},{"_id":"source/_posts/BUU MISC第一页/image-20230930213621224.png","hash":"d4040a68e414b98cc94fab400e6f76b6d31d0460","modified":1702086858454},{"_id":"source/_posts/BUU MISC第一页/image-20231103013729241.png","hash":"7bc9df1f879ea3583a9072681f493b14ebd86eba","modified":1702086934575},{"_id":"source/illust_79559380_20210801_212327.png","hash":"9ec59056424372dc59b21591d964ecc118d4c60c","modified":1702115645453},{"_id":"source/_posts/BUU MISC第二页/image-20231208140603455.png","hash":"58fd7dd28f1d330a0ee3c54a7a1f617edfcffc69","modified":1702114599177},{"_id":"source/_posts/BUU MISC第一页/image-20231001172947373.png","hash":"462355748e22f23af7ffc5d291ddc205feba81f9","modified":1702118405063},{"_id":"public/custom.css","hash":"084bc55759fefaf30eeaa5d8f1c2e524f720d322","modified":1702297642029},{"_id":"public/content.json","hash":"97938d5dd99b6675be4ea9b724ed5ec7f744ea69","modified":1702297642029},{"_id":"public/archive.html","hash":"1e16e5b809664eb142a4af770111618bed00c6a0","modified":1702297642029},{"_id":"public/py.html","hash":"c70d25a822c2f6e37f5e8b017505797a658cd705","modified":1702297642029},{"_id":"public/about/me.html","hash":"e0e0e766da6d44d40afc8bb747b459cf5bc5dc09","modified":1702297642029},{"_id":"public/index.html","hash":"e6d8aa81c4e6ee98396f2927dcf2d9ad3f2d88ec","modified":1702297642029},{"_id":"public/tags/做题记录/index.html","hash":"13b7a56e445a3b8e6f887078cfe43358821ff424","modified":1702297642029},{"_id":"public/tags/笔记/index.html","hash":"a118138c8f16b089af63448a04dc2c0491b39436","modified":1702297642029},{"_id":"public/archives/index.html","hash":"8863bba4119158b6060aa8bc752445802bf1a5c9","modified":1702297642029},{"_id":"public/archives/2023/index.html","hash":"759d2f3f4893de48414cf24dbcf2abef382e6fa6","modified":1702297642029},{"_id":"public/archives/2023/07/index.html","hash":"6ee514867ca376e9389beb06288ba17128fee07a","modified":1702297642029},{"_id":"public/archives/2023/08/index.html","hash":"12d3a769c1b9a2880dcfdb4dbc65b8a41bf50a15","modified":1702297642029},{"_id":"public/archives/2023/11/index.html","hash":"2b80aa6f76c3831e39c8d61378097bdc27957e7a","modified":1702297642029},{"_id":"public/archives/2023/12/index.html","hash":"7c7fa28f2cc2c6068995389d905a1086da6fceac","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/index.html","hash":"e8f474173913ad81aa994130a49aeb822165ebc7","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/index.html","hash":"02a21a9a5d3ec9b6b48edea14c2bb8439b28b560","modified":1702297642029},{"_id":"public/2023/08/15/C语言初次学习笔记(2)/index.html","hash":"0cfeecb9ab26ee7105a6bc5b5c8dd75d5cc4f5f2","modified":1702297642029},{"_id":"public/2023/08/07/C语言初次学习笔记(1)/index.html","hash":"1fe1764b8934ec7491575a2322412387e65f5f84","modified":1702297642029},{"_id":"public/2023/07/28/markdown语法/index.html","hash":"a11227f3a8e69ea0f0e5994ae6c74fa08255bfbb","modified":1702297642029},{"_id":"public/lib/iconfont/iconfont.eot","hash":"1d1851c2197382a9b7cd3b3fcdef79a61ad331f6","modified":1702297642029},{"_id":"public/lib/iconfont/iconfont.ttf","hash":"b0f4b5501cbcaeaf15dc608359574a29bc4c4265","modified":1702297642029},{"_id":"public/lib/iconfont/iconfont.woff","hash":"e292802913e6c248a17797dc24ecfc0a3473c3cf","modified":1702297642029},{"_id":"public/lib/iconfont/iconfont.woff2","hash":"9209e4f7e45d37e58356e5ede7ea9d6d9e922d77","modified":1702297642029},{"_id":"public/CNAME","hash":"469db3c87d835cd47f4aaff80c3cc577d8e6360e","modified":1702297642029},{"_id":"public/illust_99248298_20220722_142026.jpg","hash":"c77d622313d3d2d8fd6204cf0619b1dadddc5b23","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20230930163911778.png","hash":"81243424ff2775d30196189137b89b29be73768d","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20230930164004910.png","hash":"777fcaf3e0406408750edcb5cd0a8e254628326c","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20230930212147299.png","hash":"23f812e38a5c08a404abbcfc7a73b06365784e07","modified":1702297642029},{"_id":"public/lib/iconfont/iconfont.svg","hash":"c6d700d47886901027f92836a9e3b807876733b3","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231001172555622.png","hash":"30271f7a3c5a0fdeac627b50969e2d6be3239934","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231002094431742.png","hash":"82de88fac19e1a715f1ffaeceb17cf38e291fea6","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231002094128310.png","hash":"8befc7331b3aadef4bd3c628c0293fee22139750","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231028224942131.png","hash":"bc30e731f9be56d567e807849e75e437a3925d85","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029003945960.png","hash":"d5034f1b8d962b10288a62b4ced92b19526da259","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231001173850299.png","hash":"31a2f3a6f8ec16634452b76f5649104652c74ce3","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029004836940.png","hash":"dc9f8f34ed129cceb39463fcfce76ca4f4f940f2","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029005308275.png","hash":"6ecdf7d6bc398c4ff63734ff58a3f3056f21f6a2","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029115441069.png","hash":"41772e3bd89009117f3c9ce8df008301426cbdea","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029115626925.png","hash":"8f9242d3c1231e9f006b057a5c71e7b7f6a2498c","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029010621087.png","hash":"a8a64fa5d29b7362bcc542cb3daac685ef651a02","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029120238846.png","hash":"fad489ae79c205186d9cf1a8fd19c17bf6c5bbbd","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102212518643.png","hash":"e0d12ea83eafa7aaba4c39bbfafc40dc1f4e2487","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102213403194.png","hash":"aede97c451ffda54681f1ab070ffeb7e2577e140","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102214029035.png","hash":"48f065ed998c844d07d69dff56cd2c3b09c2bcbf","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102214520587.png","hash":"22e712b80424f1f19bf5350eb061f873e492d5ac","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102214846232.png","hash":"6807d9600b2a305734dd135cefbcf2da748e2854","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102215855616.png","hash":"12b25b021b60dd0bbab7923cb8ce2e581a819b5b","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102220055514.png","hash":"509dea29b4f518f04e00ecfe37b27e96cbfaf05c","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102221601915.png","hash":"27ecd2847131a942b2f82c16eb306c0f4f4436a9","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102221521959.png","hash":"cca51b2b1f6b2f6a6cc75867e3313a098747af1c","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102221721436.png","hash":"3fc582e5d27d58ad26b152cef6dd520cef4cc170","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102222308370.png","hash":"4f8484ebc3e8b6a5aa1a7051c8f4934ac5399fc2","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102222345938.png","hash":"22f61245a13433d01d08847fcee7dfb9aeab3855","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102222523421.png","hash":"9f7434a98370ce63481431bbdaea254ce43edb06","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102222908349.png","hash":"73502afc49aabc690f912164a3777b66244fcead","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102223141331.png","hash":"746d98dfb53bd6ef6fbe4d25efb82c5792adf484","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102223807463.png","hash":"da6ff3d9d4719893faa93988b6b8da04289b7e66","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102225030297.png","hash":"222ffe19f045e550d4e4c1097c1cec0e217bcfb7","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102225220084.png","hash":"e581258fe0cb88948912d3cc4d1370e46e0271c6","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102225844041.png","hash":"0dbf9f6530c62b9905b0517d8146e09b360c9776","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102230035556.png","hash":"81cfb589c2f692e8cd4387252a7b0885bd08c20d","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102230147582.png","hash":"7ee42bf8516573f6a5756042b49bdc05a7594e5d","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102230514379.png","hash":"826c5a8c53acf6e6f05ba384f9cc8fdefde8f256","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102231012323.png","hash":"32211025283b826d0a6c3d0847859c8204f8e055","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102230818881.png","hash":"dc2eb6aec0477972b21a253c35103271d8336763","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102231956416.png","hash":"ac4cec8f95d511d884553997dc1c5d7693df8b83","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102233459493.png","hash":"4df2a629a8bbce58ea2cb59c730e5bf07c8b6334","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103003547955.png","hash":"3d6eca608ffb6bdb40a86983fa4397eb02cf0832","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102231106840.png","hash":"97737fd53886ca3ac9a7a3886570bb45197d33d0","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103003852745.png","hash":"fe0722623434256f0e29405ba9edc799784f7483","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102234139687.png","hash":"cc590da5fff4c9b0d2aa97cda87cfbae796f5885","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103004156589.png","hash":"ea4178bde6b0fa9b78cf941846aba351a5e75519","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103004510022.png","hash":"72431dc9526569a4b0a89274364647c7c9b123bf","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103004735062.png","hash":"0a517b72c0d6ebec41700f418fc8bc65d58a8df7","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103005639019.png","hash":"5eb32ad86cef12f1f69fef0dd00e17ecaf3336f8","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103005837061.png","hash":"0fd5a6cc6e799451fc390d85cfbeb0f0fbdd7004","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103005941061.png","hash":"e95f4847a0748bf659da343ce2d3e55e78aa254a","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103010912859.png","hash":"8c411cb0ae5e5844eb9a4104129cfa58373e8844","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103013233392.png","hash":"906378acaf230e5bfff4ee8eae7621084796acef","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103013245028.png","hash":"5fed61388d9dd2a0b92eff20e9ffc1f11b1171f3","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103013646579.png","hash":"42a11100b0559d8c8c125e43356cc37c27a78fd9","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103221255746.png","hash":"245854b44376b66c86a5480a77c3c673730ddfce","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231104015204886.png","hash":"62e25c74d6be433ac547311988d7b49074b622f4","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231104020306299.png","hash":"0427c49d575a75089ce1b1ed33da1dcbd33057af","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231209093654842.png","hash":"d1d0ee3d953f51d006748be35508c94ad4141525","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231209093808700.png","hash":"f6d05bc1363e4a7d17b0afbc0011d85e2f11e6be","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231209094302547.png","hash":"0b42c5aa2a8920dbe81a15de4b0bd700a9c2558b","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231209094829089.png","hash":"df2df5a053783c1c35b2b7474ca44a2565b74f25","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231209094950730.png","hash":"d606c7684089f9587ebc9385dca437137f9dad10","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103014131334.png","hash":"c12ac6423fd9d85a68034bd437b4082476a5f19e","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231209095025603.png","hash":"1612781b599ac68c8e6ae94f7f63dd5857406514","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231116200756188.png","hash":"39c396ae651e37ee963af59762094e5df2b5d0d4","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231116201610324.png","hash":"3187c458999daa7be84be12a3bd17341a453133b","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231116202048077.png","hash":"840a7a29580a5f6d54d5ed151a08e5f35755e124","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231116202242375.png","hash":"08de0469bb068fb160489509e3a10f5e10f48f3d","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231116202340218.png","hash":"f6bc4003ce13c2efa3577e794243b29b3277ee4d","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231116202652184.png","hash":"ba5a13499088fc1f32ee056b1a9e93e3a714f798","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231116221219237.png","hash":"422fa5722ec913f3edede32c427ee76712089591","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231125114517454.png","hash":"7a0ff66b5ea0c0f3eea9e58fa6efdedd8d9f13f0","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231125114555413.png","hash":"b258a8689b354e30c0214919e9762085c2abec25","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231125114810488.png","hash":"f5eeff49bf678a054c31b68504c9628efe1372cb","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231125114834857.png","hash":"b66fe781a6487e3e3e8ada56c33251f96f19d025","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231116221149333.png","hash":"0145d1273616011e47fa9daa79fdf55fe07bd783","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231125115216084.png","hash":"6823e2132ba83f714e4e85a7daadbc429636eb7d","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203190350284.png","hash":"aeb3bb71542dbc2df4c58bb9784b5b481d40e886","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203192100854.png","hash":"7c45e248149173a5a14f41f43d22fb509dc4ab7b","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203192156470.png","hash":"86d3c9fb3ac055cfff58373ec76ade961b6cf954","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203192350491.png","hash":"047b35ff927dcc2b966a1d3edc872d85cefbc6d1","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203192447918.png","hash":"a7b6a969cbb15c944ea226216e3a07ba081e1e93","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203193202986.png","hash":"06444deea8363b11a423ed25dbe3372f4c593ca5","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203193314238.png","hash":"3919d75eeca738878e4fa630be758eec64b4d7d6","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203193508467.png","hash":"470af00d348483af2c126cdf9caeafb27ee1680a","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203193406311.png","hash":"1f37d1069069d09398253ac91fcb74226c495c10","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203193558273.png","hash":"5225ed0973d1cb9471547c868c64dbd00756c3d9","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203194054577.png","hash":"82cc9c793766af1967ea4d855633f89a9068ad02","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203193700775.png","hash":"145b00ff380331a7ddbb9f997599aaa4a12b1370","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203194139439.png","hash":"c026d4aedf7d6bb8b3ce756486ec70d2e201f796","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203194211872.png","hash":"3d8e6e4369414828c7da5be3ec86d6449061aa6d","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203194305702.png","hash":"eebd462e18dfa2e2e62d89302afa30d5b3292628","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203194647200.png","hash":"7bbbff5c42399ec9f7c4e2ccce824e4200fdb4bb","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203194617231.png","hash":"6ce6f644a1adaebd9ec41e3a791160ed19e89629","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203194837293.png","hash":"5d73c33bdcaade3503fc45cc91ae4934252c6edf","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203195411777.png","hash":"45ab25c3cb600001cd06dea805c3cd3e8e4c4484","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203200040795.png","hash":"a152706eea240be989ca0bbd193e8835d851677c","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203201303694.png","hash":"e1f37031080c773e32a50c1621b8c02e084a9089","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203201344531.png","hash":"21d14385b01c95f65d6c466828f67d9fb99e905d","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203201439351.png","hash":"94b5946151ecbf21aa751eff7542b54d6a485097","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203201654872.png","hash":"048c8be6f3ec2c4cf0ceafb04c19dae6c107f6a5","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203201759058.png","hash":"9782792c9ae9f260aa9c51ab1a2f86931a5f55f4","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203201833309.png","hash":"fcb76521daa47c8cb01104bf597de68e38e64e1f","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203234818626.png","hash":"2bd18c21313a82aa7b97f811a5bad9d3a39a9d88","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203235021837.png","hash":"38e6ee57145d610febca5897c9d89c15dbfc98cf","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203234908095.png","hash":"725dc7961afa5afac66e6e1d2c097041ba2a958c","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203235207075.png","hash":"393f0c35f31acf69494a15743358ddd3584a24ae","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203235306913.png","hash":"34a68ab9dfd1b3876d65df5af6658b367a86a93e","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203235419051.png","hash":"4df69ab53fcacac87bb15cf103daf940f81a2b18","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203235552446.png","hash":"775f8dabb1be2ba241f1fd7569a3771a0c4954d7","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203235950197.png","hash":"e880b382da9bf3001e69818e3b2ac8915101023b","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204000002248.png","hash":"7837e91a62e405d50f282f779c3765ca4b30bfcb","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204000213007.png","hash":"4e51691be0a7141c5486bc861a06b86c28195711","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204000656325.png","hash":"dda35c0ea60c56e92fd7fe9233c3826d31979d28","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204003047862.png","hash":"d4a846ea008355881d1628659cb4cbf746daf504","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204190453001.png","hash":"e0e402e364ea882f8a34da72e5c4ba62d6d8c308","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204190517609.png","hash":"37b17e28a0b3cfd74899a5056b86774f426c0d2a","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204190948248.png","hash":"b99c7b058b265bd64c8a2676a702dd3e48de0ac4","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204191213913.png","hash":"3b08a2cdd6e81827cb742ea7a3ba6adb59d5ae85","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204191340102.png","hash":"09c5cc73f818f3a15a52857d88824329e936445e","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204191408741.png","hash":"8b086dc3d8f32dfe50753c4e386e86b3021284ba","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204193210939.png","hash":"679e727a07134fde5b402455197ff589034405cb","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204193242805.png","hash":"d533c40f944da8243acaa45cd8c8b2e9967ba512","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204193356600.png","hash":"e30a3913357908d6f2765589512dca7178e351bf","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204193006361.png","hash":"245d4c996991dcc08581ea1351e64f3c83f69805","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204193508018.png","hash":"e10742c90355d8054b4f99f1a8e06b0790ead82e","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204193715022.png","hash":"24733cd96db0cb0c3940b936878b1879c4626ea4","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204194155541.png","hash":"4aee12239779946a9538e38d1a533cc6d9761b51","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204194313711.png","hash":"e3f609ea127540c4099385a960f4d5ac6ff57759","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204195602509.png","hash":"c6b0c16ea33778f77566e5156d5c73b24e836248","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204211343476.png","hash":"dcbc79a93a236ddfb9c5c8e255eb6acc6cf1573d","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204211456819.png","hash":"3513d0377bead618c51bb6f389a788201b126f5d","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207192019538.png","hash":"7e1eef2296ab49e416e3dd4190138a4eb9d94403","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207191425076.png","hash":"34dc80d722bf7569e64c8c55151d4e539430649e","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207192155042.png","hash":"29d328546a7f9657246529703685692182d8a753","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207192129749.png","hash":"5609d2726a97cfed4a4f38ed18456070afd222fb","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207192302627.png","hash":"ee47c6760bee107a91a0101aeb23cf9bad7a800d","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207195203651.png","hash":"8a02cbfb01292131fbac2ef02fb07101f5b84e28","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207195745064.png","hash":"15f114bd48b1563b7111042f14889c83a25e3021","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207200019211.png","hash":"a036b3be8e5168361abfda2c0b3a24c88da8d712","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207195431073.png","hash":"a8e39070ba14194ec2d797fdccd643ebaed6b797","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207200225524.png","hash":"37ca36ab3cc0c53c3e7e6ce043ccd9c54b206af4","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207201125291.png","hash":"66f277d03603c84acc9f11fd566f32b1c3538ed0","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207200405626.png","hash":"e4ec280b0e689cc8ac9009748b61e20e41fbe66c","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207200452371.png","hash":"0eeaf997d587cdb0e8b0403fd58fb79a00605c23","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207201323027.png","hash":"ffcbb96b9039efae2eaaf02ea196a8908133b744","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207201537387.png","hash":"32b412225e7b098cd6629069ecf2732439f006a9","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207201739356.png","hash":"fe8293489dfc823a3dc73d9117eaab7dcfd44d98","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207202117408.png","hash":"c1e4d9456fa9921d54ab55f318f7212ee9ff9d0c","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207202128334.png","hash":"ad8ab784254450684c3470e86a24b5fbda64ae9c","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207202214558.png","hash":"d2985820e55ec78e0fbfb3188758660b62d64f5c","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207221841155.png","hash":"117b58f1346384556e798403718015c27106a769","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231208135026442.png","hash":"c3e22ef438c24de537af3bc65515c0eb244e9786","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231208140317860.png","hash":"2e6f18291e40be19aa1f6b9f9b7e020eb15fd0e8","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231208140756245.png","hash":"6b36587ada8930f7ac69cd9b4f44ba046d824971","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231208141323096.png","hash":"14eeb1a95ea2da756e6e82ef91250ddaf2005274","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231208141521644.png","hash":"b45b204ba52f91c68fd060d036b2323fe90f8c25","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209011036959.png","hash":"b49eedc7b664766b31afef9e4943ba4ca1262b93","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209011121881.png","hash":"d18fde722b6b31ce7f8858925511f85a6f7d9403","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209011152563.png","hash":"c3f6d2f35d31b885ce67ee9276494eda2c2137a1","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209011611589.png","hash":"df92c0be23b10ffb661ddb854a9209f56794be28","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209011700990.png","hash":"57c2ed52018929a5f1e3c05e03c137e1f5da41eb","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209012139794.png","hash":"62af0ca3e0488c030c7756d021b5492f6e6353d1","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209012303742.png","hash":"8fe48d1ba4684cefee502e9b8b48b10cdcf8f9d5","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209012523387.png","hash":"55dfcdbccb719baee6b18d7bf148b97c1f0752b6","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209012740846.png","hash":"297421dedc312475f4c6cfaa16163061c16c3c46","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209013048700.png","hash":"44e3eca7e8108ab969e26f20e50d235fde5ddb59","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203195313506.png","hash":"c8927585a83c400905c7b584a6c7458fb121957a","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209100308231.png","hash":"10b9915d58d5816f3291f5d95b1e74c1a23676ed","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209100928434.png","hash":"447c07bb1528e565459249cc7f2ee4f86942f529","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209100935662.png","hash":"c82dc8f5c7b1c2d8fa53cf8147422ca6039b04b9","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209101119204.png","hash":"3fc84148403b6439254adf9f0f93c3e800aa797f","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209100947253.png","hash":"8a1ba61781be9f7adc6dfc8bb8eed94b2b8d72b0","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209101148513.png","hash":"abd2524b9de94a1a424de951451fb1e8e1338af2","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209101820536.png","hash":"c7011dd8853d4a90edb68677fdf8cdb958969a68","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209170236676.png","hash":"4e6c59e50f8ac66fda8ad067a912bf87bc3c55d2","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209170524315.png","hash":"e3e6b64cc942e177746b83660c3da1758abe90f3","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209170630653.png","hash":"e1ca50678c1531c987b8b9156efa534f82435c1e","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209170721640.png","hash":"bb4ecdb57af8e199944e0d61b73da4d566237248","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209170749859.png","hash":"8ad1672e85fdde3ecf77ff1327646920d746f59c","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209171406231.png","hash":"217d107128f549573d38648532cd9cc4eaeedf66","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209171448092.png","hash":"48d30182e8e6e438d0bc234abc9a35aa96935ca6","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209172049261.png","hash":"2f95f0fbf70ddd003f9ccb0876748f8cbffd2b65","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209172213470.png","hash":"837090a15ed99b39d6caa72e0dd3e8170e9954aa","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209172415401.png","hash":"9f57e60dbdb82abbdc2ed5b1669aa1854a7d56a2","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209172524394.png","hash":"e7731586a4d6305d3ac038495d010f893530cf5c","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209172550260.png","hash":"2f11f5a6538d19812d2230a47d950b4d16238d3d","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209172641900.png","hash":"b7f24f512b28437b07073f5730c5565e301bf9a4","modified":1702297642029},{"_id":"public/2023/08/07/C语言初次学习笔记(1)/image-20230805154931621.png","hash":"7b153bcc9417d921003b51ea574b505eb630e5bb","modified":1702297642029},{"_id":"public/2023/08/07/C语言初次学习笔记(1)/image-20230805165608821.png","hash":"f495f1c8fa4e49ec62b3e8ca07f3521c1e543bc2","modified":1702297642029},{"_id":"public/2023/08/07/C语言初次学习笔记(1)/image-20230805170423462.png","hash":"ae18cbf5df62329f84229d5c5606cf3e57389f40","modified":1702297642029},{"_id":"public/2023/08/07/C语言初次学习笔记(1)/image-20230805155452616.png","hash":"14daf8bb29d2af23a75b6184e177ea190fc94022","modified":1702297642029},{"_id":"public/2023/08/07/C语言初次学习笔记(1)/image-20230805171655526.png","hash":"9254b08cc6fb77ee4a11eeea750517091fa9d9bc","modified":1702297642029},{"_id":"public/2023/08/07/C语言初次学习笔记(1)/image-20230805172114403.png","hash":"3fe87fcfb95e43cd111c247d222fc5a8524f991f","modified":1702297642029},{"_id":"public/2023/08/15/C语言初次学习笔记(2)/image-20230815170254386.png","hash":"7b767656b4db83c749c3d3cccde884a7723d9da5","modified":1702297642029},{"_id":"public/icon.jpg","hash":"2185f1e73a36c0551e39cb4afd59837f4ff089be","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20230930164221394.png","hash":"ec9f065556f747d270902f9233f9a07af2cf9e7d","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20230930173034922.png","hash":"cb8c4bd2929bd79cb8ac7ac9b57fec6a77634b23","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231028235343604.png","hash":"7ae20b002b4e03ef1fbe1fa6254da3544bcb2ec4","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029004746711.png","hash":"413d142100ecdd0775df57ce898915c825b668b3","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029010246211.png","hash":"137928591136829b26c1a6642ef9faa983513f92","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029005951080.png","hash":"90e4fa3a932800bfc7caa6a202d7d22964ebc7f4","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029011321260.png","hash":"9a49c63dc6a5f9278514b43410bb524efaafa0b8","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029010704171.png","hash":"47649b18b7ceb6ac88376d135e5279d8e9f1a445","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029115542623.png","hash":"e562318cc584192cdc2c2199f159d50326e4aae5","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029120258482.png","hash":"1345c5ce45a1eddbd60cdbc15606c4e62d9a649b","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102213431727.png","hash":"6e2c1572351ad0c5dda114e13e89a041f1e7e96b","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102213914912.png","hash":"1f277b3df7fcf9132eab4e82de98fe91546a4c70","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102214710293.png","hash":"669232c7530bf3e053b1dc82dc8e92fc4db50a8a","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102215310432.png","hash":"c4a576aff8c8cf53e6ae4724bdbab62aee15bd11","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102220653728.png","hash":"9f507c2b8bcc3d3d4bbd4a5a03ec74ee98d07904","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102220347569.png","hash":"2749331ab15a32a7da27cc830f9a4c3dfbb3e460","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102222126043.png","hash":"4eb9d71a202bfbcdf50c8e3a3c98cb81db7ae1c9","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102223501625.png","hash":"6fcbfe7a79ca61c4f11451927432506ebde08708","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102223852291.png","hash":"f53d7446dbaeb055a16fe968a17a030687618bdd","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102224321611.png","hash":"bdd2287f224625d30e605a8cc5c3a71ab397e625","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102225625699.png","hash":"aa74edbfb99ea47cf6dbb9f83c05ad9e7fcdcb34","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103003839414.png","hash":"e2865160d4618da7f525c2598fc216ad04461531","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103004450135.png","hash":"26fa5ccbda5dd0af148588a4b38ca641a177a532","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103010501946.png","hash":"10c42d3c2732374c482873d8ae62ac4727e36a6f","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103010715509.png","hash":"b74f7f71d88e8d952f2251afe4cf6494106a2bd4","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103011342352.png","hash":"07a9b0c1f9e6f76c65a13e05379b91960a3c14d9","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103012341902.png","hash":"a1c892c6eb1eced5a5648084af99c418f3a6f08b","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103012644500.png","hash":"39cf93ef450afe8ef684e0cac55e9e16bdd8f9ae","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103013306460.png","hash":"d346a58aaafcebfc3f3b956dcb36123329224e99","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103013912432.png","hash":"3fbb0e8f068560f1d2af6a454c8b5da8d48d72b2","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231104014429443.png","hash":"78c2f4c0cb397b330c4d6598f9cf7696fab537fb","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231104014643534.png","hash":"8a55dc386cba6700c320e5aba9b8100a0cd521d6","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231104020108651.png","hash":"184c02c116dd048ff64f029c30327c3b1abd3027","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103221622135.png","hash":"940753b507923cde078333b8e1fda9adced59d0a","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231116195450524.png","hash":"0bc551048903989f8563dcdcb5eab6e0a7d6003d","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231116195905524.png","hash":"85502c3518c140ec7585fce74a04f45900b6b052","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231116195953609.png","hash":"263809ea23fa693d517af93635dd4b9e483a645d","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231125115048235.png","hash":"11312ae7bccd8c60233e87f9aa3b8bbb61c3bde1","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203192026164.png","hash":"effbcbcf0b4424a5afa7fbf68daefc94156b3648","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203192047884.png","hash":"722335d976718b6441344d6c481d6560aa0ac1ad","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102234729104.png","hash":"039f170c69673dfeddcd0bccbb58ba9dc542f7c4","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204002452504.png","hash":"9383b35697e91e5fa51b966181a7bc020be7f5e7","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204002850837.png","hash":"ae857e199e610cd837ca5ff1bf0d175289d67483","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204192355168.png","hash":"f7f7fc5f4b2c63858890ccc33a44a28ea6486030","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204192520360.png","hash":"42f8906913a6ea39bca683100a49662f0438f4a3","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204193959516.png","hash":"affa8497fa14f9ca57ea228e6386c8c32ffbef1d","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204194827296.png","hash":"d7f6b06d97a26748d7b6aa4ccd60a074c43bf92d","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207191452348.png","hash":"5f2be7740b257834a7d734353f4d3ccf64b28c64","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207194219079.png","hash":"ad43813a9ca9fdbe7081b3b148c1c4deb392cc5e","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207194435380.png","hash":"9ee4094405a6edc2d3814f8d797eadaa8fda9239","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207201214134.png","hash":"edf127f58773dfb9b38939784ce3638bea514b14","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207201445968.png","hash":"c80e14c20229d19a36aeae3bc9030225794bfe75","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231208142144663.png","hash":"c8dbf1127f3ecd4677f812430128943d74c777f6","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209012049579.png","hash":"2749b2af3a46c4eeffc4a5c3a360fcb188c94b5d","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209101318319.png","hash":"6fe9d5ab0eed761ee04885c3583ac63d677d48ea","modified":1702297642029},{"_id":"public/js/app.js","hash":"0e32a395d6461e7243fe40174ee31b1f0a0e47d9","modified":1702297642029},{"_id":"public/js/copy-codeblock.js","hash":"024dde5766cea21c6b067e0c782a31d2f1a51c69","modified":1702297642029},{"_id":"public/js/search.js","hash":"718593d468a4c3607dd30878e7fb6ab4b20e62f4","modified":1702297642029},{"_id":"public/lib/fancybox/fancybox.css","hash":"cbce0cfc36f47e30e9c9824875f0b854a05f1916","modified":1702297642029},{"_id":"public/lib/iconfont/demo.css","hash":"65c50db528a5abe06426b1a20735feaf1f2a0d9b","modified":1702297642029},{"_id":"public/lib/iconfont/iconfont.json","hash":"8fbdca1d1886c8c6d9bfe1fb105595c65050a175","modified":1702297642029},{"_id":"public/lib/iconfont/iconfont.css","hash":"01952f8f10c716cbb463b589a345e46f1b8cc101","modified":1702297642029},{"_id":"public/css/style.css","hash":"5c8a9dccbc2f13b5f423a4756b73a0becdc3c24a","modified":1702297642029},{"_id":"public/lib/iconfont/demo_index.html","hash":"df3f126af2695d3dd839edcfda49b951b02f701e","modified":1702297642029},{"_id":"public/lib/fancybox/fancybox.umd.js","hash":"16dcba1f11b46fdb7d4fd86003fd8095ecd2166d","modified":1702297642029},{"_id":"public/lib/iconfont/iconfont.js","hash":"bac40fc7b766297cbf645849e583e8cd6496b2d2","modified":1702297642029},{"_id":"public/lib/mdui_043tiny/mdui.js","hash":"280c0e0a4cab30f1ce0b8cad899d6e5cd2c1fd06","modified":1702297642029},{"_id":"public/lib/mdui_043tiny/mdui.css","hash":"b79ef94d2b11f8ce05ba048f5d74a3bd09f12e4d","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20230930173205837.png","hash":"e25a181715c4fa71aa8f0b36adadf87b8d8a779e","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102214111978.png","hash":"812ea144c10cbc587b4391a0bc74d8cdce03a813","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102214609938.png","hash":"a125d20debe0f427b07f0b97429844859bfab5d7","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102215106284.png","hash":"667cdc51b99adba3317a3501959d3fd80226b3aa","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102220155299.png","hash":"e265029cc21efe9bbd747d9e17bc889f2705dc3d","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102221834000.png","hash":"7f781884a43fc88e458647f1cedb27f179f23eaa","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102223628322.png","hash":"102f2007771a0b322b5677a0a4cde38467c30186","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102231640468.png","hash":"31e5a562cd363a9a21663b806b053becf139664c","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102233654669.png","hash":"628d11b9ecc2aeb3877865ed3b1db5c9f45c71c1","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103011637325.png","hash":"6bc12846a38eeea0bd8017ecffea95c4f3478440","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103013456425.png","hash":"2dd0d77c1b8459bb21bdfbb5a5634019898f23f5","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103013524387.png","hash":"abce4a1b16316e777ba5e834d76f455c58f40630","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231104014235292.png","hash":"ead934eaf802bbe9ae2aa6533f5a3d7d0ae66bce","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231104014606341.png","hash":"8eee0c7962e7c06a518577d5b44ffa8447c594bc","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231209094335558.png","hash":"4ae6fb4e8b5ca48fc0e574eac6c933ef1dc4cfa4","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231116202136439.png","hash":"8418caf7a22efb94bd522d8fae477c8df3ea583f","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231116221127242.png","hash":"4c1b2d88833fa69df12bfee06cd7bcabfdae9352","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204000229830.png","hash":"53b71742182e96f8d4ab8b6eb938705fcd621222","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204190542422.png","hash":"13ec9c085ea30ab5b755363e8985eb14dc780a51","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204002400611.png","hash":"1f18b79d1ffdbb1d6ce34f4f664f18db7d67d73a","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204191629040.png","hash":"74733808f756ef35ab8268ddad025e4b2e892507","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204191302186.png","hash":"1140ad289e58c7a48545c25216dd77cfaafbec2f","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204194247971.png","hash":"5b4364e61a7dc9e407926c7aa1f9df474fc31cea","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231208141659361.png","hash":"d4991bbe962993b16b5413c5361d40086889278e","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209164924674.png","hash":"aabb37206e4521cbe6d0ea76e371b36ddde9477b","modified":1702297642029},{"_id":"public/2023/08/15/C语言初次学习笔记(2)/image-20230812202043325.png","hash":"8b6802f7804c03ffc7f009f734886315f525f35b","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20230930212627558.png","hash":"5c4b02185c38838146780776cb27c2bd39e5bf2f","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20230930213829225.png","hash":"db511a0145a4714bdf00fb034dad4030020e4f9e","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231028234454306.png","hash":"26b93a1f78a1d57adbedc0c9ed8aa8473c144c77","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231028234954685.png","hash":"4c21bf48cfbc1588924ddb5b2d1fafa19f915293","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029004112936.png","hash":"afe005ad8758aa78f316088332b428fd10859479","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029115756413.png","hash":"c7104aa1f1caeba2a6935cc8d067a9b5c6197d4a","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102221201766.png","hash":"e39e3dafa8e3f1d33829529c680e9471068e649a","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102222148401.png","hash":"0d6e9fe6665d3423f8fee2d788d5989dcd4c9f71","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102233018433.png","hash":"a56de98a5ea9cc379568e3d3174a676f4726c0e4","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102233059352.png","hash":"b9d5406d78c55c11f0c1ac9b83df15fee95a20e4","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102233345082.png","hash":"dc462e8d5876332c0af4ff6f8a6da280f000e846","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102233746895.png","hash":"935e19b4a71aef2eeecca2eff0520e3663d48c17","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103011023899.png","hash":"d726b10f2f3330f5430ed9d2002e30517e922fe7","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231209094139199.png","hash":"baccd8ec8e9a4079ed39a2d16f80656b817da044","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209101456458.png","hash":"7df90301a5e509a3f224bfbed6943f01c230d0d0","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20230930213926268.png","hash":"a24328c0a6bd35c9cb5a7fcd1a4dd44bc6074632","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20230930214228085.png","hash":"15a1498f9a4164c59149dba440af8a5432db4db6","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103004554135.png","hash":"04bf5d04acbda7cddd093f54153950944309b84a","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103005021667.png","hash":"683035b22a534f17010313ddad9f24ec60aeaa90","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231104015842337.png","hash":"dff6b4d724656e51211c94a04693bfc6322b053b","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203195200078.png","hash":"8404fcfb93ce0e023caa457c1d699476fe946664","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203235603898.png","hash":"3119a232f5841767621f39ec7a60d8964d5e252c","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204190628126.png","hash":"91f486f758b07b648f2f5b62d11d83cc748e8dd5","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102220519996.png","hash":"09da7e62e4558155a4d0cfae9aa0ccfc98b45a7b","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102225312706.png","hash":"5c526e31cbe9795adb292e36165f006ec675809d","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103003948441.png","hash":"33aeb5257b3fb6ff9566385f4f37ad69ea4cb49e","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204191844688.png","hash":"16ef5947968dfc182766e710937062104f74a37e","modified":1702297642029},{"_id":"public/2023/08/07/C语言初次学习笔记(1)/image-20230805172454571.png","hash":"4b2e2d3b3d7959f90230264f3fe28df29dd332b3","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20230930213249124.png","hash":"107255977361b10663f7ed2e565140f0d68fcfb6","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231029004556450.png","hash":"db972c504f70e511cdaa2b434a9041470aee8cc0","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231207195254469.png","hash":"2f3a8ed189d69616dd60365cafdb8d495a170ac7","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209171933148.png","hash":"00e4bfedd8fd7af1b9c3f2b8020b59944642363f","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102223340945.png","hash":"e87a0ab02564a01274638f4d3aef7cf8c1821e23","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102233238234.png","hash":"a54b4397e465a518623429965a2edb9cd75a13c6","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231203235059836.png","hash":"8be0250bdcc470889d3771d71636f25a4f183b80","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20230930213026565.png","hash":"31772a094e2669e023e1c53465f70e3fab820a2d","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231204001906241.png","hash":"0d92668be61548fbbcb6e88299535555c4dca0a1","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231209171124461.png","hash":"b5cdc6ade0a875fbbd620a89c5056dac58a64393","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231209094240801.png","hash":"c1a0aa6ce8a81b389ef3a53ef5f707476ca7d5e4","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231102213104750.png","hash":"0bec6f36822d38a82063763c8d80adb2f2d39129","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20230930213621224.png","hash":"d4040a68e414b98cc94fab400e6f76b6d31d0460","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231103013729241.png","hash":"7bc9df1f879ea3583a9072681f493b14ebd86eba","modified":1702297642029},{"_id":"public/illust_79559380_20210801_212327.png","hash":"9ec59056424372dc59b21591d964ecc118d4c60c","modified":1702297642029},{"_id":"public/2023/12/09/BUU MISC第二页/image-20231208140603455.png","hash":"58fd7dd28f1d330a0ee3c54a7a1f617edfcffc69","modified":1702297642029},{"_id":"public/2023/11/04/BUU MISC第一页/image-20231001172947373.png","hash":"462355748e22f23af7ffc5d291ddc205feba81f9","modified":1702297642029}],"Category":[],"Data":[],"Page":[{"title":"归档","layout":"archives","_content":"","source":"archive.md","raw":"---\ntitle: 归档\nlayout: archives\n---","date":"2023-08-03T05:21:38.087Z","updated":"2023-08-03T05:21:38.087Z","path":"archive.html","comments":1,"_id":"clq0w2cko00008wv5cykfd6pg","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":".nexmoe-post-cover {\n    box-shadow: 0 0 10px rgba(0,0,0,1);\n}","source":"custom.css","raw":".nexmoe-post-cover {\n    box-shadow: 0 0 10px rgba(0,0,0,1);\n}","date":"2023-08-03T05:21:38.087Z","updated":"2023-08-03T05:21:38.087Z","path":"custom.css","layout":"false","title":"","comments":1,"_id":"clq0w2cl200028wv512ku89n1","content":".nexmoe-post-cover {\n    box-shadow: 0 0 10px rgba(0,0,0,1);\n}","site":{"data":{}},"excerpt":"","more":".nexmoe-post-cover {\n    box-shadow: 0 0 10px rgba(0,0,0,1);\n}"},{"title":"朋友","layout":"py","_content":"{% links shuffle %}\n[\n {\n  \"title\": \"折影轻梦\",\n  \"link\": \"https://nexmoe.com\",\n  \"img\": \"https://www.gravatar.com/avatar/c7fd185f8c967dec20c29c75a40b9e09\",\n  \"des\": \"为热爱战斗着，努力学着变得勇敢\"\n }\n]\n{% endlinks %}\n\n","source":"py.md","raw":"---\ntitle: 朋友\nlayout: py\npermalink: py.html\n---\n{% links shuffle %}\n[\n {\n  \"title\": \"折影轻梦\",\n  \"link\": \"https://nexmoe.com\",\n  \"img\": \"https://www.gravatar.com/avatar/c7fd185f8c967dec20c29c75a40b9e09\",\n  \"des\": \"为热爱战斗着，努力学着变得勇敢\"\n }\n]\n{% endlinks %}\n\n","date":"2023-08-19T10:03:56.665Z","updated":"2023-08-19T10:03:56.665Z","path":"py.html","comments":1,"_id":"clq0w2cl700048wv5gqtphqtm","content":"<div class=\"nexmoe-py\"><ul>\n\t\t\t\t<li mdui-tooltip=\"{content: '为热爱战斗着，努力学着变得勇敢'}\">\n\t\t\t\t\t<a target=\"_blank\" href=\"https://nexmoe.com\" title=\"折影轻梦\">\n\t\t\t\t\t\t<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"https://www.gravatar.com/avatar/c7fd185f8c967dec20c29c75a40b9e09\" alt=\"折影轻梦\" data-caption=\"折影轻梦\" loading=\"lazy\">\n\t\t\t\t\t</a>\n\t\t\t\t</li></ul></div>\n\n","site":{"data":{}},"excerpt":"","more":"<div class=\"nexmoe-py\"><ul>\n\t\t\t\t<li mdui-tooltip=\"{content: '为热爱战斗着，努力学着变得勇敢'}\">\n\t\t\t\t\t<a target=\"_blank\" href=\"https://nexmoe.com\" title=\"折影轻梦\">\n\t\t\t\t\t\t<img src=\"https://www.gravatar.com/avatar/c7fd185f8c967dec20c29c75a40b9e09\" alt=\"折影轻梦\">\n\t\t\t\t\t</a>\n\t\t\t\t</li></ul></div>\n\n"},{"title":"About me","date":"2023-07-28T09:41:54.000Z","_content":"","source":"about/me.md","raw":"---\ntitle: About me\ndate: 2023-07-28 17:41:54\n---\n","updated":"2023-08-03T05:21:38.087Z","path":"about/me.html","comments":1,"layout":"page","_id":"clq0w2cl800058wv59kombjto","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"BUU MISC第一页","date":"2023-11-04T12:00:00.000Z","cover":"/illust_99248298_20220722_142026.jpg","_content":"# BUU MISC第一页\n\n### 1.签到\n\n<img src=\"BUU MISC第一页/image-20231209093654842.png\" alt=\"image-20231209093654842\" style=\"zoom:67%;\" />\n\nflag为：`flag{buu_ctf}`。\n\n### 2.金三胖\n\n本题来自buuctf，所用工具为PuzzleSolver。\n\n题目给的附件下载之后得到的是一张金三胖的gif图片，我们仔细看会发现会有一瞬间闪烁出flag的字样，那我们可以猜到，flag一定是藏在这段gif图的某帧里。\n\n打开PuzzleSolver中的ImageTools，调整到拆分GIF，对gif图进行拆分，就可以得到一个文件夹，里面是每一帧的图片。\n\n<img src=\"BUU MISC第一页/image-20231001172555622.png\" alt=\"image-20231001172555622\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231001172947373.png\" alt=\"image-20231001172947373\" style=\"zoom:67%;\" />\n\n我们把这其中包含flag的三张组合起来，就可以得到：\n\n<img src=\"BUU MISC第一页/image-20231001173850299.png\" alt=\"image-20231001173850299\" style=\"zoom:67%;\" />\n\n即flag可能为：`flag{hello_hongke}`、`flag{hellohongke}`或者`flag{_hello_hongke}`。\n\n但奇怪的是这三条flag都无法提交。看了wp说flag是`flag{hello_hongke}`那这题我就算自己写出来了OwO。\n\n### 3.你竟然赶我走\n\n<img src=\"BUU MISC第一页/image-20231029010621087.png\" alt=\"image-20231029010621087\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件打开是一张图片，没啥特别的\n\n<img src=\"BUU MISC第一页/image-20231029010704171.png\" alt=\"image-20231029010704171\" style=\"zoom:67%;\" />\n\n用kali工具跑一遍，没有用，拿010看看：\n\n<img src=\"BUU MISC第一页/image-20231029011321260.png\" alt=\"image-20231029011321260\" style=\"zoom:67%;\" />\n\n好家伙，flag直接放在最后：`flag{stego_is_s0_bor1ing}`。\n\n### 4.二维码\n\n<img src=\"BUU MISC第一页/image-20231029003945960.png\" alt=\"image-20231029003945960\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n题目下载下来是一个二维码图片，扫一下：\n\n<img src=\"BUU MISC第一页/image-20231029004112936.png\" alt=\"image-20231029004112936\" style=\"zoom:67%;\" />\n\n看到这段话：`secret is here`，这玩意绝对不是flag，既然是图片，那用kali的工具跑一遍：\n\n<img src=\"BUU MISC第一页/image-20231029004556450.png\" alt=\"image-20231029004556450\" style=\"zoom:67%;\" />\n\nbinwalk出来一个加密的zip压缩包，不知道密码，直接用工具爆破：\n\n<img src=\"BUU MISC第一页/image-20231029004746711.png\" alt=\"image-20231029004746711\" style=\"zoom:67%;\" />\n\n爆出来密码是`7639`，解压得到文件**4number.txt**：\n\n<img src=\"BUU MISC第一页/image-20231029004836940.png\" alt=\"image-20231029004836940\" style=\"zoom:67%;\" />\n\n得到flag，改下flag头：`flag{vjpw_wnoei}`。\n\n### 5.大白\n\n本题来自buuctf，所用软件为WinHex。\n\n<img src=\"BUU MISC第一页/image-20230930163911778.png\" alt=\"image-20230930163911778\" style=\"zoom: 67%;\" />\n\nxxxxxxxxxx if(a) {    if(b) {        xxx    }else{        xxxx    }}else{    xxxxx}c\n\n<img src=\"BUU MISC第一页/image-20230930164004910.png\" alt=\"image-20230930164004910\" style=\"zoom: 67%;\" />\n\n看起来这个大白好像不太对劲，下半身没有露出来，我猜测这题用的便是图片隐写，根据题目的提示，那么flag应该就藏在大白没有露出来的身体上。\n\n<img src=\"BUU MISC第一页/image-20230930164221394.png\" alt=\"image-20230930164221394\" style=\"zoom:67%;\" />\n\n用WinHex打开图片文件，找到第二行的这两个位置，在十六进制下，这两个对应的分别是图片的宽和高，我们将`01 00`也改成`02 A7`，这样我们就可以得到一张1：1大小的大白图片。\n\n<img src=\"BUU MISC第一页/image-20230930173034922.png\" alt=\"image-20230930173034922\" style=\"zoom:67%;\" />\n\n按下`cirl+s`进行保存，更新图片文件，得到：\n\n<img src=\"BUU MISC第一页/image-20230930173205837.png\" alt=\"image-20230930173205837\" style=\"zoom:67%;\" />\n\n在大白肚子上就写着本题的flag：`flag{He1l0_d4_ba1}`。\n\n### 6.N种方法解决\n\n![image-20231209093808700](BUU MISC第一页/image-20231209093808700.png)\n\n用010打开得到一段base64密文，解密一下：\n\n<img src=\"BUU MISC第一页/image-20231209094139199.png\" alt=\"image-20231209094139199\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231209094240801.png\" alt=\"image-20231209094240801\" style=\"zoom:67%;\" />\n\n得到一个png图片，是一张二维码：\n\n<img src=\"BUU MISC第一页/image-20231209094302547.png\" alt=\"image-20231209094302547\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231209094335558.png\" alt=\"image-20231209094335558\" style=\"zoom:67%;\" />\n\n扫一下得到flag：`flag{dca57f966e4e4e31fd5b15417da63269}`。\n\n### 7.乌镇峰会种图\n\n<img src=\"BUU MISC第一页/image-20231029115441069.png\" alt=\"image-20231029115441069\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n这题下载下来是图片，扔进010：\n\n<img src=\"BUU MISC第一页/image-20231029115542623.png\" alt=\"image-20231029115542623\" style=\"zoom:67%;\" />\n\n直接找到flag：`flag{97314e7864a8f62627b26f3f998c37f1}`。\n\n###   8.wireshark\n\n<img src=\"BUU MISC第一页/image-20231028224942131.png\" alt=\"image-20231028224942131\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件下载下来用wireshark打开，先http过滤：\n\n<img src=\"BUU MISC第一页/image-20231028234454306.png\" alt=\"image-20231028234454306\" style=\"zoom:67%;\" />\n\n根据题目提示，找管理员登陆网站的那条记录，同时直接用字符串查找一下flag试试：\n\n<img src=\"BUU MISC第一页/image-20231028234954685.png\" alt=\"image-20231028234954685\" style=\"zoom:67%;\" />\n\n找到这一条，右键追踪tcp流：\n\n<img src=\"BUU MISC第一页/image-20231028235343604.png\" alt=\"image-20231028235343604\" style=\"zoom:67%;\" />\n\npassword内容就是flag，本题flag为：`flag{ffb7567a1d4f4abdffdb54e022f8facd}`。\n\n### 9.基础破解\n\n<img src=\"BUU MISC第一页/image-20231029115626925.png\" alt=\"image-20231029115626925\" style=\"zoom:67%;\" />\n\n这题下载下来是一个加密的压缩包，用ARCHPR直接暴力破解：\n\n<img src=\"BUU MISC第一页/image-20231029115756413.png\" alt=\"image-20231029115756413\" style=\"zoom:67%;\" />\n\n爆出来密码是`2563`，解压：\n\n<img src=\"BUU MISC第一页/image-20231029120238846.png\" alt=\"image-20231029120238846\" style=\"zoom:67%;\" />\n\n一眼base64加密：\n\n<img src=\"BUU MISC第一页/image-20231029120258482.png\" alt=\"image-20231029120258482\" style=\"zoom:67%;\" />\n\n得到flag：`flag{70354300a5100ba78068805661b93a5c}`。\n\n### 10.文件中的秘密\n\n<img src=\"BUU MISC第一页/image-20231102212518643.png\" alt=\"image-20231102212518643\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载下来得到的是一张图片：\n\n<img src=\"BUU MISC第一页/image-20231102213104750.png\" alt=\"image-20231102213104750\" style=\"zoom:67%;\" />\n\n用010看一下：\n\n<img src=\"BUU MISC第一页/image-20231102213431727.png\" alt=\"image-20231102213431727\" style=\"zoom:67%;\" />\n\n找到了flag：`flag{870c5a72806115cb5439345d8b014396}`。\n\n本题还有另外两种方法：\n\n第一种是直接右键打开属性，在详细属性的备注中就是flag：\n\n<img src=\"BUU MISC第一页/image-20231102213403194.png\" alt=\"image-20231102213403194\" style=\"zoom:67%;\" />\n\n第二种是在**Notepad++**中安装Hex插件，用16进制查看文件：\n\n<img src=\"BUU MISC第一页/image-20231102213914912.png\" alt=\"image-20231102213914912\" style=\"zoom:67%;\" />\n\n第二种和用010查看是一样的。\n\n### 11.LSB\n\n<img src=\"BUU MISC第一页/image-20231102214029035.png\" alt=\"image-20231102214029035\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载下来是这样的一个文件：\n\n<img src=\"BUU MISC第一页/image-20231102214111978.png\" alt=\"image-20231102214111978\" style=\"zoom:67%;\" />\n\nlsb是指最低有效位隐写，直接用stegslove打开查看：\n\n<img src=\"BUU MISC第一页/image-20231102214520587.png\" alt=\"image-20231102214520587\" style=\"zoom:67%;\" />\n\n注意文件头是一个PNG，点**Save Bin**保存：\n\n<img src=\"BUU MISC第一页/image-20231102214609938.png\" alt=\"image-20231102214609938\" style=\"zoom:67%;\" />\n\n回文件夹看发现图片居然变成了二维码，再用QR扫下：\n\n<img src=\"BUU MISC第一页/image-20231102214710293.png\" alt=\"image-20231102214710293\" style=\"zoom:67%;\" />\n\n改下flag头得到flag：`flag{1sb_i4_s0_Ea4y}`。\n\n### 12.zip伪加密\n\n本题来自buuctf，所用工具为010 Editor(也可使用WinHex)。\n\n附件下载下来是一个压缩文件，我们不能直接打开flag文件，提示需要密码，联系题目叫做zip伪加密，所以我们使用工具来进行去加密。\n\n<img src=\"BUU MISC第一页/image-20231002094128310.png\" alt=\"image-20231002094128310\" style=\"zoom:67%;\" />\n\n压缩源文件数据区：50 4B 03 04：这是头文件标记\n\n压缩源文件目录区：\n\n50 4B 01 02：目录中文件文件头标记\n\n3F 00：压缩使用的 pkware 版本 \n14 00：解压文件所需 pkware 版本 \n00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）\n\n压缩源文件目录结束标志 ：50 4B 05 06：目录结束标记 \n\n因此我们将图中框出的`09 00`改为`00 00`并保存，就可以得到一个成功解压的文件夹：\n\n<img src=\"BUU MISC第一页/image-20231002094431742.png\" alt=\"image-20231002094431742\" style=\"zoom:67%;\" />\n\n打开就能找到flag了，本题flag为：`flag{Adm1N-B2G-kU-SZIP}`。\n\n### 13.被嗅探的流量\n\n<img src=\"BUU MISC第一页/image-20231102214846232.png\" alt=\"image-20231102214846232\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载的流量包用wireshark打开，照例先http过滤一下：\n\n<img src=\"BUU MISC第一页/image-20231102215106284.png\" alt=\"image-20231102215106284\" style=\"zoom:67%;\" />\n\n挨个看到这就找到flag了，追踪TCP流：\n\n<img src=\"BUU MISC第一页/image-20231102215310432.png\" alt=\"image-20231102215310432\" style=\"zoom:67%;\" />\n\nflag为`flag{da73d88936010da1eeeb36e945ec4b97}`。\n\n### 14.rar\n\n<img src=\"BUU MISC第一页/image-20231209094829089.png\" alt=\"image-20231209094829089\" style=\"zoom:67%;\" />\n\n下载下来得到一个加密的rar压缩包，直接爆破四位纯数字密码：\n\n<img src=\"BUU MISC第一页/image-20231209094950730.png\" alt=\"image-20231209094950730\" style=\"zoom:67%;\" />\n\n得到密码`8795，解压得到flag：\n\n<img src=\"BUU MISC第一页/image-20231209095025603.png\" alt=\"image-20231209095025603\" style=\"zoom:67%;\" />\n\nflag为：`flag{1773c5da790bd3caff38e3decd180eb7}`。\n\n### 15.qr\n\n<img src=\"BUU MISC第一页/image-20231102215855616.png\" alt=\"image-20231102215855616\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n这题下载下来就是一个二维码：\n\n<img src=\"BUU MISC第一页/image-20231102220055514.png\" alt=\"image-20231102220055514\" style=\"zoom:67%;\" />\n\n用QR扫一下：\n\n<img src=\"BUU MISC第一页/image-20231102220155299.png\" alt=\"image-20231102220155299\" style=\"zoom:67%;\" />\n\n得到flag：`flag{878865ce73370a4ce607d21ca01b5e59}`。\n\n### 16.镜子里面的世界\n\n<img src=\"BUU MISC第一页/image-20231029005308275.png\" alt=\"image-20231029005308275\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件打开是这样的一张图片：\n\n<img src=\"BUU MISC第一页/image-20231029005951080.png\" alt=\"image-20231029005951080\" style=\"zoom:67%;\" />\n\n看不出什么东西，用stegsolve工具看看：\n\n<img src=\"BUU MISC第一页/image-20231029010246211.png\" alt=\"image-20231029010246211\" style=\"zoom:67%;\" />\n\n找到了，flag为：`flag{st3g0_saurus_wr3cks}`。\n\n### 17.ningen\n\n<img src=\"BUU MISC第一页/image-20231102220347569.png\" alt=\"image-20231102220347569\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载下来是这样的图片：\n\n<img src=\"BUU MISC第一页/image-20231102220519996.png\" alt=\"image-20231102220519996\" style=\"zoom:67%;\" />\n\n查看属性没问题，用010看看：\n\n<img src=\"BUU MISC第一页/image-20231102220653728.png\" alt=\"image-20231102220653728\" style=\"zoom:67%;\" />\n\n图片里面好像藏了压缩包，用binwalk分离一下：\n\n<img src=\"BUU MISC第一页/image-20231102221201766.png\" alt=\"image-20231102221201766\" style=\"zoom:67%;\" />\n\n得到一个加密的压缩包，拖出来用工具爆一下4位纯数字密码：\n\n<img src=\"BUU MISC第一页/image-20231102221521959.png\" alt=\"image-20231102221521959\" style=\"zoom:67%;\" />\n\n爆出来密码为`8368`\n\n<img src=\"BUU MISC第一页/image-20231102221601915.png\" alt=\"image-20231102221601915\" style=\"zoom:67%;\" />\n\n得到flag：`flag{b025fc9ca797a67d2103bfbc407a6d5f}`。\n\n### 18.爱因斯坦\n\n本题来自buuctf，使用的是kali虚拟机。\n\n下载附件后得到的是一张爱因斯坦的照片，东看西看没啥提示，唯一奇怪的地方是属性中有一条备注。\n\n<img src=\"BUU MISC第一页/image-20230930212147299.png\" alt=\"image-20230930212147299\" style=\"zoom:67%;\" />\n\n没有思路后询问了学长，学长告诉我可以用kali的binwalk文件分离提取，我上网搜索了操作教程：\n\n<img src=\"BUU MISC第一页/image-20230930212627558.png\" alt=\"image-20230930212627558\" style=\"zoom:67%;\" />\n\n打开kali虚拟机，将附件中解压出的``misc2.jpg`文件拖进去\n\n<img src=\"BUU MISC第一页/image-20230930213026565.png\" alt=\"image-20230930213026565\" style=\"zoom:67%;\" />\n\n随后打开终端，按顺序输入以下两条指令，第一条的意思是转到桌面文件夹(因为我们的jpg文件就放在桌面)，第二条就是按照教程来写的，将这个jpg文件中的隐藏压缩文件分离出来。\n\n<img src=\"BUU MISC第一页/image-20230930213249124.png\" alt=\"image-20230930213249124\" style=\"zoom:67%;\" />\n\n此时我们桌面上就出现了这个文件夹，打开它就会看到藏着flag的压缩文件。\n\n<img src=\"BUU MISC第一页/image-20230930213621224.png\" alt=\"image-20230930213621224\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20230930213829225.png\" alt=\"image-20230930213829225\" style=\"zoom:67%;\" />\n\n一路点开发现，想要得到flag竟然需要密码！那么密码是啥呢？还记得一开始在属性里面奇怪的备注吗？`this_is_not_password`，这个就是密码！OS：不得不说ctf真的有趣且折磨\n\n<img src=\"BUU MISC第一页/image-20230930213926268.png\" alt=\"image-20230930213926268\" style=\"zoom: 67%;\" />\n\n输入密码，打开txt文件就得到本题的flag了：`flag{dd22a92bf2cceb6c0cd0d6b83ff51606}`。\n\n<img src=\"BUU MISC第一页/image-20230930214228085.png\" alt=\"image-20230930214228085\" style=\"zoom:67%;\" />\n\n### 19.小明的保险箱\n\n<img src=\"BUU MISC第一页/image-20231102221721436.png\" alt=\"image-20231102221721436\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n看了题目描述，估计又是压缩包密码爆破，题目下载下来是一张图片:\n\n<img src=\"BUU MISC第一页/image-20231102221834000.png\" alt=\"image-20231102221834000\" style=\"zoom:67%;\" />\n\n先看属性没东西，再看010：\n\n<img src=\"BUU MISC第一页/image-20231102222126043.png\" alt=\"image-20231102222126043\" style=\"zoom:67%;\" />\n\n藏了个rar压缩包，binwalk出来：\n\n<img src=\"BUU MISC第一页/image-20231102222148401.png\" alt=\"image-20231102222148401\" style=\"zoom:67%;\" />\n\n用工具爆一下4位纯数字密码：\n\n<img src=\"BUU MISC第一页/image-20231102222308370.png\" alt=\"image-20231102222308370\" style=\"zoom:67%;\" />\n\n密码为：`7869`\n\n<img src=\"BUU MISC第一页/image-20231102222345938.png\" alt=\"image-20231102222345938\" style=\"zoom:67%;\" />\n\n得到flag：`flag{75a3d68bf071ee188c418ea6cf0bb043}`。\n\n### 20.easycap\n\n<img src=\"BUU MISC第一页/image-20231102222523421.png\" alt=\"image-20231102222523421\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载下来是一个流量包，发现只有TCP，追踪一下：\n\n<img src=\"BUU MISC第一页/image-20231102222908349.png\" alt=\"image-20231102222908349\" style=\"zoom:67%;\" />\n\n得到flag：`flag{385b87afc8671dee07550290d16a8071}`。\n\n### 21.隐藏的钥匙\n\n<img src=\"BUU MISC第一页/image-20231102223141331.png\" alt=\"image-20231102223141331\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载下来是这样的图片，看了属性没问题\n\n<img src=\"BUU MISC第一页/image-20231102223340945.png\" alt=\"image-20231102223340945\" style=\"zoom:67%;\" />\n\n看看010：\n\n<img src=\"BUU MISC第一页/image-20231102223501625.png\" alt=\"image-20231102223501625\" style=\"zoom:67%;\" />\n\n找到了flag，这个flag被base64加密了，在线解密一下：\n\n<img src=\"BUU MISC第一页/image-20231102223628322.png\" alt=\"image-20231102223628322\" style=\"zoom:67%;\" />\n\n得到flag：`flag{377cbadda1eca2f2f73d36277781f00a}`。\n\n### 22.另外一个世界\n\n<img src=\"BUU MISC第一页/image-20231102223807463.png\" alt=\"image-20231102223807463\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载下来是一张图片，看看属性没问题：\n\n<img src=\"BUU MISC第一页/image-20231102223852291.png\" alt=\"image-20231102223852291\" style=\"zoom:67%;\" />\n\n用010看到个怪东西：\n\n<img src=\"BUU MISC第一页/image-20231102224321611.png\" alt=\"image-20231102224321611\" style=\"zoom:67%;\" />\n\n一串二进制，翻译一下看看啥意思：\n\n<img src=\"BUU MISC第一页/image-20231102225030297.png\" alt=\"image-20231102225030297\" style=\"zoom:67%;\" />\n\n`koekj3s`?不知道是啥，用stegslove再看看图片也看不出来东西，去kali里面走一遍也没东西，那试试flag是不是`flag{koekj3s}`还真是。\n\n本题的flag为：`flag{koekj3s}`。\n\n### 23.FLAG\n\n<img src=\"BUU MISC第一页/image-20231102225220084.png\" alt=\"image-20231102225220084\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n题目下载下来是这样的图片：\n\n<img src=\"BUU MISC第一页/image-20231102225312706.png\" alt=\"image-20231102225312706\" style=\"zoom:67%;\" />\n\n看看属性没问题，看看010好像也没问题，用stegslove看看lsb：\n\n<img src=\"BUU MISC第一页/image-20231102225625699.png\" alt=\"image-20231102225625699\" style=\"zoom:67%;\" />\n\n好家伙，是个zip文件，**save bin**保存为**1.zip**，解压看看：\n\n<img src=\"BUU MISC第一页/image-20231102225844041.png\" alt=\"image-20231102225844041\" style=\"zoom:67%;\" />\n\n好像坏了，看看能用啥打开解压出来的玩意，我把我有的都拖了一遍，好家伙，可以用ida打开：\n\n<img src=\"BUU MISC第一页/image-20231102230035556.png\" alt=\"image-20231102230035556\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231102230147582.png\" alt=\"image-20231102230147582\" style=\"zoom:67%;\" />\n\n找到flag：`flag{dd0gf4c3tok3yb0ard4g41n~~~}`。\n\n搜了下这题的wp，先用**Notepad++**打开看看文件：\n\n<img src=\"BUU MISC第一页/image-20231102230514379.png\" alt=\"image-20231102230514379\" style=\"zoom:67%;\" />\n\n发现是ELF文件，所以才用ida打开。\n\n### 24.神秘龙卷风\n\n<img src=\"BUU MISC第一页/image-20231102230818881.png\" alt=\"image-20231102230818881\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载下来是一个带密码的压缩包，根据提示可以知道是4位纯数字密码，直接工具爆了：\n\n<img src=\"BUU MISC第一页/image-20231102231012323.png\" alt=\"image-20231102231012323\" style=\"zoom:67%;\" />\n\n密码为：`5463`\n\n得到这个样子的代码：\n\n<img src=\"BUU MISC第一页/image-20231102231106840.png\" alt=\"image-20231102231106840\" style=\"zoom:67%;\" />\n\n一眼顶针，鉴定为Brainfuck加密：\n\n<img src=\"BUU MISC第一页/image-20231102231640468.png\" alt=\"image-20231102231640468\" style=\"zoom:67%;\" />\n\n得到flag：`flag{e4bbef8bdf9743f8bf5b727a9f6332a8}`\n\n### 25.数据包中的线索\n\n<img src=\"BUU MISC第一页/image-20231102231956416.png\" alt=\"image-20231102231956416\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载下来是流量包，打开先http过滤：\n\n<img src=\"BUU MISC第一页/image-20231102233018433.png\" alt=\"image-20231102233018433\" style=\"zoom:67%;\" />\n\n追踪http流：\n\n<img src=\"BUU MISC第一页/image-20231102233059352.png\" alt=\"image-20231102233059352\" style=\"zoom:67%;\" />\n\n好大一坨，鉴定为base64加密：\n\n<img src=\"BUU MISC第一页/image-20231102233238234.png\" alt=\"image-20231102233238234\" style=\"zoom:67%;\" />\n\n得到**.jpg**文件：\n\n<img src=\"BUU MISC第一页/image-20231102233345082.png\" alt=\"image-20231102233345082\" style=\"zoom:67%;\" />\n\nflag为：`flag{209acebf6324a09671abc31c869de72c}`。\n\n### 26.假如给我三天光明\n\n<img src=\"BUU MISC第一页/image-20231102233459493.png\" alt=\"image-20231102233459493\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件下载下来是这样的：\n\n<img src=\"BUU MISC第一页/image-20231102233654669.png\" alt=\"image-20231102233654669\" style=\"zoom:67%;\" />\n\n这张图片上面是盲文：\n\n<img src=\"BUU MISC第一页/image-20231102233746895.png\" alt=\"image-20231102233746895\" style=\"zoom:67%;\" />\n\n翻译过来是：`kmdonowg`，应该就是压缩包的密码，成功打开得到一个音频文件，用**Audacity**打开发现是摩斯密码：\n\n<img src=\"BUU MISC第一页/image-20231102234139687.png\" alt=\"image-20231102234139687\" style=\"zoom:67%;\" />\n\n翻译过来是：`-.-. - ..-. .-- .--. . .. ----- ---.. --... ...-- ..--- ..--.. ..--- ...-- -.. --..`\n\n<img src=\"BUU MISC第一页/image-20231102234729104.png\" alt=\"image-20231102234729104\" style=\"zoom:67%;\" />\n\n这玩意解密出来是大写的，但最后发现flag是小写，所以flag为：\n\n`flag{wpei08732?23dz}`。\n\n### 27.后门查杀\n\n<img src=\"BUU MISC第一页/image-20231103003547955.png\" alt=\"image-20231103003547955\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件下载下来是一个网站源文件，搜索题目名字得知要下载WebShell扫描检测查杀工具，下载了河马查杀来做：\n\n<img src=\"BUU MISC第一页/image-20231103003839414.png\" alt=\"image-20231103003839414\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231103003852745.png\" alt=\"image-20231103003852745\" style=\"zoom:67%;\" />\n\n查到个php后门，去康康：\n\n<img src=\"BUU MISC第一页/image-20231103003948441.png\" alt=\"image-20231103003948441\" style=\"zoom:67%;\" />\n\n找到了，flag为：`flag{6ac45fb83b3bc355c024f5034b947dd3}`。\n\n### 28.webshell后门\n\n<img src=\"BUU MISC第一页/image-20231103004156589.png\" alt=\"image-20231103004156589\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件解压后也是一个网站源文件，直接开查：\n\n<img src=\"BUU MISC第一页/image-20231103004450135.png\" alt=\"image-20231103004450135\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231103004510022.png\" alt=\"image-20231103004510022\" style=\"zoom:67%;\" />\n\n一堆后门，进去康康：\n\n<img src=\"BUU MISC第一页/image-20231103004554135.png\" alt=\"image-20231103004554135\" style=\"zoom:67%;\" />\n\n找到了，那么flag为：`flag{ba8e6c6f35a53933b871480bb9a9545c}`。\n\n### 29.来首歌吧\n\n<img src=\"BUU MISC第一页/image-20231103004735062.png\" alt=\"image-20231103004735062\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件下下来是一个音频文件，打开康康：\n\n<img src=\"BUU MISC第一页/image-20231103005021667.png\" alt=\"image-20231103005021667\" style=\"zoom:67%;\" />\n\n一眼摩斯密码，翻译一下：`..... -... -.-. ----. ..--- ..... -.... ....- ----. -.-. -... ----- .---- ---.. ---.. ..-. ..... ..--- . -.... .---- --... -.. --... ----- ----. ..--- ----. .---- ----. .---- -.-.`\n\n<img src=\"BUU MISC第一页/image-20231103005639019.png\" alt=\"image-20231103005639019\" style=\"zoom:67%;\" />\n\n得到flag：`flag{5BC925649CB0188F52E617D70929191C}`。\n\n### 30.荷兰宽带数据泄露\n\n<img src=\"BUU MISC第一页/image-20231103005837061.png\" alt=\"image-20231103005837061\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n题目附件下载下来是**.bin**文件\n\n<img src=\"BUU MISC第一页/image-20231103005941061.png\" alt=\"image-20231103005941061\" style=\"zoom:67%;\" />\n\n这玩意还要再去下个工具：**routepassview**\n\n用工具打开文件：\n\n<img src=\"BUU MISC第一页/image-20231103010501946.png\" alt=\"image-20231103010501946\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231103010715509.png\" alt=\"image-20231103010715509\" style=\"zoom:67%;\" />\n\n这边找到了username和password，试试哪个是flag。\n\nflag是username的：`flag{053700357621}`。\n\n### 31.面具下的flag\n\n<img src=\"BUU MISC第一页/image-20231103010912859.png\" alt=\"image-20231103010912859\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件下载下来是一张图片：\n\n<img src=\"BUU MISC第一页/image-20231103011023899.png\" alt=\"image-20231103011023899\" style=\"zoom:67%;\" />\n\n感觉宽高不太对啊，改改看，用工具说没问题，看看010里面啥样：\n\n<img src=\"BUU MISC第一页/image-20231103011342352.png\" alt=\"image-20231103011342352\" style=\"zoom:67%;\" />\n\n有pk、有flag字样，试试binwalk分离：\n\n<img src=\"BUU MISC第一页/image-20231103011637325.png\" alt=\"image-20231103011637325\" style=\"zoom:67%;\" />\n\n分离出来一个压缩包，用010看发现是伪加密，把`09 00`改成`00 00`，保存：\n\n<img src=\"BUU MISC第一页/image-20231103012341902.png\" alt=\"image-20231103012341902\" style=\"zoom:67%;\" />\n\n成功解压出来：\n\n<img src=\"BUU MISC第一页/image-20231103012644500.png\" alt=\"image-20231103012644500\" style=\"zoom:67%;\" />\n\n在网上搜了，说用**.7z**就可以查看vmdk文件了，用看看：\n\n<img src=\"BUU MISC第一页/image-20231103013233392.png\" alt=\"image-20231103013233392\" style=\"zoom:67%;\" />\n\n![image-20231103013245028](BUU MISC第一页/image-20231103013245028.png)\n\n<img src=\"BUU MISC第一页/image-20231103013306460.png\" alt=\"image-20231103013306460\" style=\"zoom:67%;\" />\n\n可恶，在windows上面看不到，那试试Linux，打开kali输入`7z x flag.vmdk `，得到了文件夹：\n\n<img src=\"BUU MISC第一页/image-20231103013456425.png\" alt=\"image-20231103013456425\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231103013524387.png\" alt=\"image-20231103013524387\" style=\"zoom:67%;\" />\n\n一眼鉴定为Brainfuck，在线解密康康：\n\n<img src=\"BUU MISC第一页/image-20231103013646579.png\" alt=\"image-20231103013646579\" style=\"zoom:67%;\" />\n\n得到前半截flag：`flag{N7F5_AD5`\n\n<img src=\"BUU MISC第一页/image-20231103013729241.png\" alt=\"image-20231103013729241\" style=\"zoom:67%;\" />\n\nOok解密：\n\n<img src=\"BUU MISC第一页/image-20231103013912432.png\" alt=\"image-20231103013912432\" style=\"zoom:67%;\" />\n\n得到后半截flag：`_i5_funny!}`\n\n最终flag为：`flag{N7F5_AD5_i5_funny!}`。\n\n### 32.九连环\n\n<img src=\"BUU MISC第一页/image-20231103014131334.png\" alt=\"image-20231103014131334\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件下载下来是一张图片：\n\n<img src=\"BUU MISC第一页/image-20231103221255746.png\" alt=\"image-20231103221255746\" style=\"zoom:67%;\" />\n\n属性没事，010康康：\n\n<img src=\"BUU MISC第一页/image-20231103221622135.png\" alt=\"image-20231103221622135\" style=\"zoom:67%;\" />\n\n图片里面藏了压缩i包，用binwalk分离出来：\n\n<img src=\"BUU MISC第一页/image-20231104014235292.png\" alt=\"image-20231104014235292\" style=\"zoom:67%;\" />\n\n拖出来用010打开：\n\n<img src=\"BUU MISC第一页/image-20231104014429443.png\" alt=\"image-20231104014429443\" style=\"zoom:67%;\" />\n\n发现是zip伪加密，将`00 01`改为`00 00`就可以了\n\n<img src=\"BUU MISC第一页/image-20231104014606341.png\" alt=\"image-20231104014606341\" style=\"zoom:67%;\" />\n\n成功解压，得到另一个加密的文件夹。\n\n<img src=\"BUU MISC第一页/image-20231104014643534.png\" alt=\"image-20231104014643534\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231104015204886.png\" alt=\"image-20231104015204886\" style=\"zoom:67%;\" />\n\n这回好像是真的加密了，改了没用，那看看图片有没有藏东西：\n\n<img src=\"BUU MISC第一页/image-20231104015842337.png\" alt=\"image-20231104015842337\" style=\"zoom:67%;\" />\n\nbinwalk没用，steghide发现藏了**ko.txt**文件，输入`steghide extract -sf good-已合并.jpg`提取出来\n\n<img src=\"BUU MISC第一页/image-20231104020108651.png\" alt=\"image-20231104020108651\" style=\"zoom:67%;\" />\n\n打开不知道是啥，试试是不是压缩包的密码，解压成功，得到flag：\n\n<img src=\"BUU MISC第一页/image-20231104020306299.png\" alt=\"image-20231104020306299\" style=\"zoom:67%;\" />\n\nflag为：`flag{1RTo8w@&4nK@z*XL}`。","source":"_posts/BUU MISC第一页.md","raw":"---\ntitle: BUU MISC第一页\ndate: 2023-11-4 20:00:00\ncover: /illust_99248298_20220722_142026.jpg\ntags: 做题记录\n---\n# BUU MISC第一页\n\n### 1.签到\n\n<img src=\"BUU MISC第一页/image-20231209093654842.png\" alt=\"image-20231209093654842\" style=\"zoom:67%;\" />\n\nflag为：`flag{buu_ctf}`。\n\n### 2.金三胖\n\n本题来自buuctf，所用工具为PuzzleSolver。\n\n题目给的附件下载之后得到的是一张金三胖的gif图片，我们仔细看会发现会有一瞬间闪烁出flag的字样，那我们可以猜到，flag一定是藏在这段gif图的某帧里。\n\n打开PuzzleSolver中的ImageTools，调整到拆分GIF，对gif图进行拆分，就可以得到一个文件夹，里面是每一帧的图片。\n\n<img src=\"BUU MISC第一页/image-20231001172555622.png\" alt=\"image-20231001172555622\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231001172947373.png\" alt=\"image-20231001172947373\" style=\"zoom:67%;\" />\n\n我们把这其中包含flag的三张组合起来，就可以得到：\n\n<img src=\"BUU MISC第一页/image-20231001173850299.png\" alt=\"image-20231001173850299\" style=\"zoom:67%;\" />\n\n即flag可能为：`flag{hello_hongke}`、`flag{hellohongke}`或者`flag{_hello_hongke}`。\n\n但奇怪的是这三条flag都无法提交。看了wp说flag是`flag{hello_hongke}`那这题我就算自己写出来了OwO。\n\n### 3.你竟然赶我走\n\n<img src=\"BUU MISC第一页/image-20231029010621087.png\" alt=\"image-20231029010621087\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件打开是一张图片，没啥特别的\n\n<img src=\"BUU MISC第一页/image-20231029010704171.png\" alt=\"image-20231029010704171\" style=\"zoom:67%;\" />\n\n用kali工具跑一遍，没有用，拿010看看：\n\n<img src=\"BUU MISC第一页/image-20231029011321260.png\" alt=\"image-20231029011321260\" style=\"zoom:67%;\" />\n\n好家伙，flag直接放在最后：`flag{stego_is_s0_bor1ing}`。\n\n### 4.二维码\n\n<img src=\"BUU MISC第一页/image-20231029003945960.png\" alt=\"image-20231029003945960\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n题目下载下来是一个二维码图片，扫一下：\n\n<img src=\"BUU MISC第一页/image-20231029004112936.png\" alt=\"image-20231029004112936\" style=\"zoom:67%;\" />\n\n看到这段话：`secret is here`，这玩意绝对不是flag，既然是图片，那用kali的工具跑一遍：\n\n<img src=\"BUU MISC第一页/image-20231029004556450.png\" alt=\"image-20231029004556450\" style=\"zoom:67%;\" />\n\nbinwalk出来一个加密的zip压缩包，不知道密码，直接用工具爆破：\n\n<img src=\"BUU MISC第一页/image-20231029004746711.png\" alt=\"image-20231029004746711\" style=\"zoom:67%;\" />\n\n爆出来密码是`7639`，解压得到文件**4number.txt**：\n\n<img src=\"BUU MISC第一页/image-20231029004836940.png\" alt=\"image-20231029004836940\" style=\"zoom:67%;\" />\n\n得到flag，改下flag头：`flag{vjpw_wnoei}`。\n\n### 5.大白\n\n本题来自buuctf，所用软件为WinHex。\n\n<img src=\"BUU MISC第一页/image-20230930163911778.png\" alt=\"image-20230930163911778\" style=\"zoom: 67%;\" />\n\nxxxxxxxxxx if(a) {    if(b) {        xxx    }else{        xxxx    }}else{    xxxxx}c\n\n<img src=\"BUU MISC第一页/image-20230930164004910.png\" alt=\"image-20230930164004910\" style=\"zoom: 67%;\" />\n\n看起来这个大白好像不太对劲，下半身没有露出来，我猜测这题用的便是图片隐写，根据题目的提示，那么flag应该就藏在大白没有露出来的身体上。\n\n<img src=\"BUU MISC第一页/image-20230930164221394.png\" alt=\"image-20230930164221394\" style=\"zoom:67%;\" />\n\n用WinHex打开图片文件，找到第二行的这两个位置，在十六进制下，这两个对应的分别是图片的宽和高，我们将`01 00`也改成`02 A7`，这样我们就可以得到一张1：1大小的大白图片。\n\n<img src=\"BUU MISC第一页/image-20230930173034922.png\" alt=\"image-20230930173034922\" style=\"zoom:67%;\" />\n\n按下`cirl+s`进行保存，更新图片文件，得到：\n\n<img src=\"BUU MISC第一页/image-20230930173205837.png\" alt=\"image-20230930173205837\" style=\"zoom:67%;\" />\n\n在大白肚子上就写着本题的flag：`flag{He1l0_d4_ba1}`。\n\n### 6.N种方法解决\n\n![image-20231209093808700](BUU MISC第一页/image-20231209093808700.png)\n\n用010打开得到一段base64密文，解密一下：\n\n<img src=\"BUU MISC第一页/image-20231209094139199.png\" alt=\"image-20231209094139199\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231209094240801.png\" alt=\"image-20231209094240801\" style=\"zoom:67%;\" />\n\n得到一个png图片，是一张二维码：\n\n<img src=\"BUU MISC第一页/image-20231209094302547.png\" alt=\"image-20231209094302547\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231209094335558.png\" alt=\"image-20231209094335558\" style=\"zoom:67%;\" />\n\n扫一下得到flag：`flag{dca57f966e4e4e31fd5b15417da63269}`。\n\n### 7.乌镇峰会种图\n\n<img src=\"BUU MISC第一页/image-20231029115441069.png\" alt=\"image-20231029115441069\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n这题下载下来是图片，扔进010：\n\n<img src=\"BUU MISC第一页/image-20231029115542623.png\" alt=\"image-20231029115542623\" style=\"zoom:67%;\" />\n\n直接找到flag：`flag{97314e7864a8f62627b26f3f998c37f1}`。\n\n###   8.wireshark\n\n<img src=\"BUU MISC第一页/image-20231028224942131.png\" alt=\"image-20231028224942131\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件下载下来用wireshark打开，先http过滤：\n\n<img src=\"BUU MISC第一页/image-20231028234454306.png\" alt=\"image-20231028234454306\" style=\"zoom:67%;\" />\n\n根据题目提示，找管理员登陆网站的那条记录，同时直接用字符串查找一下flag试试：\n\n<img src=\"BUU MISC第一页/image-20231028234954685.png\" alt=\"image-20231028234954685\" style=\"zoom:67%;\" />\n\n找到这一条，右键追踪tcp流：\n\n<img src=\"BUU MISC第一页/image-20231028235343604.png\" alt=\"image-20231028235343604\" style=\"zoom:67%;\" />\n\npassword内容就是flag，本题flag为：`flag{ffb7567a1d4f4abdffdb54e022f8facd}`。\n\n### 9.基础破解\n\n<img src=\"BUU MISC第一页/image-20231029115626925.png\" alt=\"image-20231029115626925\" style=\"zoom:67%;\" />\n\n这题下载下来是一个加密的压缩包，用ARCHPR直接暴力破解：\n\n<img src=\"BUU MISC第一页/image-20231029115756413.png\" alt=\"image-20231029115756413\" style=\"zoom:67%;\" />\n\n爆出来密码是`2563`，解压：\n\n<img src=\"BUU MISC第一页/image-20231029120238846.png\" alt=\"image-20231029120238846\" style=\"zoom:67%;\" />\n\n一眼base64加密：\n\n<img src=\"BUU MISC第一页/image-20231029120258482.png\" alt=\"image-20231029120258482\" style=\"zoom:67%;\" />\n\n得到flag：`flag{70354300a5100ba78068805661b93a5c}`。\n\n### 10.文件中的秘密\n\n<img src=\"BUU MISC第一页/image-20231102212518643.png\" alt=\"image-20231102212518643\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载下来得到的是一张图片：\n\n<img src=\"BUU MISC第一页/image-20231102213104750.png\" alt=\"image-20231102213104750\" style=\"zoom:67%;\" />\n\n用010看一下：\n\n<img src=\"BUU MISC第一页/image-20231102213431727.png\" alt=\"image-20231102213431727\" style=\"zoom:67%;\" />\n\n找到了flag：`flag{870c5a72806115cb5439345d8b014396}`。\n\n本题还有另外两种方法：\n\n第一种是直接右键打开属性，在详细属性的备注中就是flag：\n\n<img src=\"BUU MISC第一页/image-20231102213403194.png\" alt=\"image-20231102213403194\" style=\"zoom:67%;\" />\n\n第二种是在**Notepad++**中安装Hex插件，用16进制查看文件：\n\n<img src=\"BUU MISC第一页/image-20231102213914912.png\" alt=\"image-20231102213914912\" style=\"zoom:67%;\" />\n\n第二种和用010查看是一样的。\n\n### 11.LSB\n\n<img src=\"BUU MISC第一页/image-20231102214029035.png\" alt=\"image-20231102214029035\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载下来是这样的一个文件：\n\n<img src=\"BUU MISC第一页/image-20231102214111978.png\" alt=\"image-20231102214111978\" style=\"zoom:67%;\" />\n\nlsb是指最低有效位隐写，直接用stegslove打开查看：\n\n<img src=\"BUU MISC第一页/image-20231102214520587.png\" alt=\"image-20231102214520587\" style=\"zoom:67%;\" />\n\n注意文件头是一个PNG，点**Save Bin**保存：\n\n<img src=\"BUU MISC第一页/image-20231102214609938.png\" alt=\"image-20231102214609938\" style=\"zoom:67%;\" />\n\n回文件夹看发现图片居然变成了二维码，再用QR扫下：\n\n<img src=\"BUU MISC第一页/image-20231102214710293.png\" alt=\"image-20231102214710293\" style=\"zoom:67%;\" />\n\n改下flag头得到flag：`flag{1sb_i4_s0_Ea4y}`。\n\n### 12.zip伪加密\n\n本题来自buuctf，所用工具为010 Editor(也可使用WinHex)。\n\n附件下载下来是一个压缩文件，我们不能直接打开flag文件，提示需要密码，联系题目叫做zip伪加密，所以我们使用工具来进行去加密。\n\n<img src=\"BUU MISC第一页/image-20231002094128310.png\" alt=\"image-20231002094128310\" style=\"zoom:67%;\" />\n\n压缩源文件数据区：50 4B 03 04：这是头文件标记\n\n压缩源文件目录区：\n\n50 4B 01 02：目录中文件文件头标记\n\n3F 00：压缩使用的 pkware 版本 \n14 00：解压文件所需 pkware 版本 \n00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）\n\n压缩源文件目录结束标志 ：50 4B 05 06：目录结束标记 \n\n因此我们将图中框出的`09 00`改为`00 00`并保存，就可以得到一个成功解压的文件夹：\n\n<img src=\"BUU MISC第一页/image-20231002094431742.png\" alt=\"image-20231002094431742\" style=\"zoom:67%;\" />\n\n打开就能找到flag了，本题flag为：`flag{Adm1N-B2G-kU-SZIP}`。\n\n### 13.被嗅探的流量\n\n<img src=\"BUU MISC第一页/image-20231102214846232.png\" alt=\"image-20231102214846232\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载的流量包用wireshark打开，照例先http过滤一下：\n\n<img src=\"BUU MISC第一页/image-20231102215106284.png\" alt=\"image-20231102215106284\" style=\"zoom:67%;\" />\n\n挨个看到这就找到flag了，追踪TCP流：\n\n<img src=\"BUU MISC第一页/image-20231102215310432.png\" alt=\"image-20231102215310432\" style=\"zoom:67%;\" />\n\nflag为`flag{da73d88936010da1eeeb36e945ec4b97}`。\n\n### 14.rar\n\n<img src=\"BUU MISC第一页/image-20231209094829089.png\" alt=\"image-20231209094829089\" style=\"zoom:67%;\" />\n\n下载下来得到一个加密的rar压缩包，直接爆破四位纯数字密码：\n\n<img src=\"BUU MISC第一页/image-20231209094950730.png\" alt=\"image-20231209094950730\" style=\"zoom:67%;\" />\n\n得到密码`8795，解压得到flag：\n\n<img src=\"BUU MISC第一页/image-20231209095025603.png\" alt=\"image-20231209095025603\" style=\"zoom:67%;\" />\n\nflag为：`flag{1773c5da790bd3caff38e3decd180eb7}`。\n\n### 15.qr\n\n<img src=\"BUU MISC第一页/image-20231102215855616.png\" alt=\"image-20231102215855616\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n这题下载下来就是一个二维码：\n\n<img src=\"BUU MISC第一页/image-20231102220055514.png\" alt=\"image-20231102220055514\" style=\"zoom:67%;\" />\n\n用QR扫一下：\n\n<img src=\"BUU MISC第一页/image-20231102220155299.png\" alt=\"image-20231102220155299\" style=\"zoom:67%;\" />\n\n得到flag：`flag{878865ce73370a4ce607d21ca01b5e59}`。\n\n### 16.镜子里面的世界\n\n<img src=\"BUU MISC第一页/image-20231029005308275.png\" alt=\"image-20231029005308275\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件打开是这样的一张图片：\n\n<img src=\"BUU MISC第一页/image-20231029005951080.png\" alt=\"image-20231029005951080\" style=\"zoom:67%;\" />\n\n看不出什么东西，用stegsolve工具看看：\n\n<img src=\"BUU MISC第一页/image-20231029010246211.png\" alt=\"image-20231029010246211\" style=\"zoom:67%;\" />\n\n找到了，flag为：`flag{st3g0_saurus_wr3cks}`。\n\n### 17.ningen\n\n<img src=\"BUU MISC第一页/image-20231102220347569.png\" alt=\"image-20231102220347569\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载下来是这样的图片：\n\n<img src=\"BUU MISC第一页/image-20231102220519996.png\" alt=\"image-20231102220519996\" style=\"zoom:67%;\" />\n\n查看属性没问题，用010看看：\n\n<img src=\"BUU MISC第一页/image-20231102220653728.png\" alt=\"image-20231102220653728\" style=\"zoom:67%;\" />\n\n图片里面好像藏了压缩包，用binwalk分离一下：\n\n<img src=\"BUU MISC第一页/image-20231102221201766.png\" alt=\"image-20231102221201766\" style=\"zoom:67%;\" />\n\n得到一个加密的压缩包，拖出来用工具爆一下4位纯数字密码：\n\n<img src=\"BUU MISC第一页/image-20231102221521959.png\" alt=\"image-20231102221521959\" style=\"zoom:67%;\" />\n\n爆出来密码为`8368`\n\n<img src=\"BUU MISC第一页/image-20231102221601915.png\" alt=\"image-20231102221601915\" style=\"zoom:67%;\" />\n\n得到flag：`flag{b025fc9ca797a67d2103bfbc407a6d5f}`。\n\n### 18.爱因斯坦\n\n本题来自buuctf，使用的是kali虚拟机。\n\n下载附件后得到的是一张爱因斯坦的照片，东看西看没啥提示，唯一奇怪的地方是属性中有一条备注。\n\n<img src=\"BUU MISC第一页/image-20230930212147299.png\" alt=\"image-20230930212147299\" style=\"zoom:67%;\" />\n\n没有思路后询问了学长，学长告诉我可以用kali的binwalk文件分离提取，我上网搜索了操作教程：\n\n<img src=\"BUU MISC第一页/image-20230930212627558.png\" alt=\"image-20230930212627558\" style=\"zoom:67%;\" />\n\n打开kali虚拟机，将附件中解压出的``misc2.jpg`文件拖进去\n\n<img src=\"BUU MISC第一页/image-20230930213026565.png\" alt=\"image-20230930213026565\" style=\"zoom:67%;\" />\n\n随后打开终端，按顺序输入以下两条指令，第一条的意思是转到桌面文件夹(因为我们的jpg文件就放在桌面)，第二条就是按照教程来写的，将这个jpg文件中的隐藏压缩文件分离出来。\n\n<img src=\"BUU MISC第一页/image-20230930213249124.png\" alt=\"image-20230930213249124\" style=\"zoom:67%;\" />\n\n此时我们桌面上就出现了这个文件夹，打开它就会看到藏着flag的压缩文件。\n\n<img src=\"BUU MISC第一页/image-20230930213621224.png\" alt=\"image-20230930213621224\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20230930213829225.png\" alt=\"image-20230930213829225\" style=\"zoom:67%;\" />\n\n一路点开发现，想要得到flag竟然需要密码！那么密码是啥呢？还记得一开始在属性里面奇怪的备注吗？`this_is_not_password`，这个就是密码！OS：不得不说ctf真的有趣且折磨\n\n<img src=\"BUU MISC第一页/image-20230930213926268.png\" alt=\"image-20230930213926268\" style=\"zoom: 67%;\" />\n\n输入密码，打开txt文件就得到本题的flag了：`flag{dd22a92bf2cceb6c0cd0d6b83ff51606}`。\n\n<img src=\"BUU MISC第一页/image-20230930214228085.png\" alt=\"image-20230930214228085\" style=\"zoom:67%;\" />\n\n### 19.小明的保险箱\n\n<img src=\"BUU MISC第一页/image-20231102221721436.png\" alt=\"image-20231102221721436\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n看了题目描述，估计又是压缩包密码爆破，题目下载下来是一张图片:\n\n<img src=\"BUU MISC第一页/image-20231102221834000.png\" alt=\"image-20231102221834000\" style=\"zoom:67%;\" />\n\n先看属性没东西，再看010：\n\n<img src=\"BUU MISC第一页/image-20231102222126043.png\" alt=\"image-20231102222126043\" style=\"zoom:67%;\" />\n\n藏了个rar压缩包，binwalk出来：\n\n<img src=\"BUU MISC第一页/image-20231102222148401.png\" alt=\"image-20231102222148401\" style=\"zoom:67%;\" />\n\n用工具爆一下4位纯数字密码：\n\n<img src=\"BUU MISC第一页/image-20231102222308370.png\" alt=\"image-20231102222308370\" style=\"zoom:67%;\" />\n\n密码为：`7869`\n\n<img src=\"BUU MISC第一页/image-20231102222345938.png\" alt=\"image-20231102222345938\" style=\"zoom:67%;\" />\n\n得到flag：`flag{75a3d68bf071ee188c418ea6cf0bb043}`。\n\n### 20.easycap\n\n<img src=\"BUU MISC第一页/image-20231102222523421.png\" alt=\"image-20231102222523421\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载下来是一个流量包，发现只有TCP，追踪一下：\n\n<img src=\"BUU MISC第一页/image-20231102222908349.png\" alt=\"image-20231102222908349\" style=\"zoom:67%;\" />\n\n得到flag：`flag{385b87afc8671dee07550290d16a8071}`。\n\n### 21.隐藏的钥匙\n\n<img src=\"BUU MISC第一页/image-20231102223141331.png\" alt=\"image-20231102223141331\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载下来是这样的图片，看了属性没问题\n\n<img src=\"BUU MISC第一页/image-20231102223340945.png\" alt=\"image-20231102223340945\" style=\"zoom:67%;\" />\n\n看看010：\n\n<img src=\"BUU MISC第一页/image-20231102223501625.png\" alt=\"image-20231102223501625\" style=\"zoom:67%;\" />\n\n找到了flag，这个flag被base64加密了，在线解密一下：\n\n<img src=\"BUU MISC第一页/image-20231102223628322.png\" alt=\"image-20231102223628322\" style=\"zoom:67%;\" />\n\n得到flag：`flag{377cbadda1eca2f2f73d36277781f00a}`。\n\n### 22.另外一个世界\n\n<img src=\"BUU MISC第一页/image-20231102223807463.png\" alt=\"image-20231102223807463\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载下来是一张图片，看看属性没问题：\n\n<img src=\"BUU MISC第一页/image-20231102223852291.png\" alt=\"image-20231102223852291\" style=\"zoom:67%;\" />\n\n用010看到个怪东西：\n\n<img src=\"BUU MISC第一页/image-20231102224321611.png\" alt=\"image-20231102224321611\" style=\"zoom:67%;\" />\n\n一串二进制，翻译一下看看啥意思：\n\n<img src=\"BUU MISC第一页/image-20231102225030297.png\" alt=\"image-20231102225030297\" style=\"zoom:67%;\" />\n\n`koekj3s`?不知道是啥，用stegslove再看看图片也看不出来东西，去kali里面走一遍也没东西，那试试flag是不是`flag{koekj3s}`还真是。\n\n本题的flag为：`flag{koekj3s}`。\n\n### 23.FLAG\n\n<img src=\"BUU MISC第一页/image-20231102225220084.png\" alt=\"image-20231102225220084\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n题目下载下来是这样的图片：\n\n<img src=\"BUU MISC第一页/image-20231102225312706.png\" alt=\"image-20231102225312706\" style=\"zoom:67%;\" />\n\n看看属性没问题，看看010好像也没问题，用stegslove看看lsb：\n\n<img src=\"BUU MISC第一页/image-20231102225625699.png\" alt=\"image-20231102225625699\" style=\"zoom:67%;\" />\n\n好家伙，是个zip文件，**save bin**保存为**1.zip**，解压看看：\n\n<img src=\"BUU MISC第一页/image-20231102225844041.png\" alt=\"image-20231102225844041\" style=\"zoom:67%;\" />\n\n好像坏了，看看能用啥打开解压出来的玩意，我把我有的都拖了一遍，好家伙，可以用ida打开：\n\n<img src=\"BUU MISC第一页/image-20231102230035556.png\" alt=\"image-20231102230035556\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231102230147582.png\" alt=\"image-20231102230147582\" style=\"zoom:67%;\" />\n\n找到flag：`flag{dd0gf4c3tok3yb0ard4g41n~~~}`。\n\n搜了下这题的wp，先用**Notepad++**打开看看文件：\n\n<img src=\"BUU MISC第一页/image-20231102230514379.png\" alt=\"image-20231102230514379\" style=\"zoom:67%;\" />\n\n发现是ELF文件，所以才用ida打开。\n\n### 24.神秘龙卷风\n\n<img src=\"BUU MISC第一页/image-20231102230818881.png\" alt=\"image-20231102230818881\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载下来是一个带密码的压缩包，根据提示可以知道是4位纯数字密码，直接工具爆了：\n\n<img src=\"BUU MISC第一页/image-20231102231012323.png\" alt=\"image-20231102231012323\" style=\"zoom:67%;\" />\n\n密码为：`5463`\n\n得到这个样子的代码：\n\n<img src=\"BUU MISC第一页/image-20231102231106840.png\" alt=\"image-20231102231106840\" style=\"zoom:67%;\" />\n\n一眼顶针，鉴定为Brainfuck加密：\n\n<img src=\"BUU MISC第一页/image-20231102231640468.png\" alt=\"image-20231102231640468\" style=\"zoom:67%;\" />\n\n得到flag：`flag{e4bbef8bdf9743f8bf5b727a9f6332a8}`\n\n### 25.数据包中的线索\n\n<img src=\"BUU MISC第一页/image-20231102231956416.png\" alt=\"image-20231102231956416\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n下载下来是流量包，打开先http过滤：\n\n<img src=\"BUU MISC第一页/image-20231102233018433.png\" alt=\"image-20231102233018433\" style=\"zoom:67%;\" />\n\n追踪http流：\n\n<img src=\"BUU MISC第一页/image-20231102233059352.png\" alt=\"image-20231102233059352\" style=\"zoom:67%;\" />\n\n好大一坨，鉴定为base64加密：\n\n<img src=\"BUU MISC第一页/image-20231102233238234.png\" alt=\"image-20231102233238234\" style=\"zoom:67%;\" />\n\n得到**.jpg**文件：\n\n<img src=\"BUU MISC第一页/image-20231102233345082.png\" alt=\"image-20231102233345082\" style=\"zoom:67%;\" />\n\nflag为：`flag{209acebf6324a09671abc31c869de72c}`。\n\n### 26.假如给我三天光明\n\n<img src=\"BUU MISC第一页/image-20231102233459493.png\" alt=\"image-20231102233459493\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件下载下来是这样的：\n\n<img src=\"BUU MISC第一页/image-20231102233654669.png\" alt=\"image-20231102233654669\" style=\"zoom:67%;\" />\n\n这张图片上面是盲文：\n\n<img src=\"BUU MISC第一页/image-20231102233746895.png\" alt=\"image-20231102233746895\" style=\"zoom:67%;\" />\n\n翻译过来是：`kmdonowg`，应该就是压缩包的密码，成功打开得到一个音频文件，用**Audacity**打开发现是摩斯密码：\n\n<img src=\"BUU MISC第一页/image-20231102234139687.png\" alt=\"image-20231102234139687\" style=\"zoom:67%;\" />\n\n翻译过来是：`-.-. - ..-. .-- .--. . .. ----- ---.. --... ...-- ..--- ..--.. ..--- ...-- -.. --..`\n\n<img src=\"BUU MISC第一页/image-20231102234729104.png\" alt=\"image-20231102234729104\" style=\"zoom:67%;\" />\n\n这玩意解密出来是大写的，但最后发现flag是小写，所以flag为：\n\n`flag{wpei08732?23dz}`。\n\n### 27.后门查杀\n\n<img src=\"BUU MISC第一页/image-20231103003547955.png\" alt=\"image-20231103003547955\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件下载下来是一个网站源文件，搜索题目名字得知要下载WebShell扫描检测查杀工具，下载了河马查杀来做：\n\n<img src=\"BUU MISC第一页/image-20231103003839414.png\" alt=\"image-20231103003839414\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231103003852745.png\" alt=\"image-20231103003852745\" style=\"zoom:67%;\" />\n\n查到个php后门，去康康：\n\n<img src=\"BUU MISC第一页/image-20231103003948441.png\" alt=\"image-20231103003948441\" style=\"zoom:67%;\" />\n\n找到了，flag为：`flag{6ac45fb83b3bc355c024f5034b947dd3}`。\n\n### 28.webshell后门\n\n<img src=\"BUU MISC第一页/image-20231103004156589.png\" alt=\"image-20231103004156589\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件解压后也是一个网站源文件，直接开查：\n\n<img src=\"BUU MISC第一页/image-20231103004450135.png\" alt=\"image-20231103004450135\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231103004510022.png\" alt=\"image-20231103004510022\" style=\"zoom:67%;\" />\n\n一堆后门，进去康康：\n\n<img src=\"BUU MISC第一页/image-20231103004554135.png\" alt=\"image-20231103004554135\" style=\"zoom:67%;\" />\n\n找到了，那么flag为：`flag{ba8e6c6f35a53933b871480bb9a9545c}`。\n\n### 29.来首歌吧\n\n<img src=\"BUU MISC第一页/image-20231103004735062.png\" alt=\"image-20231103004735062\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件下下来是一个音频文件，打开康康：\n\n<img src=\"BUU MISC第一页/image-20231103005021667.png\" alt=\"image-20231103005021667\" style=\"zoom:67%;\" />\n\n一眼摩斯密码，翻译一下：`..... -... -.-. ----. ..--- ..... -.... ....- ----. -.-. -... ----- .---- ---.. ---.. ..-. ..... ..--- . -.... .---- --... -.. --... ----- ----. ..--- ----. .---- ----. .---- -.-.`\n\n<img src=\"BUU MISC第一页/image-20231103005639019.png\" alt=\"image-20231103005639019\" style=\"zoom:67%;\" />\n\n得到flag：`flag{5BC925649CB0188F52E617D70929191C}`。\n\n### 30.荷兰宽带数据泄露\n\n<img src=\"BUU MISC第一页/image-20231103005837061.png\" alt=\"image-20231103005837061\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n题目附件下载下来是**.bin**文件\n\n<img src=\"BUU MISC第一页/image-20231103005941061.png\" alt=\"image-20231103005941061\" style=\"zoom:67%;\" />\n\n这玩意还要再去下个工具：**routepassview**\n\n用工具打开文件：\n\n<img src=\"BUU MISC第一页/image-20231103010501946.png\" alt=\"image-20231103010501946\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231103010715509.png\" alt=\"image-20231103010715509\" style=\"zoom:67%;\" />\n\n这边找到了username和password，试试哪个是flag。\n\nflag是username的：`flag{053700357621}`。\n\n### 31.面具下的flag\n\n<img src=\"BUU MISC第一页/image-20231103010912859.png\" alt=\"image-20231103010912859\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件下载下来是一张图片：\n\n<img src=\"BUU MISC第一页/image-20231103011023899.png\" alt=\"image-20231103011023899\" style=\"zoom:67%;\" />\n\n感觉宽高不太对啊，改改看，用工具说没问题，看看010里面啥样：\n\n<img src=\"BUU MISC第一页/image-20231103011342352.png\" alt=\"image-20231103011342352\" style=\"zoom:67%;\" />\n\n有pk、有flag字样，试试binwalk分离：\n\n<img src=\"BUU MISC第一页/image-20231103011637325.png\" alt=\"image-20231103011637325\" style=\"zoom:67%;\" />\n\n分离出来一个压缩包，用010看发现是伪加密，把`09 00`改成`00 00`，保存：\n\n<img src=\"BUU MISC第一页/image-20231103012341902.png\" alt=\"image-20231103012341902\" style=\"zoom:67%;\" />\n\n成功解压出来：\n\n<img src=\"BUU MISC第一页/image-20231103012644500.png\" alt=\"image-20231103012644500\" style=\"zoom:67%;\" />\n\n在网上搜了，说用**.7z**就可以查看vmdk文件了，用看看：\n\n<img src=\"BUU MISC第一页/image-20231103013233392.png\" alt=\"image-20231103013233392\" style=\"zoom:67%;\" />\n\n![image-20231103013245028](BUU MISC第一页/image-20231103013245028.png)\n\n<img src=\"BUU MISC第一页/image-20231103013306460.png\" alt=\"image-20231103013306460\" style=\"zoom:67%;\" />\n\n可恶，在windows上面看不到，那试试Linux，打开kali输入`7z x flag.vmdk `，得到了文件夹：\n\n<img src=\"BUU MISC第一页/image-20231103013456425.png\" alt=\"image-20231103013456425\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231103013524387.png\" alt=\"image-20231103013524387\" style=\"zoom:67%;\" />\n\n一眼鉴定为Brainfuck，在线解密康康：\n\n<img src=\"BUU MISC第一页/image-20231103013646579.png\" alt=\"image-20231103013646579\" style=\"zoom:67%;\" />\n\n得到前半截flag：`flag{N7F5_AD5`\n\n<img src=\"BUU MISC第一页/image-20231103013729241.png\" alt=\"image-20231103013729241\" style=\"zoom:67%;\" />\n\nOok解密：\n\n<img src=\"BUU MISC第一页/image-20231103013912432.png\" alt=\"image-20231103013912432\" style=\"zoom:67%;\" />\n\n得到后半截flag：`_i5_funny!}`\n\n最终flag为：`flag{N7F5_AD5_i5_funny!}`。\n\n### 32.九连环\n\n<img src=\"BUU MISC第一页/image-20231103014131334.png\" alt=\"image-20231103014131334\" style=\"zoom:67%;\" />\n\n本题来自buuctf。\n\n附件下载下来是一张图片：\n\n<img src=\"BUU MISC第一页/image-20231103221255746.png\" alt=\"image-20231103221255746\" style=\"zoom:67%;\" />\n\n属性没事，010康康：\n\n<img src=\"BUU MISC第一页/image-20231103221622135.png\" alt=\"image-20231103221622135\" style=\"zoom:67%;\" />\n\n图片里面藏了压缩i包，用binwalk分离出来：\n\n<img src=\"BUU MISC第一页/image-20231104014235292.png\" alt=\"image-20231104014235292\" style=\"zoom:67%;\" />\n\n拖出来用010打开：\n\n<img src=\"BUU MISC第一页/image-20231104014429443.png\" alt=\"image-20231104014429443\" style=\"zoom:67%;\" />\n\n发现是zip伪加密，将`00 01`改为`00 00`就可以了\n\n<img src=\"BUU MISC第一页/image-20231104014606341.png\" alt=\"image-20231104014606341\" style=\"zoom:67%;\" />\n\n成功解压，得到另一个加密的文件夹。\n\n<img src=\"BUU MISC第一页/image-20231104014643534.png\" alt=\"image-20231104014643534\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第一页/image-20231104015204886.png\" alt=\"image-20231104015204886\" style=\"zoom:67%;\" />\n\n这回好像是真的加密了，改了没用，那看看图片有没有藏东西：\n\n<img src=\"BUU MISC第一页/image-20231104015842337.png\" alt=\"image-20231104015842337\" style=\"zoom:67%;\" />\n\nbinwalk没用，steghide发现藏了**ko.txt**文件，输入`steghide extract -sf good-已合并.jpg`提取出来\n\n<img src=\"BUU MISC第一页/image-20231104020108651.png\" alt=\"image-20231104020108651\" style=\"zoom:67%;\" />\n\n打开不知道是啥，试试是不是压缩包的密码，解压成功，得到flag：\n\n<img src=\"BUU MISC第一页/image-20231104020306299.png\" alt=\"image-20231104020306299\" style=\"zoom:67%;\" />\n\nflag为：`flag{1RTo8w@&4nK@z*XL}`。","slug":"BUU MISC第一页","published":1,"updated":"2023-12-09T11:25:59.362Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq0w2ckv00018wv5dd1j2frk","content":"<h1 id=\"BUU-MISC第一页\"><a href=\"#BUU-MISC第一页\" class=\"headerlink\" title=\"BUU MISC第一页\"></a>BUU MISC第一页</h1><h3 id=\"1-签到\"><a href=\"#1-签到\" class=\"headerlink\" title=\"1.签到\"></a>1.签到</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231209093654842.png\" alt=\"image-20231209093654842\" data-caption=\"image-20231209093654842\" loading=\"lazy\">\n\n<p>flag为：<code>flag&#123;buu_ctf&#125;</code>。</p>\n<h3 id=\"2-金三胖\"><a href=\"#2-金三胖\" class=\"headerlink\" title=\"2.金三胖\"></a>2.金三胖</h3><p>本题来自buuctf，所用工具为PuzzleSolver。</p>\n<p>题目给的附件下载之后得到的是一张金三胖的gif图片，我们仔细看会发现会有一瞬间闪烁出flag的字样，那我们可以猜到，flag一定是藏在这段gif图的某帧里。</p>\n<p>打开PuzzleSolver中的ImageTools，调整到拆分GIF，对gif图进行拆分，就可以得到一个文件夹，里面是每一帧的图片。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231001172555622.png\" alt=\"image-20231001172555622\" data-caption=\"image-20231001172555622\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231001172947373.png\" alt=\"image-20231001172947373\" data-caption=\"image-20231001172947373\" loading=\"lazy\">\n\n<p>我们把这其中包含flag的三张组合起来，就可以得到：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231001173850299.png\" alt=\"image-20231001173850299\" data-caption=\"image-20231001173850299\" loading=\"lazy\">\n\n<p>即flag可能为：<code>flag&#123;hello_hongke&#125;</code>、<code>flag&#123;hellohongke&#125;</code>或者<code>flag&#123;_hello_hongke&#125;</code>。</p>\n<p>但奇怪的是这三条flag都无法提交。看了wp说flag是<code>flag&#123;hello_hongke&#125;</code>那这题我就算自己写出来了OwO。</p>\n<h3 id=\"3-你竟然赶我走\"><a href=\"#3-你竟然赶我走\" class=\"headerlink\" title=\"3.你竟然赶我走\"></a>3.你竟然赶我走</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029010621087.png\" alt=\"image-20231029010621087\" data-caption=\"image-20231029010621087\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>附件打开是一张图片，没啥特别的</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029010704171.png\" alt=\"image-20231029010704171\" data-caption=\"image-20231029010704171\" loading=\"lazy\">\n\n<p>用kali工具跑一遍，没有用，拿010看看：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029011321260.png\" alt=\"image-20231029011321260\" data-caption=\"image-20231029011321260\" loading=\"lazy\">\n\n<p>好家伙，flag直接放在最后：<code>flag&#123;stego_is_s0_bor1ing&#125;</code>。</p>\n<h3 id=\"4-二维码\"><a href=\"#4-二维码\" class=\"headerlink\" title=\"4.二维码\"></a>4.二维码</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029003945960.png\" alt=\"image-20231029003945960\" data-caption=\"image-20231029003945960\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>题目下载下来是一个二维码图片，扫一下：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029004112936.png\" alt=\"image-20231029004112936\" data-caption=\"image-20231029004112936\" loading=\"lazy\">\n\n<p>看到这段话：<code>secret is here</code>，这玩意绝对不是flag，既然是图片，那用kali的工具跑一遍：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029004556450.png\" alt=\"image-20231029004556450\" data-caption=\"image-20231029004556450\" loading=\"lazy\">\n\n<p>binwalk出来一个加密的zip压缩包，不知道密码，直接用工具爆破：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029004746711.png\" alt=\"image-20231029004746711\" data-caption=\"image-20231029004746711\" loading=\"lazy\">\n\n<p>爆出来密码是<code>7639</code>，解压得到文件<strong>4number.txt</strong>：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029004836940.png\" alt=\"image-20231029004836940\" data-caption=\"image-20231029004836940\" loading=\"lazy\">\n\n<p>得到flag，改下flag头：<code>flag&#123;vjpw_wnoei&#125;</code>。</p>\n<h3 id=\"5-大白\"><a href=\"#5-大白\" class=\"headerlink\" title=\"5.大白\"></a>5.大白</h3><p>本题来自buuctf，所用软件为WinHex。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930163911778.png\" alt=\"image-20230930163911778\" data-caption=\"image-20230930163911778\" loading=\"lazy\">\n\n<p>xxxxxxxxxx if(a) {    if(b) {        xxx    }else{        xxxx    }}else{    xxxxx}c</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930164004910.png\" alt=\"image-20230930164004910\" data-caption=\"image-20230930164004910\" loading=\"lazy\">\n\n<p>看起来这个大白好像不太对劲，下半身没有露出来，我猜测这题用的便是图片隐写，根据题目的提示，那么flag应该就藏在大白没有露出来的身体上。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930164221394.png\" alt=\"image-20230930164221394\" data-caption=\"image-20230930164221394\" loading=\"lazy\">\n\n<p>用WinHex打开图片文件，找到第二行的这两个位置，在十六进制下，这两个对应的分别是图片的宽和高，我们将<code>01 00</code>也改成<code>02 A7</code>，这样我们就可以得到一张1：1大小的大白图片。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930173034922.png\" alt=\"image-20230930173034922\" data-caption=\"image-20230930173034922\" loading=\"lazy\">\n\n<p>按下<code>cirl+s</code>进行保存，更新图片文件，得到：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930173205837.png\" alt=\"image-20230930173205837\" data-caption=\"image-20230930173205837\" loading=\"lazy\">\n\n<p>在大白肚子上就写着本题的flag：<code>flag&#123;He1l0_d4_ba1&#125;</code>。</p>\n<h3 id=\"6-N种方法解决\"><a href=\"#6-N种方法解决\" class=\"headerlink\" title=\"6.N种方法解决\"></a>6.N种方法解决</h3><p>![image-20231209093808700](BUU MISC第一页&#x2F;image-20231209093808700.png)</p>\n<p>用010打开得到一段base64密文，解密一下：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231209094139199.png\" alt=\"image-20231209094139199\" data-caption=\"image-20231209094139199\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231209094240801.png\" alt=\"image-20231209094240801\" data-caption=\"image-20231209094240801\" loading=\"lazy\">\n\n<p>得到一个png图片，是一张二维码：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231209094302547.png\" alt=\"image-20231209094302547\" data-caption=\"image-20231209094302547\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231209094335558.png\" alt=\"image-20231209094335558\" data-caption=\"image-20231209094335558\" loading=\"lazy\">\n\n<p>扫一下得到flag：<code>flag&#123;dca57f966e4e4e31fd5b15417da63269&#125;</code>。</p>\n<h3 id=\"7-乌镇峰会种图\"><a href=\"#7-乌镇峰会种图\" class=\"headerlink\" title=\"7.乌镇峰会种图\"></a>7.乌镇峰会种图</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029115441069.png\" alt=\"image-20231029115441069\" data-caption=\"image-20231029115441069\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>这题下载下来是图片，扔进010：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029115542623.png\" alt=\"image-20231029115542623\" data-caption=\"image-20231029115542623\" loading=\"lazy\">\n\n<p>直接找到flag：<code>flag&#123;97314e7864a8f62627b26f3f998c37f1&#125;</code>。</p>\n<h3 id=\"8-wireshark\"><a href=\"#8-wireshark\" class=\"headerlink\" title=\"8.wireshark\"></a>8.wireshark</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231028224942131.png\" alt=\"image-20231028224942131\" data-caption=\"image-20231028224942131\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>附件下载下来用wireshark打开，先http过滤：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231028234454306.png\" alt=\"image-20231028234454306\" data-caption=\"image-20231028234454306\" loading=\"lazy\">\n\n<p>根据题目提示，找管理员登陆网站的那条记录，同时直接用字符串查找一下flag试试：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231028234954685.png\" alt=\"image-20231028234954685\" data-caption=\"image-20231028234954685\" loading=\"lazy\">\n\n<p>找到这一条，右键追踪tcp流：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231028235343604.png\" alt=\"image-20231028235343604\" data-caption=\"image-20231028235343604\" loading=\"lazy\">\n\n<p>password内容就是flag，本题flag为：<code>flag&#123;ffb7567a1d4f4abdffdb54e022f8facd&#125;</code>。</p>\n<h3 id=\"9-基础破解\"><a href=\"#9-基础破解\" class=\"headerlink\" title=\"9.基础破解\"></a>9.基础破解</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029115626925.png\" alt=\"image-20231029115626925\" data-caption=\"image-20231029115626925\" loading=\"lazy\">\n\n<p>这题下载下来是一个加密的压缩包，用ARCHPR直接暴力破解：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029115756413.png\" alt=\"image-20231029115756413\" data-caption=\"image-20231029115756413\" loading=\"lazy\">\n\n<p>爆出来密码是<code>2563</code>，解压：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029120238846.png\" alt=\"image-20231029120238846\" data-caption=\"image-20231029120238846\" loading=\"lazy\">\n\n<p>一眼base64加密：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029120258482.png\" alt=\"image-20231029120258482\" data-caption=\"image-20231029120258482\" loading=\"lazy\">\n\n<p>得到flag：<code>flag&#123;70354300a5100ba78068805661b93a5c&#125;</code>。</p>\n<h3 id=\"10-文件中的秘密\"><a href=\"#10-文件中的秘密\" class=\"headerlink\" title=\"10.文件中的秘密\"></a>10.文件中的秘密</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102212518643.png\" alt=\"image-20231102212518643\" data-caption=\"image-20231102212518643\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>下载下来得到的是一张图片：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102213104750.png\" alt=\"image-20231102213104750\" data-caption=\"image-20231102213104750\" loading=\"lazy\">\n\n<p>用010看一下：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102213431727.png\" alt=\"image-20231102213431727\" data-caption=\"image-20231102213431727\" loading=\"lazy\">\n\n<p>找到了flag：<code>flag&#123;870c5a72806115cb5439345d8b014396&#125;</code>。</p>\n<p>本题还有另外两种方法：</p>\n<p>第一种是直接右键打开属性，在详细属性的备注中就是flag：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102213403194.png\" alt=\"image-20231102213403194\" data-caption=\"image-20231102213403194\" loading=\"lazy\">\n\n<p>第二种是在**Notepad++**中安装Hex插件，用16进制查看文件：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102213914912.png\" alt=\"image-20231102213914912\" data-caption=\"image-20231102213914912\" loading=\"lazy\">\n\n<p>第二种和用010查看是一样的。</p>\n<h3 id=\"11-LSB\"><a href=\"#11-LSB\" class=\"headerlink\" title=\"11.LSB\"></a>11.LSB</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102214029035.png\" alt=\"image-20231102214029035\" data-caption=\"image-20231102214029035\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>下载下来是这样的一个文件：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102214111978.png\" alt=\"image-20231102214111978\" data-caption=\"image-20231102214111978\" loading=\"lazy\">\n\n<p>lsb是指最低有效位隐写，直接用stegslove打开查看：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102214520587.png\" alt=\"image-20231102214520587\" data-caption=\"image-20231102214520587\" loading=\"lazy\">\n\n<p>注意文件头是一个PNG，点<strong>Save Bin</strong>保存：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102214609938.png\" alt=\"image-20231102214609938\" data-caption=\"image-20231102214609938\" loading=\"lazy\">\n\n<p>回文件夹看发现图片居然变成了二维码，再用QR扫下：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102214710293.png\" alt=\"image-20231102214710293\" data-caption=\"image-20231102214710293\" loading=\"lazy\">\n\n<p>改下flag头得到flag：<code>flag&#123;1sb_i4_s0_Ea4y&#125;</code>。</p>\n<h3 id=\"12-zip伪加密\"><a href=\"#12-zip伪加密\" class=\"headerlink\" title=\"12.zip伪加密\"></a>12.zip伪加密</h3><p>本题来自buuctf，所用工具为010 Editor(也可使用WinHex)。</p>\n<p>附件下载下来是一个压缩文件，我们不能直接打开flag文件，提示需要密码，联系题目叫做zip伪加密，所以我们使用工具来进行去加密。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231002094128310.png\" alt=\"image-20231002094128310\" data-caption=\"image-20231002094128310\" loading=\"lazy\">\n\n<p>压缩源文件数据区：50 4B 03 04：这是头文件标记</p>\n<p>压缩源文件目录区：</p>\n<p>50 4B 01 02：目录中文件文件头标记</p>\n<p>3F 00：压缩使用的 pkware 版本<br>14 00：解压文件所需 pkware 版本<br>00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）</p>\n<p>压缩源文件目录结束标志 ：50 4B 05 06：目录结束标记 </p>\n<p>因此我们将图中框出的<code>09 00</code>改为<code>00 00</code>并保存，就可以得到一个成功解压的文件夹：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231002094431742.png\" alt=\"image-20231002094431742\" data-caption=\"image-20231002094431742\" loading=\"lazy\">\n\n<p>打开就能找到flag了，本题flag为：<code>flag&#123;Adm1N-B2G-kU-SZIP&#125;</code>。</p>\n<h3 id=\"13-被嗅探的流量\"><a href=\"#13-被嗅探的流量\" class=\"headerlink\" title=\"13.被嗅探的流量\"></a>13.被嗅探的流量</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102214846232.png\" alt=\"image-20231102214846232\" data-caption=\"image-20231102214846232\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>下载的流量包用wireshark打开，照例先http过滤一下：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102215106284.png\" alt=\"image-20231102215106284\" data-caption=\"image-20231102215106284\" loading=\"lazy\">\n\n<p>挨个看到这就找到flag了，追踪TCP流：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102215310432.png\" alt=\"image-20231102215310432\" data-caption=\"image-20231102215310432\" loading=\"lazy\">\n\n<p>flag为<code>flag&#123;da73d88936010da1eeeb36e945ec4b97&#125;</code>。</p>\n<h3 id=\"14-rar\"><a href=\"#14-rar\" class=\"headerlink\" title=\"14.rar\"></a>14.rar</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231209094829089.png\" alt=\"image-20231209094829089\" data-caption=\"image-20231209094829089\" loading=\"lazy\">\n\n<p>下载下来得到一个加密的rar压缩包，直接爆破四位纯数字密码：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231209094950730.png\" alt=\"image-20231209094950730\" data-caption=\"image-20231209094950730\" loading=\"lazy\">\n\n<p>得到密码&#96;8795，解压得到flag：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231209095025603.png\" alt=\"image-20231209095025603\" data-caption=\"image-20231209095025603\" loading=\"lazy\">\n\n<p>flag为：<code>flag&#123;1773c5da790bd3caff38e3decd180eb7&#125;</code>。</p>\n<h3 id=\"15-qr\"><a href=\"#15-qr\" class=\"headerlink\" title=\"15.qr\"></a>15.qr</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102215855616.png\" alt=\"image-20231102215855616\" data-caption=\"image-20231102215855616\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>这题下载下来就是一个二维码：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102220055514.png\" alt=\"image-20231102220055514\" data-caption=\"image-20231102220055514\" loading=\"lazy\">\n\n<p>用QR扫一下：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102220155299.png\" alt=\"image-20231102220155299\" data-caption=\"image-20231102220155299\" loading=\"lazy\">\n\n<p>得到flag：<code>flag&#123;878865ce73370a4ce607d21ca01b5e59&#125;</code>。</p>\n<h3 id=\"16-镜子里面的世界\"><a href=\"#16-镜子里面的世界\" class=\"headerlink\" title=\"16.镜子里面的世界\"></a>16.镜子里面的世界</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029005308275.png\" alt=\"image-20231029005308275\" data-caption=\"image-20231029005308275\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>附件打开是这样的一张图片：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029005951080.png\" alt=\"image-20231029005951080\" data-caption=\"image-20231029005951080\" loading=\"lazy\">\n\n<p>看不出什么东西，用stegsolve工具看看：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029010246211.png\" alt=\"image-20231029010246211\" data-caption=\"image-20231029010246211\" loading=\"lazy\">\n\n<p>找到了，flag为：<code>flag&#123;st3g0_saurus_wr3cks&#125;</code>。</p>\n<h3 id=\"17-ningen\"><a href=\"#17-ningen\" class=\"headerlink\" title=\"17.ningen\"></a>17.ningen</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102220347569.png\" alt=\"image-20231102220347569\" data-caption=\"image-20231102220347569\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>下载下来是这样的图片：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102220519996.png\" alt=\"image-20231102220519996\" data-caption=\"image-20231102220519996\" loading=\"lazy\">\n\n<p>查看属性没问题，用010看看：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102220653728.png\" alt=\"image-20231102220653728\" data-caption=\"image-20231102220653728\" loading=\"lazy\">\n\n<p>图片里面好像藏了压缩包，用binwalk分离一下：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102221201766.png\" alt=\"image-20231102221201766\" data-caption=\"image-20231102221201766\" loading=\"lazy\">\n\n<p>得到一个加密的压缩包，拖出来用工具爆一下4位纯数字密码：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102221521959.png\" alt=\"image-20231102221521959\" data-caption=\"image-20231102221521959\" loading=\"lazy\">\n\n<p>爆出来密码为<code>8368</code></p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102221601915.png\" alt=\"image-20231102221601915\" data-caption=\"image-20231102221601915\" loading=\"lazy\">\n\n<p>得到flag：<code>flag&#123;b025fc9ca797a67d2103bfbc407a6d5f&#125;</code>。</p>\n<h3 id=\"18-爱因斯坦\"><a href=\"#18-爱因斯坦\" class=\"headerlink\" title=\"18.爱因斯坦\"></a>18.爱因斯坦</h3><p>本题来自buuctf，使用的是kali虚拟机。</p>\n<p>下载附件后得到的是一张爱因斯坦的照片，东看西看没啥提示，唯一奇怪的地方是属性中有一条备注。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930212147299.png\" alt=\"image-20230930212147299\" data-caption=\"image-20230930212147299\" loading=\"lazy\">\n\n<p>没有思路后询问了学长，学长告诉我可以用kali的binwalk文件分离提取，我上网搜索了操作教程：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930212627558.png\" alt=\"image-20230930212627558\" data-caption=\"image-20230930212627558\" loading=\"lazy\">\n\n<p>打开kali虚拟机，将附件中解压出的&#96;&#96;misc2.jpg&#96;文件拖进去</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930213026565.png\" alt=\"image-20230930213026565\" data-caption=\"image-20230930213026565\" loading=\"lazy\">\n\n<p>随后打开终端，按顺序输入以下两条指令，第一条的意思是转到桌面文件夹(因为我们的jpg文件就放在桌面)，第二条就是按照教程来写的，将这个jpg文件中的隐藏压缩文件分离出来。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930213249124.png\" alt=\"image-20230930213249124\" data-caption=\"image-20230930213249124\" loading=\"lazy\">\n\n<p>此时我们桌面上就出现了这个文件夹，打开它就会看到藏着flag的压缩文件。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930213621224.png\" alt=\"image-20230930213621224\" data-caption=\"image-20230930213621224\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930213829225.png\" alt=\"image-20230930213829225\" data-caption=\"image-20230930213829225\" loading=\"lazy\">\n\n<p>一路点开发现，想要得到flag竟然需要密码！那么密码是啥呢？还记得一开始在属性里面奇怪的备注吗？<code>this_is_not_password</code>，这个就是密码！OS：不得不说ctf真的有趣且折磨</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930213926268.png\" alt=\"image-20230930213926268\" data-caption=\"image-20230930213926268\" loading=\"lazy\">\n\n<p>输入密码，打开txt文件就得到本题的flag了：<code>flag&#123;dd22a92bf2cceb6c0cd0d6b83ff51606&#125;</code>。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930214228085.png\" alt=\"image-20230930214228085\" data-caption=\"image-20230930214228085\" loading=\"lazy\">\n\n<h3 id=\"19-小明的保险箱\"><a href=\"#19-小明的保险箱\" class=\"headerlink\" title=\"19.小明的保险箱\"></a>19.小明的保险箱</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102221721436.png\" alt=\"image-20231102221721436\" data-caption=\"image-20231102221721436\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>看了题目描述，估计又是压缩包密码爆破，题目下载下来是一张图片:</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102221834000.png\" alt=\"image-20231102221834000\" data-caption=\"image-20231102221834000\" loading=\"lazy\">\n\n<p>先看属性没东西，再看010：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102222126043.png\" alt=\"image-20231102222126043\" data-caption=\"image-20231102222126043\" loading=\"lazy\">\n\n<p>藏了个rar压缩包，binwalk出来：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102222148401.png\" alt=\"image-20231102222148401\" data-caption=\"image-20231102222148401\" loading=\"lazy\">\n\n<p>用工具爆一下4位纯数字密码：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102222308370.png\" alt=\"image-20231102222308370\" data-caption=\"image-20231102222308370\" loading=\"lazy\">\n\n<p>密码为：<code>7869</code></p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102222345938.png\" alt=\"image-20231102222345938\" data-caption=\"image-20231102222345938\" loading=\"lazy\">\n\n<p>得到flag：<code>flag&#123;75a3d68bf071ee188c418ea6cf0bb043&#125;</code>。</p>\n<h3 id=\"20-easycap\"><a href=\"#20-easycap\" class=\"headerlink\" title=\"20.easycap\"></a>20.easycap</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102222523421.png\" alt=\"image-20231102222523421\" data-caption=\"image-20231102222523421\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>下载下来是一个流量包，发现只有TCP，追踪一下：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102222908349.png\" alt=\"image-20231102222908349\" data-caption=\"image-20231102222908349\" loading=\"lazy\">\n\n<p>得到flag：<code>flag&#123;385b87afc8671dee07550290d16a8071&#125;</code>。</p>\n<h3 id=\"21-隐藏的钥匙\"><a href=\"#21-隐藏的钥匙\" class=\"headerlink\" title=\"21.隐藏的钥匙\"></a>21.隐藏的钥匙</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102223141331.png\" alt=\"image-20231102223141331\" data-caption=\"image-20231102223141331\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>下载下来是这样的图片，看了属性没问题</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102223340945.png\" alt=\"image-20231102223340945\" data-caption=\"image-20231102223340945\" loading=\"lazy\">\n\n<p>看看010：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102223501625.png\" alt=\"image-20231102223501625\" data-caption=\"image-20231102223501625\" loading=\"lazy\">\n\n<p>找到了flag，这个flag被base64加密了，在线解密一下：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102223628322.png\" alt=\"image-20231102223628322\" data-caption=\"image-20231102223628322\" loading=\"lazy\">\n\n<p>得到flag：<code>flag&#123;377cbadda1eca2f2f73d36277781f00a&#125;</code>。</p>\n<h3 id=\"22-另外一个世界\"><a href=\"#22-另外一个世界\" class=\"headerlink\" title=\"22.另外一个世界\"></a>22.另外一个世界</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102223807463.png\" alt=\"image-20231102223807463\" data-caption=\"image-20231102223807463\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>下载下来是一张图片，看看属性没问题：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102223852291.png\" alt=\"image-20231102223852291\" data-caption=\"image-20231102223852291\" loading=\"lazy\">\n\n<p>用010看到个怪东西：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102224321611.png\" alt=\"image-20231102224321611\" data-caption=\"image-20231102224321611\" loading=\"lazy\">\n\n<p>一串二进制，翻译一下看看啥意思：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102225030297.png\" alt=\"image-20231102225030297\" data-caption=\"image-20231102225030297\" loading=\"lazy\">\n\n<p><code>koekj3s</code>?不知道是啥，用stegslove再看看图片也看不出来东西，去kali里面走一遍也没东西，那试试flag是不是<code>flag&#123;koekj3s&#125;</code>还真是。</p>\n<p>本题的flag为：<code>flag&#123;koekj3s&#125;</code>。</p>\n<h3 id=\"23-FLAG\"><a href=\"#23-FLAG\" class=\"headerlink\" title=\"23.FLAG\"></a>23.FLAG</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102225220084.png\" alt=\"image-20231102225220084\" data-caption=\"image-20231102225220084\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>题目下载下来是这样的图片：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102225312706.png\" alt=\"image-20231102225312706\" data-caption=\"image-20231102225312706\" loading=\"lazy\">\n\n<p>看看属性没问题，看看010好像也没问题，用stegslove看看lsb：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102225625699.png\" alt=\"image-20231102225625699\" data-caption=\"image-20231102225625699\" loading=\"lazy\">\n\n<p>好家伙，是个zip文件，<strong>save bin</strong>保存为<strong>1.zip</strong>，解压看看：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102225844041.png\" alt=\"image-20231102225844041\" data-caption=\"image-20231102225844041\" loading=\"lazy\">\n\n<p>好像坏了，看看能用啥打开解压出来的玩意，我把我有的都拖了一遍，好家伙，可以用ida打开：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102230035556.png\" alt=\"image-20231102230035556\" data-caption=\"image-20231102230035556\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102230147582.png\" alt=\"image-20231102230147582\" data-caption=\"image-20231102230147582\" loading=\"lazy\">\n\n<p>找到flag：<code>flag&#123;dd0gf4c3tok3yb0ard4g41n~~~&#125;</code>。</p>\n<p>搜了下这题的wp，先用**Notepad++**打开看看文件：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102230514379.png\" alt=\"image-20231102230514379\" data-caption=\"image-20231102230514379\" loading=\"lazy\">\n\n<p>发现是ELF文件，所以才用ida打开。</p>\n<h3 id=\"24-神秘龙卷风\"><a href=\"#24-神秘龙卷风\" class=\"headerlink\" title=\"24.神秘龙卷风\"></a>24.神秘龙卷风</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102230818881.png\" alt=\"image-20231102230818881\" data-caption=\"image-20231102230818881\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>下载下来是一个带密码的压缩包，根据提示可以知道是4位纯数字密码，直接工具爆了：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102231012323.png\" alt=\"image-20231102231012323\" data-caption=\"image-20231102231012323\" loading=\"lazy\">\n\n<p>密码为：<code>5463</code></p>\n<p>得到这个样子的代码：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102231106840.png\" alt=\"image-20231102231106840\" data-caption=\"image-20231102231106840\" loading=\"lazy\">\n\n<p>一眼顶针，鉴定为Brainfuck加密：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102231640468.png\" alt=\"image-20231102231640468\" data-caption=\"image-20231102231640468\" loading=\"lazy\">\n\n<p>得到flag：<code>flag&#123;e4bbef8bdf9743f8bf5b727a9f6332a8&#125;</code></p>\n<h3 id=\"25-数据包中的线索\"><a href=\"#25-数据包中的线索\" class=\"headerlink\" title=\"25.数据包中的线索\"></a>25.数据包中的线索</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102231956416.png\" alt=\"image-20231102231956416\" data-caption=\"image-20231102231956416\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>下载下来是流量包，打开先http过滤：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102233018433.png\" alt=\"image-20231102233018433\" data-caption=\"image-20231102233018433\" loading=\"lazy\">\n\n<p>追踪http流：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102233059352.png\" alt=\"image-20231102233059352\" data-caption=\"image-20231102233059352\" loading=\"lazy\">\n\n<p>好大一坨，鉴定为base64加密：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102233238234.png\" alt=\"image-20231102233238234\" data-caption=\"image-20231102233238234\" loading=\"lazy\">\n\n<p>得到**.jpg**文件：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102233345082.png\" alt=\"image-20231102233345082\" data-caption=\"image-20231102233345082\" loading=\"lazy\">\n\n<p>flag为：<code>flag&#123;209acebf6324a09671abc31c869de72c&#125;</code>。</p>\n<h3 id=\"26-假如给我三天光明\"><a href=\"#26-假如给我三天光明\" class=\"headerlink\" title=\"26.假如给我三天光明\"></a>26.假如给我三天光明</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102233459493.png\" alt=\"image-20231102233459493\" data-caption=\"image-20231102233459493\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>附件下载下来是这样的：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102233654669.png\" alt=\"image-20231102233654669\" data-caption=\"image-20231102233654669\" loading=\"lazy\">\n\n<p>这张图片上面是盲文：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102233746895.png\" alt=\"image-20231102233746895\" data-caption=\"image-20231102233746895\" loading=\"lazy\">\n\n<p>翻译过来是：<code>kmdonowg</code>，应该就是压缩包的密码，成功打开得到一个音频文件，用<strong>Audacity</strong>打开发现是摩斯密码：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102234139687.png\" alt=\"image-20231102234139687\" data-caption=\"image-20231102234139687\" loading=\"lazy\">\n\n<p>翻译过来是：<code>-.-. - ..-. .-- .--. . .. ----- ---.. --... ...-- ..--- ..--.. ..--- ...-- -.. --..</code></p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102234729104.png\" alt=\"image-20231102234729104\" data-caption=\"image-20231102234729104\" loading=\"lazy\">\n\n<p>这玩意解密出来是大写的，但最后发现flag是小写，所以flag为：</p>\n<p><code>flag&#123;wpei08732?23dz&#125;</code>。</p>\n<h3 id=\"27-后门查杀\"><a href=\"#27-后门查杀\" class=\"headerlink\" title=\"27.后门查杀\"></a>27.后门查杀</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103003547955.png\" alt=\"image-20231103003547955\" data-caption=\"image-20231103003547955\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>附件下载下来是一个网站源文件，搜索题目名字得知要下载WebShell扫描检测查杀工具，下载了河马查杀来做：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103003839414.png\" alt=\"image-20231103003839414\" data-caption=\"image-20231103003839414\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103003852745.png\" alt=\"image-20231103003852745\" data-caption=\"image-20231103003852745\" loading=\"lazy\">\n\n<p>查到个php后门，去康康：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103003948441.png\" alt=\"image-20231103003948441\" data-caption=\"image-20231103003948441\" loading=\"lazy\">\n\n<p>找到了，flag为：<code>flag&#123;6ac45fb83b3bc355c024f5034b947dd3&#125;</code>。</p>\n<h3 id=\"28-webshell后门\"><a href=\"#28-webshell后门\" class=\"headerlink\" title=\"28.webshell后门\"></a>28.webshell后门</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103004156589.png\" alt=\"image-20231103004156589\" data-caption=\"image-20231103004156589\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>附件解压后也是一个网站源文件，直接开查：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103004450135.png\" alt=\"image-20231103004450135\" data-caption=\"image-20231103004450135\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103004510022.png\" alt=\"image-20231103004510022\" data-caption=\"image-20231103004510022\" loading=\"lazy\">\n\n<p>一堆后门，进去康康：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103004554135.png\" alt=\"image-20231103004554135\" data-caption=\"image-20231103004554135\" loading=\"lazy\">\n\n<p>找到了，那么flag为：<code>flag&#123;ba8e6c6f35a53933b871480bb9a9545c&#125;</code>。</p>\n<h3 id=\"29-来首歌吧\"><a href=\"#29-来首歌吧\" class=\"headerlink\" title=\"29.来首歌吧\"></a>29.来首歌吧</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103004735062.png\" alt=\"image-20231103004735062\" data-caption=\"image-20231103004735062\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>附件下下来是一个音频文件，打开康康：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103005021667.png\" alt=\"image-20231103005021667\" data-caption=\"image-20231103005021667\" loading=\"lazy\">\n\n<p>一眼摩斯密码，翻译一下：<code>..... -... -.-. ----. ..--- ..... -.... ....- ----. -.-. -... ----- .---- ---.. ---.. ..-. ..... ..--- . -.... .---- --... -.. --... ----- ----. ..--- ----. .---- ----. .---- -.-.</code></p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103005639019.png\" alt=\"image-20231103005639019\" data-caption=\"image-20231103005639019\" loading=\"lazy\">\n\n<p>得到flag：<code>flag&#123;5BC925649CB0188F52E617D70929191C&#125;</code>。</p>\n<h3 id=\"30-荷兰宽带数据泄露\"><a href=\"#30-荷兰宽带数据泄露\" class=\"headerlink\" title=\"30.荷兰宽带数据泄露\"></a>30.荷兰宽带数据泄露</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103005837061.png\" alt=\"image-20231103005837061\" data-caption=\"image-20231103005837061\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>题目附件下载下来是**.bin**文件</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103005941061.png\" alt=\"image-20231103005941061\" data-caption=\"image-20231103005941061\" loading=\"lazy\">\n\n<p>这玩意还要再去下个工具：<strong>routepassview</strong></p>\n<p>用工具打开文件：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103010501946.png\" alt=\"image-20231103010501946\" data-caption=\"image-20231103010501946\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103010715509.png\" alt=\"image-20231103010715509\" data-caption=\"image-20231103010715509\" loading=\"lazy\">\n\n<p>这边找到了username和password，试试哪个是flag。</p>\n<p>flag是username的：<code>flag&#123;053700357621&#125;</code>。</p>\n<h3 id=\"31-面具下的flag\"><a href=\"#31-面具下的flag\" class=\"headerlink\" title=\"31.面具下的flag\"></a>31.面具下的flag</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103010912859.png\" alt=\"image-20231103010912859\" data-caption=\"image-20231103010912859\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>附件下载下来是一张图片：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103011023899.png\" alt=\"image-20231103011023899\" data-caption=\"image-20231103011023899\" loading=\"lazy\">\n\n<p>感觉宽高不太对啊，改改看，用工具说没问题，看看010里面啥样：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103011342352.png\" alt=\"image-20231103011342352\" data-caption=\"image-20231103011342352\" loading=\"lazy\">\n\n<p>有pk、有flag字样，试试binwalk分离：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103011637325.png\" alt=\"image-20231103011637325\" data-caption=\"image-20231103011637325\" loading=\"lazy\">\n\n<p>分离出来一个压缩包，用010看发现是伪加密，把<code>09 00</code>改成<code>00 00</code>，保存：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103012341902.png\" alt=\"image-20231103012341902\" data-caption=\"image-20231103012341902\" loading=\"lazy\">\n\n<p>成功解压出来：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103012644500.png\" alt=\"image-20231103012644500\" data-caption=\"image-20231103012644500\" loading=\"lazy\">\n\n<p>在网上搜了，说用**.7z**就可以查看vmdk文件了，用看看：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103013233392.png\" alt=\"image-20231103013233392\" data-caption=\"image-20231103013233392\" loading=\"lazy\">\n\n<p>![image-20231103013245028](BUU MISC第一页&#x2F;image-20231103013245028.png)</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103013306460.png\" alt=\"image-20231103013306460\" data-caption=\"image-20231103013306460\" loading=\"lazy\">\n\n<p>可恶，在windows上面看不到，那试试Linux，打开kali输入<code>7z x flag.vmdk </code>，得到了文件夹：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103013456425.png\" alt=\"image-20231103013456425\" data-caption=\"image-20231103013456425\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103013524387.png\" alt=\"image-20231103013524387\" data-caption=\"image-20231103013524387\" loading=\"lazy\">\n\n<p>一眼鉴定为Brainfuck，在线解密康康：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103013646579.png\" alt=\"image-20231103013646579\" data-caption=\"image-20231103013646579\" loading=\"lazy\">\n\n<p>得到前半截flag：<code>flag&#123;N7F5_AD5</code></p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103013729241.png\" alt=\"image-20231103013729241\" data-caption=\"image-20231103013729241\" loading=\"lazy\">\n\n<p>Ook解密：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103013912432.png\" alt=\"image-20231103013912432\" data-caption=\"image-20231103013912432\" loading=\"lazy\">\n\n<p>得到后半截flag：<code>_i5_funny!&#125;</code></p>\n<p>最终flag为：<code>flag&#123;N7F5_AD5_i5_funny!&#125;</code>。</p>\n<h3 id=\"32-九连环\"><a href=\"#32-九连环\" class=\"headerlink\" title=\"32.九连环\"></a>32.九连环</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103014131334.png\" alt=\"image-20231103014131334\" data-caption=\"image-20231103014131334\" loading=\"lazy\">\n\n<p>本题来自buuctf。</p>\n<p>附件下载下来是一张图片：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103221255746.png\" alt=\"image-20231103221255746\" data-caption=\"image-20231103221255746\" loading=\"lazy\">\n\n<p>属性没事，010康康：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103221622135.png\" alt=\"image-20231103221622135\" data-caption=\"image-20231103221622135\" loading=\"lazy\">\n\n<p>图片里面藏了压缩i包，用binwalk分离出来：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231104014235292.png\" alt=\"image-20231104014235292\" data-caption=\"image-20231104014235292\" loading=\"lazy\">\n\n<p>拖出来用010打开：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231104014429443.png\" alt=\"image-20231104014429443\" data-caption=\"image-20231104014429443\" loading=\"lazy\">\n\n<p>发现是zip伪加密，将<code>00 01</code>改为<code>00 00</code>就可以了</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231104014606341.png\" alt=\"image-20231104014606341\" data-caption=\"image-20231104014606341\" loading=\"lazy\">\n\n<p>成功解压，得到另一个加密的文件夹。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231104014643534.png\" alt=\"image-20231104014643534\" data-caption=\"image-20231104014643534\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231104015204886.png\" alt=\"image-20231104015204886\" data-caption=\"image-20231104015204886\" loading=\"lazy\">\n\n<p>这回好像是真的加密了，改了没用，那看看图片有没有藏东西：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231104015842337.png\" alt=\"image-20231104015842337\" data-caption=\"image-20231104015842337\" loading=\"lazy\">\n\n<p>binwalk没用，steghide发现藏了<strong>ko.txt</strong>文件，输入<code>steghide extract -sf good-已合并.jpg</code>提取出来</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231104020108651.png\" alt=\"image-20231104020108651\" data-caption=\"image-20231104020108651\" loading=\"lazy\">\n\n<p>打开不知道是啥，试试是不是压缩包的密码，解压成功，得到flag：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231104020306299.png\" alt=\"image-20231104020306299\" data-caption=\"image-20231104020306299\" loading=\"lazy\">\n\n<p>flag为：<code>flag&#123;1RTo8w@&amp;4nK@z*XL&#125;</code>。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"BUU-MISC第一页\"><a href=\"#BUU-MISC第一页\" class=\"headerlink\" title=\"BUU MISC第一页\"></a>BUU MISC第一页</h1><h3 id=\"1-签到\"><a href=\"#1-签到\" class=\"headerlink\" title=\"1.签到\"></a>1.签到</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231209093654842.png\" alt=\"image-20231209093654842\" style=\"zoom:67%;\">\n\n<p>flag为：<code>flag&#123;buu_ctf&#125;</code>。</p>\n<h3 id=\"2-金三胖\"><a href=\"#2-金三胖\" class=\"headerlink\" title=\"2.金三胖\"></a>2.金三胖</h3><p>本题来自buuctf，所用工具为PuzzleSolver。</p>\n<p>题目给的附件下载之后得到的是一张金三胖的gif图片，我们仔细看会发现会有一瞬间闪烁出flag的字样，那我们可以猜到，flag一定是藏在这段gif图的某帧里。</p>\n<p>打开PuzzleSolver中的ImageTools，调整到拆分GIF，对gif图进行拆分，就可以得到一个文件夹，里面是每一帧的图片。</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231001172555622.png\" alt=\"image-20231001172555622\" style=\"zoom:67%;\">\n\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231001172947373.png\" alt=\"image-20231001172947373\" style=\"zoom:67%;\">\n\n<p>我们把这其中包含flag的三张组合起来，就可以得到：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231001173850299.png\" alt=\"image-20231001173850299\" style=\"zoom:67%;\">\n\n<p>即flag可能为：<code>flag&#123;hello_hongke&#125;</code>、<code>flag&#123;hellohongke&#125;</code>或者<code>flag&#123;_hello_hongke&#125;</code>。</p>\n<p>但奇怪的是这三条flag都无法提交。看了wp说flag是<code>flag&#123;hello_hongke&#125;</code>那这题我就算自己写出来了OwO。</p>\n<h3 id=\"3-你竟然赶我走\"><a href=\"#3-你竟然赶我走\" class=\"headerlink\" title=\"3.你竟然赶我走\"></a>3.你竟然赶我走</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029010621087.png\" alt=\"image-20231029010621087\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>附件打开是一张图片，没啥特别的</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029010704171.png\" alt=\"image-20231029010704171\" style=\"zoom:67%;\">\n\n<p>用kali工具跑一遍，没有用，拿010看看：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029011321260.png\" alt=\"image-20231029011321260\" style=\"zoom:67%;\">\n\n<p>好家伙，flag直接放在最后：<code>flag&#123;stego_is_s0_bor1ing&#125;</code>。</p>\n<h3 id=\"4-二维码\"><a href=\"#4-二维码\" class=\"headerlink\" title=\"4.二维码\"></a>4.二维码</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029003945960.png\" alt=\"image-20231029003945960\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>题目下载下来是一个二维码图片，扫一下：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029004112936.png\" alt=\"image-20231029004112936\" style=\"zoom:67%;\">\n\n<p>看到这段话：<code>secret is here</code>，这玩意绝对不是flag，既然是图片，那用kali的工具跑一遍：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029004556450.png\" alt=\"image-20231029004556450\" style=\"zoom:67%;\">\n\n<p>binwalk出来一个加密的zip压缩包，不知道密码，直接用工具爆破：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029004746711.png\" alt=\"image-20231029004746711\" style=\"zoom:67%;\">\n\n<p>爆出来密码是<code>7639</code>，解压得到文件<strong>4number.txt</strong>：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029004836940.png\" alt=\"image-20231029004836940\" style=\"zoom:67%;\">\n\n<p>得到flag，改下flag头：<code>flag&#123;vjpw_wnoei&#125;</code>。</p>\n<h3 id=\"5-大白\"><a href=\"#5-大白\" class=\"headerlink\" title=\"5.大白\"></a>5.大白</h3><p>本题来自buuctf，所用软件为WinHex。</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930163911778.png\" alt=\"image-20230930163911778\" style=\"zoom: 67%;\">\n\n<p>xxxxxxxxxx if(a) {    if(b) {        xxx    }else{        xxxx    }}else{    xxxxx}c</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930164004910.png\" alt=\"image-20230930164004910\" style=\"zoom: 67%;\">\n\n<p>看起来这个大白好像不太对劲，下半身没有露出来，我猜测这题用的便是图片隐写，根据题目的提示，那么flag应该就藏在大白没有露出来的身体上。</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930164221394.png\" alt=\"image-20230930164221394\" style=\"zoom:67%;\">\n\n<p>用WinHex打开图片文件，找到第二行的这两个位置，在十六进制下，这两个对应的分别是图片的宽和高，我们将<code>01 00</code>也改成<code>02 A7</code>，这样我们就可以得到一张1：1大小的大白图片。</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930173034922.png\" alt=\"image-20230930173034922\" style=\"zoom:67%;\">\n\n<p>按下<code>cirl+s</code>进行保存，更新图片文件，得到：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930173205837.png\" alt=\"image-20230930173205837\" style=\"zoom:67%;\">\n\n<p>在大白肚子上就写着本题的flag：<code>flag&#123;He1l0_d4_ba1&#125;</code>。</p>\n<h3 id=\"6-N种方法解决\"><a href=\"#6-N种方法解决\" class=\"headerlink\" title=\"6.N种方法解决\"></a>6.N种方法解决</h3><p>![image-20231209093808700](BUU MISC第一页&#x2F;image-20231209093808700.png)</p>\n<p>用010打开得到一段base64密文，解密一下：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231209094139199.png\" alt=\"image-20231209094139199\" style=\"zoom:67%;\">\n\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231209094240801.png\" alt=\"image-20231209094240801\" style=\"zoom:67%;\">\n\n<p>得到一个png图片，是一张二维码：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231209094302547.png\" alt=\"image-20231209094302547\" style=\"zoom:67%;\">\n\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231209094335558.png\" alt=\"image-20231209094335558\" style=\"zoom:67%;\">\n\n<p>扫一下得到flag：<code>flag&#123;dca57f966e4e4e31fd5b15417da63269&#125;</code>。</p>\n<h3 id=\"7-乌镇峰会种图\"><a href=\"#7-乌镇峰会种图\" class=\"headerlink\" title=\"7.乌镇峰会种图\"></a>7.乌镇峰会种图</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029115441069.png\" alt=\"image-20231029115441069\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>这题下载下来是图片，扔进010：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029115542623.png\" alt=\"image-20231029115542623\" style=\"zoom:67%;\">\n\n<p>直接找到flag：<code>flag&#123;97314e7864a8f62627b26f3f998c37f1&#125;</code>。</p>\n<h3 id=\"8-wireshark\"><a href=\"#8-wireshark\" class=\"headerlink\" title=\"8.wireshark\"></a>8.wireshark</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231028224942131.png\" alt=\"image-20231028224942131\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>附件下载下来用wireshark打开，先http过滤：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231028234454306.png\" alt=\"image-20231028234454306\" style=\"zoom:67%;\">\n\n<p>根据题目提示，找管理员登陆网站的那条记录，同时直接用字符串查找一下flag试试：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231028234954685.png\" alt=\"image-20231028234954685\" style=\"zoom:67%;\">\n\n<p>找到这一条，右键追踪tcp流：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231028235343604.png\" alt=\"image-20231028235343604\" style=\"zoom:67%;\">\n\n<p>password内容就是flag，本题flag为：<code>flag&#123;ffb7567a1d4f4abdffdb54e022f8facd&#125;</code>。</p>\n<h3 id=\"9-基础破解\"><a href=\"#9-基础破解\" class=\"headerlink\" title=\"9.基础破解\"></a>9.基础破解</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029115626925.png\" alt=\"image-20231029115626925\" style=\"zoom:67%;\">\n\n<p>这题下载下来是一个加密的压缩包，用ARCHPR直接暴力破解：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029115756413.png\" alt=\"image-20231029115756413\" style=\"zoom:67%;\">\n\n<p>爆出来密码是<code>2563</code>，解压：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029120238846.png\" alt=\"image-20231029120238846\" style=\"zoom:67%;\">\n\n<p>一眼base64加密：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029120258482.png\" alt=\"image-20231029120258482\" style=\"zoom:67%;\">\n\n<p>得到flag：<code>flag&#123;70354300a5100ba78068805661b93a5c&#125;</code>。</p>\n<h3 id=\"10-文件中的秘密\"><a href=\"#10-文件中的秘密\" class=\"headerlink\" title=\"10.文件中的秘密\"></a>10.文件中的秘密</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102212518643.png\" alt=\"image-20231102212518643\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>下载下来得到的是一张图片：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102213104750.png\" alt=\"image-20231102213104750\" style=\"zoom:67%;\">\n\n<p>用010看一下：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102213431727.png\" alt=\"image-20231102213431727\" style=\"zoom:67%;\">\n\n<p>找到了flag：<code>flag&#123;870c5a72806115cb5439345d8b014396&#125;</code>。</p>\n<p>本题还有另外两种方法：</p>\n<p>第一种是直接右键打开属性，在详细属性的备注中就是flag：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102213403194.png\" alt=\"image-20231102213403194\" style=\"zoom:67%;\">\n\n<p>第二种是在**Notepad++**中安装Hex插件，用16进制查看文件：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102213914912.png\" alt=\"image-20231102213914912\" style=\"zoom:67%;\">\n\n<p>第二种和用010查看是一样的。</p>\n<h3 id=\"11-LSB\"><a href=\"#11-LSB\" class=\"headerlink\" title=\"11.LSB\"></a>11.LSB</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102214029035.png\" alt=\"image-20231102214029035\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>下载下来是这样的一个文件：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102214111978.png\" alt=\"image-20231102214111978\" style=\"zoom:67%;\">\n\n<p>lsb是指最低有效位隐写，直接用stegslove打开查看：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102214520587.png\" alt=\"image-20231102214520587\" style=\"zoom:67%;\">\n\n<p>注意文件头是一个PNG，点<strong>Save Bin</strong>保存：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102214609938.png\" alt=\"image-20231102214609938\" style=\"zoom:67%;\">\n\n<p>回文件夹看发现图片居然变成了二维码，再用QR扫下：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102214710293.png\" alt=\"image-20231102214710293\" style=\"zoom:67%;\">\n\n<p>改下flag头得到flag：<code>flag&#123;1sb_i4_s0_Ea4y&#125;</code>。</p>\n<h3 id=\"12-zip伪加密\"><a href=\"#12-zip伪加密\" class=\"headerlink\" title=\"12.zip伪加密\"></a>12.zip伪加密</h3><p>本题来自buuctf，所用工具为010 Editor(也可使用WinHex)。</p>\n<p>附件下载下来是一个压缩文件，我们不能直接打开flag文件，提示需要密码，联系题目叫做zip伪加密，所以我们使用工具来进行去加密。</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231002094128310.png\" alt=\"image-20231002094128310\" style=\"zoom:67%;\">\n\n<p>压缩源文件数据区：50 4B 03 04：这是头文件标记</p>\n<p>压缩源文件目录区：</p>\n<p>50 4B 01 02：目录中文件文件头标记</p>\n<p>3F 00：压缩使用的 pkware 版本<br>14 00：解压文件所需 pkware 版本<br>00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）</p>\n<p>压缩源文件目录结束标志 ：50 4B 05 06：目录结束标记 </p>\n<p>因此我们将图中框出的<code>09 00</code>改为<code>00 00</code>并保存，就可以得到一个成功解压的文件夹：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231002094431742.png\" alt=\"image-20231002094431742\" style=\"zoom:67%;\">\n\n<p>打开就能找到flag了，本题flag为：<code>flag&#123;Adm1N-B2G-kU-SZIP&#125;</code>。</p>\n<h3 id=\"13-被嗅探的流量\"><a href=\"#13-被嗅探的流量\" class=\"headerlink\" title=\"13.被嗅探的流量\"></a>13.被嗅探的流量</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102214846232.png\" alt=\"image-20231102214846232\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>下载的流量包用wireshark打开，照例先http过滤一下：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102215106284.png\" alt=\"image-20231102215106284\" style=\"zoom:67%;\">\n\n<p>挨个看到这就找到flag了，追踪TCP流：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102215310432.png\" alt=\"image-20231102215310432\" style=\"zoom:67%;\">\n\n<p>flag为<code>flag&#123;da73d88936010da1eeeb36e945ec4b97&#125;</code>。</p>\n<h3 id=\"14-rar\"><a href=\"#14-rar\" class=\"headerlink\" title=\"14.rar\"></a>14.rar</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231209094829089.png\" alt=\"image-20231209094829089\" style=\"zoom:67%;\">\n\n<p>下载下来得到一个加密的rar压缩包，直接爆破四位纯数字密码：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231209094950730.png\" alt=\"image-20231209094950730\" style=\"zoom:67%;\">\n\n<p>得到密码&#96;8795，解压得到flag：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231209095025603.png\" alt=\"image-20231209095025603\" style=\"zoom:67%;\">\n\n<p>flag为：<code>flag&#123;1773c5da790bd3caff38e3decd180eb7&#125;</code>。</p>\n<h3 id=\"15-qr\"><a href=\"#15-qr\" class=\"headerlink\" title=\"15.qr\"></a>15.qr</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102215855616.png\" alt=\"image-20231102215855616\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>这题下载下来就是一个二维码：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102220055514.png\" alt=\"image-20231102220055514\" style=\"zoom:67%;\">\n\n<p>用QR扫一下：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102220155299.png\" alt=\"image-20231102220155299\" style=\"zoom:67%;\">\n\n<p>得到flag：<code>flag&#123;878865ce73370a4ce607d21ca01b5e59&#125;</code>。</p>\n<h3 id=\"16-镜子里面的世界\"><a href=\"#16-镜子里面的世界\" class=\"headerlink\" title=\"16.镜子里面的世界\"></a>16.镜子里面的世界</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029005308275.png\" alt=\"image-20231029005308275\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>附件打开是这样的一张图片：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029005951080.png\" alt=\"image-20231029005951080\" style=\"zoom:67%;\">\n\n<p>看不出什么东西，用stegsolve工具看看：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231029010246211.png\" alt=\"image-20231029010246211\" style=\"zoom:67%;\">\n\n<p>找到了，flag为：<code>flag&#123;st3g0_saurus_wr3cks&#125;</code>。</p>\n<h3 id=\"17-ningen\"><a href=\"#17-ningen\" class=\"headerlink\" title=\"17.ningen\"></a>17.ningen</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102220347569.png\" alt=\"image-20231102220347569\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>下载下来是这样的图片：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102220519996.png\" alt=\"image-20231102220519996\" style=\"zoom:67%;\">\n\n<p>查看属性没问题，用010看看：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102220653728.png\" alt=\"image-20231102220653728\" style=\"zoom:67%;\">\n\n<p>图片里面好像藏了压缩包，用binwalk分离一下：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102221201766.png\" alt=\"image-20231102221201766\" style=\"zoom:67%;\">\n\n<p>得到一个加密的压缩包，拖出来用工具爆一下4位纯数字密码：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102221521959.png\" alt=\"image-20231102221521959\" style=\"zoom:67%;\">\n\n<p>爆出来密码为<code>8368</code></p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102221601915.png\" alt=\"image-20231102221601915\" style=\"zoom:67%;\">\n\n<p>得到flag：<code>flag&#123;b025fc9ca797a67d2103bfbc407a6d5f&#125;</code>。</p>\n<h3 id=\"18-爱因斯坦\"><a href=\"#18-爱因斯坦\" class=\"headerlink\" title=\"18.爱因斯坦\"></a>18.爱因斯坦</h3><p>本题来自buuctf，使用的是kali虚拟机。</p>\n<p>下载附件后得到的是一张爱因斯坦的照片，东看西看没啥提示，唯一奇怪的地方是属性中有一条备注。</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930212147299.png\" alt=\"image-20230930212147299\" style=\"zoom:67%;\">\n\n<p>没有思路后询问了学长，学长告诉我可以用kali的binwalk文件分离提取，我上网搜索了操作教程：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930212627558.png\" alt=\"image-20230930212627558\" style=\"zoom:67%;\">\n\n<p>打开kali虚拟机，将附件中解压出的&#96;&#96;misc2.jpg&#96;文件拖进去</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930213026565.png\" alt=\"image-20230930213026565\" style=\"zoom:67%;\">\n\n<p>随后打开终端，按顺序输入以下两条指令，第一条的意思是转到桌面文件夹(因为我们的jpg文件就放在桌面)，第二条就是按照教程来写的，将这个jpg文件中的隐藏压缩文件分离出来。</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930213249124.png\" alt=\"image-20230930213249124\" style=\"zoom:67%;\">\n\n<p>此时我们桌面上就出现了这个文件夹，打开它就会看到藏着flag的压缩文件。</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930213621224.png\" alt=\"image-20230930213621224\" style=\"zoom:67%;\">\n\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930213829225.png\" alt=\"image-20230930213829225\" style=\"zoom:67%;\">\n\n<p>一路点开发现，想要得到flag竟然需要密码！那么密码是啥呢？还记得一开始在属性里面奇怪的备注吗？<code>this_is_not_password</code>，这个就是密码！OS：不得不说ctf真的有趣且折磨</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930213926268.png\" alt=\"image-20230930213926268\" style=\"zoom: 67%;\">\n\n<p>输入密码，打开txt文件就得到本题的flag了：<code>flag&#123;dd22a92bf2cceb6c0cd0d6b83ff51606&#125;</code>。</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20230930214228085.png\" alt=\"image-20230930214228085\" style=\"zoom:67%;\">\n\n<h3 id=\"19-小明的保险箱\"><a href=\"#19-小明的保险箱\" class=\"headerlink\" title=\"19.小明的保险箱\"></a>19.小明的保险箱</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102221721436.png\" alt=\"image-20231102221721436\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>看了题目描述，估计又是压缩包密码爆破，题目下载下来是一张图片:</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102221834000.png\" alt=\"image-20231102221834000\" style=\"zoom:67%;\">\n\n<p>先看属性没东西，再看010：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102222126043.png\" alt=\"image-20231102222126043\" style=\"zoom:67%;\">\n\n<p>藏了个rar压缩包，binwalk出来：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102222148401.png\" alt=\"image-20231102222148401\" style=\"zoom:67%;\">\n\n<p>用工具爆一下4位纯数字密码：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102222308370.png\" alt=\"image-20231102222308370\" style=\"zoom:67%;\">\n\n<p>密码为：<code>7869</code></p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102222345938.png\" alt=\"image-20231102222345938\" style=\"zoom:67%;\">\n\n<p>得到flag：<code>flag&#123;75a3d68bf071ee188c418ea6cf0bb043&#125;</code>。</p>\n<h3 id=\"20-easycap\"><a href=\"#20-easycap\" class=\"headerlink\" title=\"20.easycap\"></a>20.easycap</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102222523421.png\" alt=\"image-20231102222523421\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>下载下来是一个流量包，发现只有TCP，追踪一下：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102222908349.png\" alt=\"image-20231102222908349\" style=\"zoom:67%;\">\n\n<p>得到flag：<code>flag&#123;385b87afc8671dee07550290d16a8071&#125;</code>。</p>\n<h3 id=\"21-隐藏的钥匙\"><a href=\"#21-隐藏的钥匙\" class=\"headerlink\" title=\"21.隐藏的钥匙\"></a>21.隐藏的钥匙</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102223141331.png\" alt=\"image-20231102223141331\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>下载下来是这样的图片，看了属性没问题</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102223340945.png\" alt=\"image-20231102223340945\" style=\"zoom:67%;\">\n\n<p>看看010：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102223501625.png\" alt=\"image-20231102223501625\" style=\"zoom:67%;\">\n\n<p>找到了flag，这个flag被base64加密了，在线解密一下：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102223628322.png\" alt=\"image-20231102223628322\" style=\"zoom:67%;\">\n\n<p>得到flag：<code>flag&#123;377cbadda1eca2f2f73d36277781f00a&#125;</code>。</p>\n<h3 id=\"22-另外一个世界\"><a href=\"#22-另外一个世界\" class=\"headerlink\" title=\"22.另外一个世界\"></a>22.另外一个世界</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102223807463.png\" alt=\"image-20231102223807463\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>下载下来是一张图片，看看属性没问题：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102223852291.png\" alt=\"image-20231102223852291\" style=\"zoom:67%;\">\n\n<p>用010看到个怪东西：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102224321611.png\" alt=\"image-20231102224321611\" style=\"zoom:67%;\">\n\n<p>一串二进制，翻译一下看看啥意思：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102225030297.png\" alt=\"image-20231102225030297\" style=\"zoom:67%;\">\n\n<p><code>koekj3s</code>?不知道是啥，用stegslove再看看图片也看不出来东西，去kali里面走一遍也没东西，那试试flag是不是<code>flag&#123;koekj3s&#125;</code>还真是。</p>\n<p>本题的flag为：<code>flag&#123;koekj3s&#125;</code>。</p>\n<h3 id=\"23-FLAG\"><a href=\"#23-FLAG\" class=\"headerlink\" title=\"23.FLAG\"></a>23.FLAG</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102225220084.png\" alt=\"image-20231102225220084\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>题目下载下来是这样的图片：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102225312706.png\" alt=\"image-20231102225312706\" style=\"zoom:67%;\">\n\n<p>看看属性没问题，看看010好像也没问题，用stegslove看看lsb：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102225625699.png\" alt=\"image-20231102225625699\" style=\"zoom:67%;\">\n\n<p>好家伙，是个zip文件，<strong>save bin</strong>保存为<strong>1.zip</strong>，解压看看：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102225844041.png\" alt=\"image-20231102225844041\" style=\"zoom:67%;\">\n\n<p>好像坏了，看看能用啥打开解压出来的玩意，我把我有的都拖了一遍，好家伙，可以用ida打开：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102230035556.png\" alt=\"image-20231102230035556\" style=\"zoom:67%;\">\n\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102230147582.png\" alt=\"image-20231102230147582\" style=\"zoom:67%;\">\n\n<p>找到flag：<code>flag&#123;dd0gf4c3tok3yb0ard4g41n~~~&#125;</code>。</p>\n<p>搜了下这题的wp，先用**Notepad++**打开看看文件：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102230514379.png\" alt=\"image-20231102230514379\" style=\"zoom:67%;\">\n\n<p>发现是ELF文件，所以才用ida打开。</p>\n<h3 id=\"24-神秘龙卷风\"><a href=\"#24-神秘龙卷风\" class=\"headerlink\" title=\"24.神秘龙卷风\"></a>24.神秘龙卷风</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102230818881.png\" alt=\"image-20231102230818881\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>下载下来是一个带密码的压缩包，根据提示可以知道是4位纯数字密码，直接工具爆了：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102231012323.png\" alt=\"image-20231102231012323\" style=\"zoom:67%;\">\n\n<p>密码为：<code>5463</code></p>\n<p>得到这个样子的代码：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102231106840.png\" alt=\"image-20231102231106840\" style=\"zoom:67%;\">\n\n<p>一眼顶针，鉴定为Brainfuck加密：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102231640468.png\" alt=\"image-20231102231640468\" style=\"zoom:67%;\">\n\n<p>得到flag：<code>flag&#123;e4bbef8bdf9743f8bf5b727a9f6332a8&#125;</code></p>\n<h3 id=\"25-数据包中的线索\"><a href=\"#25-数据包中的线索\" class=\"headerlink\" title=\"25.数据包中的线索\"></a>25.数据包中的线索</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102231956416.png\" alt=\"image-20231102231956416\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>下载下来是流量包，打开先http过滤：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102233018433.png\" alt=\"image-20231102233018433\" style=\"zoom:67%;\">\n\n<p>追踪http流：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102233059352.png\" alt=\"image-20231102233059352\" style=\"zoom:67%;\">\n\n<p>好大一坨，鉴定为base64加密：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102233238234.png\" alt=\"image-20231102233238234\" style=\"zoom:67%;\">\n\n<p>得到**.jpg**文件：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102233345082.png\" alt=\"image-20231102233345082\" style=\"zoom:67%;\">\n\n<p>flag为：<code>flag&#123;209acebf6324a09671abc31c869de72c&#125;</code>。</p>\n<h3 id=\"26-假如给我三天光明\"><a href=\"#26-假如给我三天光明\" class=\"headerlink\" title=\"26.假如给我三天光明\"></a>26.假如给我三天光明</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102233459493.png\" alt=\"image-20231102233459493\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>附件下载下来是这样的：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102233654669.png\" alt=\"image-20231102233654669\" style=\"zoom:67%;\">\n\n<p>这张图片上面是盲文：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102233746895.png\" alt=\"image-20231102233746895\" style=\"zoom:67%;\">\n\n<p>翻译过来是：<code>kmdonowg</code>，应该就是压缩包的密码，成功打开得到一个音频文件，用<strong>Audacity</strong>打开发现是摩斯密码：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102234139687.png\" alt=\"image-20231102234139687\" style=\"zoom:67%;\">\n\n<p>翻译过来是：<code>-.-. - ..-. .-- .--. . .. ----- ---.. --... ...-- ..--- ..--.. ..--- ...-- -.. --..</code></p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231102234729104.png\" alt=\"image-20231102234729104\" style=\"zoom:67%;\">\n\n<p>这玩意解密出来是大写的，但最后发现flag是小写，所以flag为：</p>\n<p><code>flag&#123;wpei08732?23dz&#125;</code>。</p>\n<h3 id=\"27-后门查杀\"><a href=\"#27-后门查杀\" class=\"headerlink\" title=\"27.后门查杀\"></a>27.后门查杀</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103003547955.png\" alt=\"image-20231103003547955\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>附件下载下来是一个网站源文件，搜索题目名字得知要下载WebShell扫描检测查杀工具，下载了河马查杀来做：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103003839414.png\" alt=\"image-20231103003839414\" style=\"zoom:67%;\">\n\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103003852745.png\" alt=\"image-20231103003852745\" style=\"zoom:67%;\">\n\n<p>查到个php后门，去康康：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103003948441.png\" alt=\"image-20231103003948441\" style=\"zoom:67%;\">\n\n<p>找到了，flag为：<code>flag&#123;6ac45fb83b3bc355c024f5034b947dd3&#125;</code>。</p>\n<h3 id=\"28-webshell后门\"><a href=\"#28-webshell后门\" class=\"headerlink\" title=\"28.webshell后门\"></a>28.webshell后门</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103004156589.png\" alt=\"image-20231103004156589\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>附件解压后也是一个网站源文件，直接开查：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103004450135.png\" alt=\"image-20231103004450135\" style=\"zoom:67%;\">\n\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103004510022.png\" alt=\"image-20231103004510022\" style=\"zoom:67%;\">\n\n<p>一堆后门，进去康康：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103004554135.png\" alt=\"image-20231103004554135\" style=\"zoom:67%;\">\n\n<p>找到了，那么flag为：<code>flag&#123;ba8e6c6f35a53933b871480bb9a9545c&#125;</code>。</p>\n<h3 id=\"29-来首歌吧\"><a href=\"#29-来首歌吧\" class=\"headerlink\" title=\"29.来首歌吧\"></a>29.来首歌吧</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103004735062.png\" alt=\"image-20231103004735062\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>附件下下来是一个音频文件，打开康康：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103005021667.png\" alt=\"image-20231103005021667\" style=\"zoom:67%;\">\n\n<p>一眼摩斯密码，翻译一下：<code>..... -... -.-. ----. ..--- ..... -.... ....- ----. -.-. -... ----- .---- ---.. ---.. ..-. ..... ..--- . -.... .---- --... -.. --... ----- ----. ..--- ----. .---- ----. .---- -.-.</code></p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103005639019.png\" alt=\"image-20231103005639019\" style=\"zoom:67%;\">\n\n<p>得到flag：<code>flag&#123;5BC925649CB0188F52E617D70929191C&#125;</code>。</p>\n<h3 id=\"30-荷兰宽带数据泄露\"><a href=\"#30-荷兰宽带数据泄露\" class=\"headerlink\" title=\"30.荷兰宽带数据泄露\"></a>30.荷兰宽带数据泄露</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103005837061.png\" alt=\"image-20231103005837061\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>题目附件下载下来是**.bin**文件</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103005941061.png\" alt=\"image-20231103005941061\" style=\"zoom:67%;\">\n\n<p>这玩意还要再去下个工具：<strong>routepassview</strong></p>\n<p>用工具打开文件：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103010501946.png\" alt=\"image-20231103010501946\" style=\"zoom:67%;\">\n\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103010715509.png\" alt=\"image-20231103010715509\" style=\"zoom:67%;\">\n\n<p>这边找到了username和password，试试哪个是flag。</p>\n<p>flag是username的：<code>flag&#123;053700357621&#125;</code>。</p>\n<h3 id=\"31-面具下的flag\"><a href=\"#31-面具下的flag\" class=\"headerlink\" title=\"31.面具下的flag\"></a>31.面具下的flag</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103010912859.png\" alt=\"image-20231103010912859\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>附件下载下来是一张图片：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103011023899.png\" alt=\"image-20231103011023899\" style=\"zoom:67%;\">\n\n<p>感觉宽高不太对啊，改改看，用工具说没问题，看看010里面啥样：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103011342352.png\" alt=\"image-20231103011342352\" style=\"zoom:67%;\">\n\n<p>有pk、有flag字样，试试binwalk分离：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103011637325.png\" alt=\"image-20231103011637325\" style=\"zoom:67%;\">\n\n<p>分离出来一个压缩包，用010看发现是伪加密，把<code>09 00</code>改成<code>00 00</code>，保存：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103012341902.png\" alt=\"image-20231103012341902\" style=\"zoom:67%;\">\n\n<p>成功解压出来：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103012644500.png\" alt=\"image-20231103012644500\" style=\"zoom:67%;\">\n\n<p>在网上搜了，说用**.7z**就可以查看vmdk文件了，用看看：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103013233392.png\" alt=\"image-20231103013233392\" style=\"zoom:67%;\">\n\n<p>![image-20231103013245028](BUU MISC第一页&#x2F;image-20231103013245028.png)</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103013306460.png\" alt=\"image-20231103013306460\" style=\"zoom:67%;\">\n\n<p>可恶，在windows上面看不到，那试试Linux，打开kali输入<code>7z x flag.vmdk </code>，得到了文件夹：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103013456425.png\" alt=\"image-20231103013456425\" style=\"zoom:67%;\">\n\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103013524387.png\" alt=\"image-20231103013524387\" style=\"zoom:67%;\">\n\n<p>一眼鉴定为Brainfuck，在线解密康康：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103013646579.png\" alt=\"image-20231103013646579\" style=\"zoom:67%;\">\n\n<p>得到前半截flag：<code>flag&#123;N7F5_AD5</code></p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103013729241.png\" alt=\"image-20231103013729241\" style=\"zoom:67%;\">\n\n<p>Ook解密：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103013912432.png\" alt=\"image-20231103013912432\" style=\"zoom:67%;\">\n\n<p>得到后半截flag：<code>_i5_funny!&#125;</code></p>\n<p>最终flag为：<code>flag&#123;N7F5_AD5_i5_funny!&#125;</code>。</p>\n<h3 id=\"32-九连环\"><a href=\"#32-九连环\" class=\"headerlink\" title=\"32.九连环\"></a>32.九连环</h3><img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103014131334.png\" alt=\"image-20231103014131334\" style=\"zoom:67%;\">\n\n<p>本题来自buuctf。</p>\n<p>附件下载下来是一张图片：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103221255746.png\" alt=\"image-20231103221255746\" style=\"zoom:67%;\">\n\n<p>属性没事，010康康：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231103221622135.png\" alt=\"image-20231103221622135\" style=\"zoom:67%;\">\n\n<p>图片里面藏了压缩i包，用binwalk分离出来：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231104014235292.png\" alt=\"image-20231104014235292\" style=\"zoom:67%;\">\n\n<p>拖出来用010打开：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231104014429443.png\" alt=\"image-20231104014429443\" style=\"zoom:67%;\">\n\n<p>发现是zip伪加密，将<code>00 01</code>改为<code>00 00</code>就可以了</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231104014606341.png\" alt=\"image-20231104014606341\" style=\"zoom:67%;\">\n\n<p>成功解压，得到另一个加密的文件夹。</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231104014643534.png\" alt=\"image-20231104014643534\" style=\"zoom:67%;\">\n\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231104015204886.png\" alt=\"image-20231104015204886\" style=\"zoom:67%;\">\n\n<p>这回好像是真的加密了，改了没用，那看看图片有没有藏东西：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231104015842337.png\" alt=\"image-20231104015842337\" style=\"zoom:67%;\">\n\n<p>binwalk没用，steghide发现藏了<strong>ko.txt</strong>文件，输入<code>steghide extract -sf good-已合并.jpg</code>提取出来</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231104020108651.png\" alt=\"image-20231104020108651\" style=\"zoom:67%;\">\n\n<p>打开不知道是啥，试试是不是压缩包的密码，解压成功，得到flag：</p>\n<img src=\"/2023/11/04/BUU%20MISC%E7%AC%AC%E4%B8%80%E9%A1%B5/image-20231104020306299.png\" alt=\"image-20231104020306299\" style=\"zoom:67%;\">\n\n<p>flag为：<code>flag&#123;1RTo8w@&amp;4nK@z*XL&#125;</code>。</p>\n"},{"title":"BUU MISC第二页","date":"2023-12-09T12:00:01.000Z","cover":"/illust_99248298_20220722_142026.jpg","_content":"# BUU MISC第二页\n\n### 1.被劫持的神秘礼物\n\n<img src=\"BUU MISC第二页/image-20231116195450524.png\" alt=\"image-20231116195450524\" style=\"zoom:67%;\" />\n\n这题是流量分析，上来先http过滤一下，这条比较可疑，追踪一下tcp流：\n\n<img src=\"BUU MISC第二页/image-20231116195905524.png\" alt=\"image-20231116195905524\" style=\"zoom:67%;\" />\n\n![image-20231116195953609](BUU MISC第二页/image-20231116195953609.png)\n\n根据题目所写，”找到帐号密码，串在一起，用32位小写MD5哈希一下得到的就是答案“，那么本题答案为：`adminaadminb`，拿去用32位MD5哈希一下：\n\n<img src=\"BUU MISC第二页/image-20231116200756188.png\" alt=\"image-20231116200756188\" style=\"zoom:67%;\" />\n\nflag为：`flag{1d240aafe21a86afc11f38a45b541a49}`。\n\n### 2.[BJDCTF2020]认真你就输了\n\n<img src=\"BUU MISC第二页/image-20231116201610324.png\" alt=\"image-20231116201610324\" style=\"zoom:67%;\" />\n\n下载下来是一个**.xls**文件，打开是这样，没有东西，用bandzip打开看看：\n\n<img src=\"BUU MISC第二页/image-20231116202048077.png\" alt=\"image-20231116202048077\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231116202136439.png\" alt=\"image-20231116202136439\" style=\"zoom:67%;\" />\n\n一顿翻找，找到了flag：`flag{M9eVfi2Pcs#}`。\n\n### 3.[BJDCTF2020]藏藏藏\n\n<img src=\"BUU MISC第二页/image-20231116202242375.png\" alt=\"image-20231116202242375\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231116202340218.png\" alt=\"image-20231116202340218\" style=\"zoom:67%;\" />\n\n下载下来是一个图片，先看看属性没问题，再用010看看，有压缩包：\n\n<img src=\"BUU MISC第二页/image-20231116202652184.png\" alt=\"image-20231116202652184\" style=\"zoom:67%;\" />\n\n用kali，binwalk、foremost，得到压缩包：\n\n<img src=\"BUU MISC第二页/image-20231116221127242.png\" alt=\"image-20231116221127242\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231116221149333.png\" alt=\"image-20231116221149333\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231116221219237.png\" alt=\"image-20231116221219237\" style=\"zoom:67%;\" />\n\n打开得到二维码，扫一下得到本题的flag：`flag{you are the best!}`。\n\n### 4.被偷走的文件\n\n<img src=\"BUU MISC第二页/image-20231125114517454.png\" alt=\"image-20231125114517454\" style=\"zoom:67%;\" />\n\n分析流量时找到了这条，将FTP过滤出来看看：\n\n<img src=\"BUU MISC第二页/image-20231125114555413.png\" alt=\"image-20231125114555413\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231125114810488.png\" alt=\"image-20231125114810488\" style=\"zoom:67%;\" />\n\n追踪看看，说明被偷走了**flag.rar**文件：\n\n<img src=\"BUU MISC第二页/image-20231125114834857.png\" alt=\"image-20231125114834857\" style=\"zoom:67%;\" />\n\n用foremost分离流量包看看：\n\n<img src=\"BUU MISC第二页/image-20231125115048235.png\" alt=\"image-20231125115048235\" style=\"zoom:67%;\" />\n\n成功得到一个加密的压缩包文件，尝试暴力破解：\n\n<img src=\"BUU MISC第二页/image-20231125115216084.png\" alt=\"image-20231125115216084\" style=\"zoom:67%;\" />\n\n发现是四位纯数字密码：`5790`\n\n得到flag：`flag{6fe99a5d03fb01f833ec3caa80358fa3}`。\n\n### 5.刷新过的图片\n\n<img src=\"BUU MISC第二页/image-20231203190350284.png\" alt=\"image-20231203190350284\" style=\"zoom:67%;\" />\n\n键盘上的刷新键快捷键是F5,可以得知这题应该是F5隐写，上网找工具下载下来：**F5-steganography-master**，一开始怎么都用不起来，后来才发现是java版本的问题。\n\n#### 关于解决F5工具java版本问题的方法\n\n解决java版本问题的原文链接：https://blog.csdn.net/pythllc/article/details/128969843\n\n因为java版本是kali自带的17.0.5的版本，使用F5-steganography会出现报错，网上找到的博客中介绍的解决办法是安装java11，小版本不影响，改一下教程里面的版本就行，我下到的版本为**jdk-11.0.21_linux-x64_bin.tar.gz**，所以教程经过小改动后是：\n\n1.下载好后，将压缩包移动到/etc/opt目录再进行解压\n\n2.移动压缩包至opt目录\n\n```\nmv jdk-11.0.21_linux-x64_bin.tar.gz /etc/opt\n```\n\n3.移动好后切换至opt目录进行解压\n\n```\ncd /etc/opt\n```\n\n4.解压\n\n```\ntar -zxvf jdk-11.0.21_linux-x64_bin.tar.gz\n```\n\n5.拷贝解压后Java文件夹至/usr/bin\n\n```\ncp -r jdk-11.0.21/ /usr/bin\n```\n\n6.安装并注册\n\n```\nupdate-alternatives --install /usr/bin/java java /etc/opt/jdk-11.0.21/bin/java 1\n\nupdate-alternatives --install /usr/bin/javac javac /etc/opt/jdk-11.0.21/bin/javac 1\n\nupdate-alternatives --set java /etc/opt/jdk-11.0.21/bin/java\n\nupdate-alternatives --set javac /etc/opt/jdk-11.0.21/bin/javac\n```\n\n现在就可以正常使用F5工具了。\n\n#### F5工具的使用\n\n执行F5工具的命令为：\n\n```\njava Extract /图片的绝对路径 [-p 密码] [-e 输出文件]\n```\n\n一般在CTF题目中，密码就是图片名字，本题并不需要输入密码\n\n<img src=\"BUU MISC第二页/image-20231203192026164.png\" alt=\"image-20231203192026164\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231203192047884.png\" alt=\"image-20231203192047884\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231203192100854.png\" alt=\"image-20231203192100854\" style=\"zoom:67%;\" />\n\n打开**output.txt**，发现PK开头，那这个应该是一个zip压缩包，改下后缀，发现文件被加密了，猜测是伪加密：\n\n<img src=\"BUU MISC第二页/image-20231203192156470.png\" alt=\"image-20231203192156470\" style=\"zoom:67%;\" />\n\n拖进010看一眼，果然是伪加密，`01 00`改成`00 00`：\n\n<img src=\"BUU MISC第二页/image-20231203192350491.png\" alt=\"image-20231203192350491\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231203192447918.png\" alt=\"image-20231203192447918\" style=\"zoom:67%;\" />\n\n成功得到flag：`flag{96efd0a2037d06f34199e921079778ee}`。\n\n### 6.[GXYCTF2019]佛系青年\n\n<img src=\"BUU MISC第二页/image-20231203193202986.png\" alt=\"image-20231203193202986\" style=\"zoom:67%;\" />\n\n看题目就猜测是与佛论禅加密，下载下来发现压缩包里面被加密了,估计是伪加密：\n\n<img src=\"BUU MISC第二页/image-20231203193314238.png\" alt=\"image-20231203193314238\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231203193406311.png\" alt=\"image-20231203193406311\" style=\"zoom:67%;\" />\n\n果然是伪加密，把`09 00`改成`00 00`，成功解压出来：\n\n<img src=\"BUU MISC第二页/image-20231203193508467.png\" alt=\"image-20231203193508467\" style=\"zoom:67%;\" />\n\n在网上找了几个与佛论禅的网站，最终找到是Bugku的可以成功解密：\n\n<img src=\"BUU MISC第二页/image-20231203193558273.png\" alt=\"image-20231203193558273\" style=\"zoom:67%;\" />\n\nflag为：`flag{w0_fo_ci_Be1}`。\n\n### 7.[BJDCTF2020]你猜我是个啥\n\n<img src=\"BUU MISC第二页/image-20231203193700775.png\" alt=\"image-20231203193700775\" style=\"zoom:67%;\" />\n\n下载下来是一个zip文件，但是用bandzip打开发现这个不是一个压缩包，用在线文件检查网站检查了一下，发现是个**png**文件\n\n<img src=\"BUU MISC第二页/image-20231203194054577.png\" alt=\"image-20231203194054577\" style=\"zoom:67%;\" />\n\n改完后缀给了一个二维码，扫看看：\n\n<img src=\"BUU MISC第二页/image-20231203194139439.png\" alt=\"image-20231203194139439\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231203194211872.png\" alt=\"image-20231203194211872\" style=\"zoom:67%;\" />\n\n哦？flag不在这里，用010看看，原来flag藏在这里啊：\n\n<img src=\"BUU MISC第二页/image-20231203194305702.png\" alt=\"image-20231203194305702\" style=\"zoom:67%;\" />\n\nflag为：`flag{i_am_fl@g}`。\n\n### 8.snake\n\n<img src=\"BUU MISC第二页/image-20231203194617231.png\" alt=\"image-20231203194617231\" style=\"zoom:67%;\" />\n\n下载下来是一张图片，用010看一眼，好家伙，有两个压缩包：\n\n<img src=\"BUU MISC第二页/image-20231203194647200.png\" alt=\"image-20231203194647200\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231203194837293.png\" alt=\"image-20231203194837293\" style=\"zoom:67%;\" />\n\n用binwalk分离：\n\n<img src=\"BUU MISC第二页/image-20231203195200078.png\" alt=\"image-20231203195200078\" style=\"zoom:67%;\" />\n\n得到**cipher**和**key**两个文件，key里面是一段base64编码，翻译一下：\n\n<img src=\"BUU MISC第二页/image-20231203195313506.png\" alt=\"image-20231203195313506\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231203195411777.png\" alt=\"image-20231203195411777\" style=\"zoom:67%;\" />\n\n`What is Nicki Minaj's favorite song that refers to snakes?`根据这段提示，搜索得知答案为`anaconda`\n\n在网上搜索与蛇相关的加密算法，找到了**Serpent加密**\n\n找到了这个在线解密网站：[Serpent 加密 – 轻松加密或解密字符串或文件 (online-domain-tools.com)](http://serpent.online-domain-tools.com/)\n\n<img src=\"BUU MISC第二页/image-20231203200040795.png\" alt=\"image-20231203200040795\" style=\"zoom:67%;\" />\n\n成功得到flag：`flag{who_knew_serpent_cipher_existed}`。\n\n### 9.秘密文件\n\n<img src=\"BUU MISC第二页/image-20231203201303694.png\" alt=\"image-20231203201303694\" style=\"zoom:67%;\" />\n\n猜测这题和之前那道**被偷走的文件**一样，先过滤一下**ftp**：\n\n<img src=\"BUU MISC第二页/image-20231203201344531.png\" alt=\"image-20231203201344531\" style=\"zoom:67%;\" />\n\n看着就很可疑，追踪一下tcp流：\n\n<img src=\"BUU MISC第二页/image-20231203201439351.png\" alt=\"image-20231203201439351\" style=\"zoom:67%;\" />\n\n找到被偷走的机密文件了，用kali去foremost分离一下：\n\n<img src=\"BUU MISC第二页/image-20231203201654872.png\" alt=\"image-20231203201654872\" style=\"zoom:67%;\" />\n\n得到一个加密的压缩包，爆一下得到压缩包密码为：`1903`\n\n<img src=\"BUU MISC第二页/image-20231203201759058.png\" alt=\"image-20231203201759058\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231203201833309.png\" alt=\"image-20231203201833309\" style=\"zoom:67%;\" />\n\n得到flag：`flag{d72e5a671aa50fa5f400e5d10eedeaa5}`。\n\n### 10.[BJDCTF2020]just_a_rar\n\n<img src=\"BUU MISC第二页/image-20231203234818626.png\" alt=\"image-20231203234818626\" style=\"zoom:67%;\" />\n\n下载下来是一个加密的rar文件：\n\n<img src=\"BUU MISC第二页/image-20231203234908095.png\" alt=\"image-20231203234908095\" style=\"zoom:67%;\" />\n\n根据提示，是四位纯数字密码，爆破一下得到密码为：`2016`\n\n<img src=\"BUU MISC第二页/image-20231203235021837.png\" alt=\"image-20231203235021837\" style=\"zoom:67%;\" />\n\n解压得到图片：\n\n<img src=\"BUU MISC第二页/image-20231203235059836.png\" alt=\"image-20231203235059836\" style=\"zoom:67%;\" />\n\n第一步检查属性，结果直接找到了flag：\n\n<img src=\"BUU MISC第二页/image-20231203235207075.png\" alt=\"image-20231203235207075\" style=\"zoom:67%;\" />\n\nflag为：`flag{Wadf_123}`。\n\n### 11.[BJDCTF2020]鸡你太美\n\n<img src=\"BUU MISC第二页/image-20231203235306913.png\" alt=\"image-20231203235306913\" style=\"zoom:67%;\" />\n\n解压发现鸡哥的gif图：\n\n<img src=\"BUU MISC第二页/image-20231203235419051.png\" alt=\"image-20231203235419051\" style=\"zoom:67%;\" />\n\n先拆分一下gif看看有没有暗藏玄鸡\n\n<img src=\"BUU MISC第二页/image-20231203235552446.png\" alt=\"image-20231203235552446\" style=\"zoom:67%;\" />\n\n![image-20231203235603898](BUU MISC第二页/image-20231203235603898.png)\n\n整整200帧居然没藏东西，看看篮球副本，好像坏了打不开，用010看看发现好像少文件头\n\n<img src=\"BUU MISC第二页/image-20231203235950197.png\" alt=\"image-20231203235950197\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204000002248.png\" alt=\"image-20231204000002248\" style=\"zoom:67%;\" />\n\n给他补全看看：\n\n<img src=\"BUU MISC第二页/image-20231204000213007.png\" alt=\"image-20231204000213007\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204000229830.png\" alt=\"image-20231204000229830\" style=\"zoom:67%;\" />\n\n得到flag：`flag{zhi-yin-you-are-beautiful}`，但是发现交上去不对，查了wp发现buu上的flag是：`flag{zhi_yin_you_are_beautiful}`。\n\n### 12.菜刀666\n\n<img src=\"BUU MISC第二页/image-20231204000656325.png\" alt=\"image-20231204000656325\" style=\"zoom:67%;\" />\n\n这题是流量分析，看了半天没办法，去参考wp了。\n\n先过滤**POST**的包：\n\n```\nhttp.request.method==POST\n```\n\n在**tcp.stream eq 7**中发现了大量的数据\n\n<img src=\"BUU MISC第二页/image-20231204001906241.png\" alt=\"image-20231204001906241\" style=\"zoom:67%;\" />\n\n`FF D8`开头`FF D9`结尾，判断为`jpg`图片，将这些十六进制复制出来，以原始文件流写入文件：\n\n##### 16进制转jpg图片\n\n```python\n#Author: MoChu7\nimport struct\n\na = open(\"str.txt\",\"r\")#十六进制数据文件\nlines = a.read()\nres = [lines[i:i+2] for i in range(0,len(lines),2)]\n\nwith open(\"res.jpg\",\"wb\") as f:\n\tfor i in res:\n\t\ts = struct.pack('B',int(i,16))\n\t\tf.write(s)\n```\n\n得到图片：\n\n<img src=\"BUU MISC第二页/image-20231204002400611.png\" alt=\"image-20231204002400611\" style=\"zoom:67%;\" />\n\n这是一个密码，那么还会有个压缩包，在这段流中找到一个**hello.zip**压缩包，foremost分离一下流量包：\n\n<img src=\"BUU MISC第二页/image-20231204002452504.png\" alt=\"image-20231204002452504\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204002850837.png\" alt=\"image-20231204002850837\" style=\"zoom:67%;\" />\n\n输入密码：`Th1s_1s_p4sswd_!!!`\n\n<img src=\"BUU MISC第二页/image-20231204003047862.png\" alt=\"image-20231204003047862\" style=\"zoom:67%;\" />\n\n得到flag：`flag{3OpWdJ-JP6FzK-koCMAK-VkfWBq-75Un2z}`。\n\n### 13.[BJDCTF2020]一叶障目\n\n<img src=\"BUU MISC第二页/image-20231204190453001.png\" alt=\"image-20231204190453001\" style=\"zoom:67%;\" />\n\n下载解压就是一张图片，拖进010看看：\n\n<img src=\"BUU MISC第二页/image-20231204190517609.png\" alt=\"image-20231204190517609\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204190542422.png\" alt=\"image-20231204190542422\" style=\"zoom:67%;\" />\n\n发现报错说crc不对，那应该是crc不正确，用工具爆破一下：\n\n<img src=\"BUU MISC第二页/image-20231204190628126.png\" alt=\"image-20231204190628126\" style=\"zoom:67%;\" />\n\n直接得到flag：`flag{66666}`。\n\n### 14.[SWPU2019]神奇的二维码\n\n<img src=\"BUU MISC第二页/image-20231204190948248.png\" alt=\"image-20231204190948248\" style=\"zoom:67%;\" />\n\n这题下载下来是一个二维码，先拖进010看看，发现没东西，扫码看看：\n\n<img src=\"BUU MISC第二页/image-20231204191213913.png\" alt=\"image-20231204191213913\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204191302186.png\" alt=\"image-20231204191302186\" style=\"zoom:67%;\" />\n\nflag不在这里，拖进kali里面binwalk看看，得到这些东西：\n\n<img src=\"BUU MISC第二页/image-20231204191340102.png\" alt=\"image-20231204191340102\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204191408741.png\" alt=\"image-20231204191408741\" style=\"zoom:67%;\" />\n\n这是一段base64加密，解密得到：`asdfghjkl1234567890`\n\n发现是那个加密的压缩包里面**flag.jpg**文件的密码，kali直接给我图片搞出来了，看看word文档：\n\n<img src=\"BUU MISC第二页/image-20231204191629040.png\" alt=\"image-20231204191629040\" style=\"zoom:67%;\" />\n\n超大一坨，猜测base64多次加密，试试：\n\n<img src=\"BUU MISC第二页/image-20231204191844688.png\" alt=\"image-20231204191844688\" style=\"zoom:67%;\" />\n\n我靠，base64加密了20层，以为得到flag：`flag{comEON_YOuAreSOSoS0great}`。错了！回头发现压缩包里面还有个音频文件，原来得到的``comEON_YOuAreSOSoS0great`是这个压缩包的密码，听了发现是摩斯密码：\n\n<img src=\"BUU MISC第二页/image-20231204192355168.png\" alt=\"image-20231204192355168\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204192520360.png\" alt=\"image-20231204192520360\" style=\"zoom:67%;\" />\n\n```\n-- --- .-. ... . .. ... ...- . .-. -.-- ...- . .-. -.-- . .- ... -.--\n```\n\n<img src=\"BUU MISC第二页/image-20231204193006361.png\" alt=\"image-20231204193006361\" style=\"zoom:67%;\" />\n\n这边要都转成小写才是正确的flag：`flag{morseisveryveryeasy}`。\n\n### 15.[BJDCTF2020]纳尼\n\n<img src=\"BUU MISC第二页/image-20231204193210939.png\" alt=\"image-20231204193210939\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204193242805.png\" alt=\"image-20231204193242805\" style=\"zoom:67%;\" />\n\n打开发现gif图打不开，根据之前写的一题，猜测是修复文件头，用010看看，果然是：\n\n<img src=\"BUU MISC第二页/image-20231204193356600.png\" alt=\"image-20231204193356600\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204193508018.png\" alt=\"image-20231204193508018\" style=\"zoom:67%;\" />\n\n修好打开一看，gif图里面每帧都是一段base64的部分，拆开发现总共4帧，提取文字汇总一下：\n\n<img src=\"BUU MISC第二页/image-20231204193715022.png\" alt=\"image-20231204193715022\" style=\"zoom:67%;\" />\n\n得到：`Q1RGe3dhbmdfYmFvX3FpYW5nX2lzX3NhZH0=`，解密得到flag：\n\n<img src=\"BUU MISC第二页/image-20231204193959516.png\" alt=\"image-20231204193959516\" style=\"zoom:67%;\" />\n\nflag为：`flag{wang_bao_qiang_is_sad}`。\n\n### 16.梅花香之苦寒来\n\n<img src=\"BUU MISC第二页/image-20231204194155541.png\" alt=\"image-20231204194155541\" style=\"zoom:67%;\" />\n\n下载下来是一个图片，按照惯例看看属性：\n\n<img src=\"BUU MISC第二页/image-20231204194247971.png\" alt=\"image-20231204194247971\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204194313711.png\" alt=\"image-20231204194313711\" style=\"zoom:67%;\" />\n\n有提示？拖进kali没找到东西，用010看看：\n\n<img src=\"BUU MISC第二页/image-20231204194827296.png\" alt=\"image-20231204194827296\" style=\"zoom:67%;\" />\n\n发现在文件后面藏了大量数据，感觉像**菜刀666**那题，这些应该也是16进制数据，需要脚本，上网搜wp，这是转换的脚本：\n\n##### 16进制转字符串\n\n```py\nwith open('hex.txt', 'r') as h:     # hex.txt为要转换的文本文件\n    val = h.read()\n    h.close()\n\nwith open('result.txt', 'w') as re: # 转换完成后写入result.txt\n    tem = ''\n    for i in range(0, len(val), 2):\n        tem = '0x' + val[i] + val[i+1]\n        tem = int(tem, base=16)\n        print(chr(tem), end=\"\")\n        re.write(chr(tem))\n    re.close()\n```\n\n<img src=\"BUU MISC第二页/image-20231204195602509.png\" alt=\"image-20231204195602509\" style=\"zoom:67%;\" />\n\n得到一堆坐标，需要画图，用matplotlib画图片，脚本为：\n\n##### 二维坐标画图\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# 逐行读取文件，去除括号并分割数值\nwith open('result.txt', 'r') as file:\n    data = [line.strip('()\\n').split(',') for line in file]\n\n# 将字符串值转换为浮点数\nx, y = np.array(data, dtype=float).T\n\n# 绘制数据图\nplt.plot(x, y, '.')\nplt.show()\n```\n\n得到二维码：\n\n<img src=\"BUU MISC第二页/image-20231204211343476.png\" alt=\"image-20231204211343476\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204211456819.png\" alt=\"image-20231204211456819\" style=\"zoom:67%;\" />\n\n得到flag：`flag{40fc0a979f759c8892f4dc045e28b820}`。\n\n### 17.[HBNIS2018]excel破解\n\n![image-20231207190639195](C:\\Users\\48956\\AppData\\Roaming\\Typora\\typora-user-images\\image-20231207190639195.png)\n\n下载下来是一个**xls**文件，被加密了打不开，改成**zip**用010打开，搜索flag，结果直接找到了：\n\n<img src=\"C:\\Users\\48956\\AppData\\Roaming\\Typora\\typora-user-images\\image-20231207191246922.png\" alt=\"image-20231207191246922\" style=\"zoom:67%;\" />\n\nflag为：`flag{office_easy_cracked}`。\n\n### 18.[HBNIS2018]来题中等的吧\n\n<img src=\"BUU MISC第二页/image-20231207191425076.png\" alt=\"image-20231207191425076\" style=\"zoom:67%;\" />\n\n这题下下来解压得到一个png\n\n<img src=\"BUU MISC第二页/image-20231207191452348.png\" alt=\"image-20231207191452348\" style=\"zoom:67%;\" />\n\n像摩斯密码，翻译一下是`.- .-.. .--. .... .- .-.. .- -...`，在线翻译出来是：`ALPHALAB`，用各种方法查了一遍图片，好像没东西了。\n\n万一是flag呢？转换成小写提交看看：`flag{alphalab}`，还真是。\n\n### 19.[ACTF新生赛2020]outguess\n\n<img src=\"BUU MISC第二页/image-20231207192019538.png\" alt=\"image-20231207192019538\" style=\"zoom:67%;\" />\n\n下载下来解压得到：\n\n<img src=\"BUU MISC第二页/image-20231207192129749.png\" alt=\"image-20231207192129749\" style=\"zoom:67%;\" />\n\n查看图片属性时发现备注应该是社会主义核心价值观加密：\n\n<img src=\"BUU MISC第二页/image-20231207192155042.png\" alt=\"image-20231207192155042\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231207192302627.png\" alt=\"image-20231207192302627\" style=\"zoom:67%;\" />\n\n解密得到：`abc`\n\n模仿上题尝试提交看看，果然不对，回头搜搜guess是啥，找到一个工具叫**outguess**。\n\n#### 使用outguess\n输入outguess -help即可获得相关命令。\n\n**注意在windows里面需要加`\" \"`而在Linux里面不需要**\n\n- 加密：\n\n```\noutguess -k “my secret key” -d hidden.txt demo.jpg out.jpg\n```\n加密之后，demo.jpg会覆盖out.jpg，hidden.txt的内容是要隐藏的东西。\n\n- 解密：\n\n```\noutguess -k “my secret key” -r out.jpg hidden.txt\n```\n\n解密之后，紧密内容放在hidden.txt中。\n\n之前解密出来的**abc**应该就是**key**，那么本题的指令就是：\n\n```\noutguess -k abc -r mmm.jpg hidden.txt\n```\n\n得到flag：`flag{gue33_Gu3Ss!2020}`。\n\n### 20.穿越时空的思念\n\n<img src=\"BUU MISC第二页/image-20231207194219079.png\" alt=\"image-20231207194219079\" style=\"zoom:67%;\" />\n\n下载下来是一个mp3文件，用audacity打开看看，里面好像有段摩斯：\n\n<img src=\"BUU MISC第二页/image-20231207194435380.png\" alt=\"image-20231207194435380\" style=\"zoom:67%;\" />\n\n`..-. ----- ..--- ----. -... -.. -.... ..-. ..... ..... .---- .---- ...-- ----. . . -.. . -... ---.. . ....- ..... .- .---- --... ..... -... ----- --... ---.. -....`\n\n翻译出来是，再转成小写：\n\n```\nF029BD6F551139EEDEB8E45A175B0786\n\nf029bd6f551139eedeb8e45a175b0786\n```\n\n套个flag头提交看看，结果就是flag，flag为：`flag{f029bd6f551139eedeb8e45a175b0786}`。\n\n### 21.谁赢了比赛？\n\n<img src=\"BUU MISC第二页/image-20231207195203651.png\" alt=\"image-20231207195203651\" style=\"zoom:67%;\" />\n\n题目下载下来是一个png图片，是一个棋谱：\n\n<img src=\"BUU MISC第二页/image-20231207195254469.png\" alt=\"image-20231207195254469\" style=\"zoom: 67%;\" />\n\n在010中看到了这个，貌似里面藏了一个**flag.txt**文件：\n\n![image-20231207195431073](BUU MISC第二页/image-20231207195431073.png)\n\nbinwalk分离出来一个rar文件，里面有一个加密的gif文件：\n\n![image-20231207195745064](BUU MISC第二页/image-20231207195745064.png)\n\n<img src=\"BUU MISC第二页/image-20231207200019211.png\" alt=\"image-20231207200019211\" style=\"zoom:67%;\" />\n\n爆破出密码是`1020`，得到gif图，拆分一下\n\n<img src=\"BUU MISC第二页/image-20231207200225524.png\" alt=\"image-20231207200225524\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231207200405626.png\" alt=\"image-20231207200405626\" style=\"zoom:50%;\" />\n\n找到一个与众不同的图片，图片上有这一句话，说明还没结束：\n\n![image-20231207200452371](BUU MISC第二页/image-20231207200452371.png)\n\n把这张图片扔进stegsolve，在Red 0通道发现有二维码：\n\n<img src=\"BUU MISC第二页/image-20231207201125291.png\" alt=\"image-20231207201125291\" style=\"zoom: 67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231207201214134.png\" alt=\"image-20231207201214134\" style=\"zoom:67%;\" />\n\n扫一下成功得到flag：`flag{shanxiajingwu_won_the_game}`。\n\n### 22.[WUSTCTF2020]find_me\n\n<img src=\"BUU MISC第二页/image-20231207201323027.png\" alt=\"image-20231207201323027\" style=\"zoom:67%;\" />\n\n下下来就是一个jpg文件，查看属性发现盲文：\n\n<img src=\"BUU MISC第二页/image-20231207201445968.png\" alt=\"image-20231207201445968\" style=\"zoom: 67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231207201537387.png\" alt=\"image-20231207201537387\" style=\"zoom: 67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231207201739356.png\" alt=\"image-20231207201739356\" style=\"zoom:67%;\" />\n\n用网站翻译得到flag：`flag{y$0$u_f$1$n$d$_M$e$e$e$e$e}`。\n\n### 23.[SWPU2019]我有一只马里奥\n\n<img src=\"BUU MISC第二页/image-20231207202117408.png\" alt=\"image-20231207202117408\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231207202128334.png\" alt=\"image-20231207202128334\" style=\"zoom:67%;\" />\n\n运行发现多了一个**1.txt**文件，打开发现提示ntfs，即NTFS数据交换流。\n\n<img src=\"BUU MISC第二页/image-20231207202214558.png\" alt=\"image-20231207202214558\" style=\"zoom:67%;\" />\n\n#### 什么是NTFS数据流？\n> NTFS交换数据流（alternate data streams，简称ADS）是NTFS磁盘格式的一个特性，在NTFS文件系统下，每个文件都可以存在多个数据流，就是说除了主文件流之外还可以有许多非主文件流寄宿在主文件流中。它使用资源派生来维持与文件相关的信息。————百度百科\n\n> NTFS交换数据流（alternate data streams，简称ADS）是NTFS磁盘格式的一个特性，在NTFS文件系统下，每个文件都可以存在多个数据流，就是说除了主文件流之外还可以有许多非主文件流寄宿在主文件流中。它使用资源派生来维持与文件相关的信息，虽然我们无法看到数据流文件，但是它却是真实存在于我们的系统中的。创建一个数据交换流文件的方法很简单，命令为“宿主文件：准备与宿主文件关联的数据流文件”。————百度百科\n\n#### NTFS数据流隐藏文件的方法和实例\n\n创建一个数据交换流文件的方法，命令为“宿主文件：准备与宿主文件关联的数据流文件”。\n\n##### 1.单文件流隐藏\n\n先在F盘中新建一个空的文本文件，命名为m0re.txt，\n创建一个NTFS数据流，\n\n```bash\necho \"i am a test\" > :m0re.txt\n```\n\n已经成功的隐藏信息，查看方式有两种\n一种是使用windows自带的notepad查看，命令如下\n\n```bash\nnotepad :m0re.txt\n```\n\n第二种方法是使用工具，`lads.exe`\n\n```bash\nlads.exe /S\n```\n\n扫描到这个文件存在NTFS数据流，然后用第一种方法显示出来。\n\n##### 2.关联文件流\n\n```\necho \"https://m0re.top\" > lalala.txt:m0re.txt\n```\n\n此时的m0re.txt是宿主文件，将信息内容隐藏到宿主文件中了，直接打开lalala.txt:m0re.txt查看数据流文件\n\n这里需要注意的是这个不是将数据写入到文件中，而是创建了NTFS数据流，信息都在数据流当中。这个`lalala.txt:m0re.txt`就是创建的流文件。\n\n当然不止可以隐藏文本数据，还可以隐藏其他的文件，比如exe可执行文件，pyc文件等\n\n这里使用type命令，来隐藏文件。\n\n```\n#隐藏图片到另一张图片中\ntype yincang.jpg >yincang.jpg:suzhu.jpg\n\n#查看方式使用windows自带的mspaint.exe\nmspaint.exe yincang.jpg:suzhu.jpg\n```\n\n那么在本题中，先将文件都放在同一个文件夹中，再输入这个指令：\n\n```\nnotepad 1.txt:flag.txt\n```\n\n<img src=\"BUU MISC第二页/image-20231207221841155.png\" alt=\"image-20231207221841155\" style=\"zoom:67%;\" />\n\n就能得到flag：`flag{ddg_is_cute}`。\n\n### 24.[GUET-CTF2019]KO\n\n<img src=\"BUU MISC第二页/image-20231208135026442.png\" alt=\"image-20231208135026442\" style=\"zoom:67%;\" />\n\n 下载下来是Ook解密;\n\n```\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook!\nOok! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook!\nOok. Ook? Ook! Ook! Ook! Ook! Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook!\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook?\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook.\nOok. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook.\nOok. Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook!\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok! Ook? Ook! Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook!\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook?\nOok. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook!\nOok! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook!\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!\nOok? Ook. Ook? Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook!\nOok? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook.\nOok? Ook! Ook. Ook? Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook! Ook? Ook! Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook.\nOok? Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!\nOok. Ook? Ook.\n```\n\n用在线网站翻译一下，得到：`welcome to CTF`，包上flag头，得到本题的flag：`flag{welcome to CTF}`。\n\n### 25.[GXYCTF2019]gakki\n\n<img src=\"BUU MISC第二页/image-20231208140317860.png\" alt=\"image-20231208140317860\" style=\"zoom:67%;\" />\n\n下下来是一个jpg图片，放进010里面可以找到藏了rar文件：\n\n<img src=\"BUU MISC第二页/image-20231208140603455.png\" alt=\"image-20231208140603455\" style=\"zoom: 67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231208140756245.png\" alt=\"image-20231208140756245\" style=\"zoom:67%;\" />\n\nbinwalk一下得到一个加密的rar压缩包，用工具爆出来密码`8864`：\n\n<img src=\"BUU MISC第二页/image-20231208141323096.png\" alt=\"image-20231208141323096\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231208141521644.png\" alt=\"image-20231208141521644\" style=\"zoom:67%;\" />\n\n打开得到这样的一大坨密文：\n\n<img src=\"BUU MISC第二页/image-20231208141659361.png\" alt=\"image-20231208141659361\" style=\"zoom:67%;\" />\n\n没找到是啥加密，去搜了搜，发现是字频统计，用puzzlesolver工具做：\n\n<img src=\"BUU MISC第二页/image-20231208142144663.png\" alt=\"image-20231208142144663\" style=\"zoom:67%;\" />\n\n得到flag：`flag{gaki_IsMyw1fe}`。\n\n### 26.[ACTF新生赛2020]base64隐写\n\n<img src=\"BUU MISC第二页/image-20231209011036959.png\" alt=\"image-20231209011036959\" style=\"zoom:67%;\" />\n\n解压下来就是\n\n<img src=\"BUU MISC第二页/image-20231209011121881.png\" alt=\"image-20231209011121881\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209011152563.png\" alt=\"image-20231209011152563\" style=\"zoom: 67%;\" />\n\n上网找了base64隐写的脚本，个别的用gpt改了改能用了：\n\n#### base64隐写脚本\n\n```py\nimport base64\n\ndef get_base64_diff_value(s1, s2):\n    base64chars = b'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n    res = 0\n    for i in range(len(s2)):\n        if s1[i] != s2[i]:\n            return abs(base64chars.index(s1[i:i+1]) - base64chars.index(s2[i:i+1]))\n    return res\n\ndef solve_stego():\n    with open('ComeOn!.txt', 'rb') as f:\n        file_lines = f.readlines()\n        bin_str = b''\n        for line in file_lines:\n            steg_line = line.replace(b'\\n', b'')\n            norm_line = base64.b64encode(base64.b64decode(steg_line)).replace(b'\\n', b'')\n            diff = get_base64_diff_value(steg_line, norm_line)\n            print(diff)\n            pads_num = steg_line.count(b'=')\n            if diff:\n                bin_str += bin(diff)[2:].zfill(pads_num * 2).encode()\n            else:\n                bin_str += b'0' * pads_num * 2\n            print(goflag(bin_str))\n\ndef goflag(bin_str):\n    res_str = b''\n    for i in range(0, len(bin_str), 8):\n        res_str += bytes([int(bin_str[i:i + 8], 2)])\n    return res_str.decode()\n\nif __name__ == '__main__':\n    solve_stego()\n```\n\n```py\nimport base64\n\nb64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\nwith open('ComeOn!.txt', 'rb') as f:\n    flag = ''\n    bin_str = ''\n    for line in f.readlines():\n        stegb64 = str(line, \"utf-8\").strip(\"\\n\")\n        rowb64 = str(base64.b64encode(base64.b64decode(stegb64)), \"utf-8\").strip(\"\\n\")\n        offset = abs(b64chars.index(stegb64.replace('=', '')[-1]) - b64chars.index(rowb64.replace('=', '')[-1]))\n        equalnum = stegb64.count('=')  # no equalnum no offset\n        if equalnum:\n            bin_str += bin(offset)[2:].zfill(equalnum * 2)\n\nprint(\"\".join([chr(int(bin_str[i:i + 8], 2)) for i in range(0, len(bin_str), 8)]))\n```\n\n这两个脚本的功能是一样的，可以都存着。\n\n<img src=\"BUU MISC第二页/image-20231209013048700.png\" alt=\"image-20231209013048700\" style=\"zoom:67%;\" />\n\n最后得到flag：`flag{6aseb4_f33!}`。\n\n### 27.[MRCTF2020]ezmisc\n\n<img src=\"BUU MISC第二页/image-20231209011611589.png\" alt=\"image-20231209011611589\" style=\"zoom:67%;\" />\n\n下载下来得到一个png图片，用010打开的时候发现了CRC校验错误，估计宽高有问题，用工具一把梭：\n\n<img src=\"BUU MISC第二页/image-20231209011700990.png\" alt=\"image-20231209011700990\" style=\"zoom: 67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209012049579.png\" alt=\"image-20231209012049579\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209012139794.png\" alt=\"image-20231209012139794\" style=\"zoom:67%;\" />\n\n得到flag：`flag{1ts_vEryyyyyy_ez!}`。\n\n### 28.[HBNIS2018]caesar\n\n<img src=\"BUU MISC第二页/image-20231209012303742.png\" alt=\"image-20231209012303742\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209012523387.png\" alt=\"image-20231209012523387\" style=\"zoom:67%;\" />\n\n好像是凯撒密码，但是不知道偏移了多少位，只能穷举，没办法只能上网找脚本：\n\n#### 凯撒密码穷举脚本\n\n```py\ndef change(c,i):\n    num=ord(c)\n    if(num>=33 and num<=126):\n        num=33+(num+i-33)%(94)#126-33=93\n    return chr(num)\n \n  \ndef kaisa_jiAmi(string,i):\n    string_new=''\n    for s in string:\n        string_new+=change(s,i)\n    print(string_new)\n    return string_new\n \n#本题有种暴力解密感觉\ndef kaisa_jiEmi(string):\n    for i in range(0,94):\n        print('第'+str(i+1)+'种可能:',end='  ')\n        #区别在于 string 是该对象原本就是字符串类型, 而 str()则是将该对象转换成字符串类型。\n        kaisa_jiAmi(string,i)\n    \n#你要知道input输入的数据类型都是string  \ndef main():\n    print('请输入操作，注意不是平常26种:')\n    choice=input('1:恺撒加密,2:凯撒穷举解密.请输入1或2：')\n    if choice=='1':\n        string=input('请输入需要加密字符串： ')\n        num=int(input('请输入需要加密的KEY： '))\n        kaisa_jiAmi(string,num)\n    elif choice=='2':\n        string=input('请输入需要解密字符串： ')\n        kaisa_jiEmi(string)\n    else:\n        print('输入错误，请重试')\n        main()\n    \nif __name__=='__main__':\n    main()\n\n```\n\n<img src=\"BUU MISC第二页/image-20231209012740846.png\" alt=\"image-20231209012740846\" style=\"zoom:67%;\" />\n\n得到flag：`flag{flagiscaesar}`。\n\n### 29.[SWPU2019]伟大的侦探\n\n<img src=\"BUU MISC第二页/image-20231209100308231.png\" alt=\"image-20231209100308231\" style=\"zoom:67%;\" />\n\n下载下来得到一个压缩包，里面有密码提示和一组加密的图片：\n\n<img src=\"BUU MISC第二页/image-20231209100928434.png\" alt=\"image-20231209100928434\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209100935662.png\" alt=\"image-20231209100935662\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209100947253.png\" alt=\"image-20231209100947253\" style=\"zoom:67%;\" />\n\n用010打开**密码.txt**，发现使用`EBCDIC`编码时，得到了`wllm_is_the_best_team!`，这个应该就是解压的密码。\n\n<img src=\"BUU MISC第二页/image-20231209101119204.png\" alt=\"image-20231209101119204\" style=\"zoom:67%;\" />\n\n![image-20231209101148513](BUU MISC第二页/image-20231209101148513.png)\n\n解压得到一组跳舞小人的图片，这个是**福尔摩斯小人密码**\n\n<img src=\"BUU MISC第二页/image-20231209101318319.png\" alt=\"image-20231209101318319\" style=\"zoom:67%;\" />\n\n对照密码表解出`iloveholmesandwllm`：\n\n<img src=\"BUU MISC第二页/image-20231209101456458.png\" alt=\"image-20231209101456458\" style=\"zoom:67%;\" />\n\nflag为：`flag{iloveholmesandwllm}`。\n\n###  30.黑客帝国\n\n<img src=\"BUU MISC第二页/image-20231209101820536.png\" alt=\"image-20231209101820536\" style=\"zoom:67%;\" />\n\n下载得到这样的一组数据：\n\n<img src=\"BUU MISC第二页/image-20231209164924674.png\" alt=\"image-20231209164924674\" style=\"zoom:67%;\" />\n\n查看数据发现`526172211a070000`很像16进制数据，用winhex创建一个文件看看：\n\n<img src=\"BUU MISC第二页/image-20231209170236676.png\" alt=\"image-20231209170236676\" style=\"zoom:67%;\" />\n\n是一个rar文件，这边有一个16进制转rar的脚本，也可以使用这个来得到rar：\n\n#### 16进制转rar\n\n```py\ndef hex_to_rar(hex_string, output_file):\n    # 将16进制字符串转换为bytes\n    binary_data = bytes.fromhex(hex_string)\n\n    # 将bytes写入RAR文件\n    with open(output_file, 'wb') as file:\n        file.write(binary_data)\n\nif __name__ == \"__main__\":\n    # 输入16进制字符串\n    hex_data = \"16进制字符串\"\n\n    # 指定输出RAR文件名\n    output_file_name = \"output.rar\"\n\n    # 调用函数进行转换\n    hex_to_rar(hex_data, output_file_name)\n\n    print(f\"成功将16进制字符串转换为RAR文件: {output_file_name}\")\n```\n\n保存后打开发现是加密的，用工具爆破一下：\n\n<img src=\"BUU MISC第二页/image-20231209170524315.png\" alt=\"image-20231209170524315\" style=\"zoom:67%;\" />\n\n得到密码`3690`打开得到一个损坏的png文件，应该是要修复：\n\n<img src=\"BUU MISC第二页/image-20231209170630653.png\" alt=\"image-20231209170630653\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209170749859.png\" alt=\"image-20231209170749859\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209170721640.png\" alt=\"image-20231209170721640\" style=\"zoom:67%;\" />\n\n但是查看了文件头尾之后，发现这是一个jepg文件的文件头被改成了png，将`B9 50 4E 47`改成`FF D8 FF E0`，保存后得到正确的图片：\n\n<img src=\"BUU MISC第二页/image-20231209171124461.png\" alt=\"image-20231209171124461\" style=\"zoom:67%;\" />\n\nflag为：`flag{57cd4cfd4e07505b98048ca106132125}`。\n\n### 31.[HBNIS2018]低个头\n\n<img src=\"BUU MISC第二页/image-20231209171406231.png\" alt=\"image-20231209171406231\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209171448092.png\" alt=\"image-20231209171448092\" style=\"zoom:67%;\" />\n\n熟悉的感觉，是键盘加密，翻译一下得到明文：`CTF`\n\n<img src=\"BUU MISC第二页/image-20231209171933148.png\" alt=\"image-20231209171933148\" style=\"zoom:67%;\" />\n\nflag为：`flag{CTF}`。\n\n### 32.[MRCTF2020]你能看懂音符吗\n\n<img src=\"BUU MISC第二页/image-20231209172049261.png\" alt=\"image-20231209172049261\" style=\"zoom:67%;\" />\n\n题目下载下来的rar压缩包是坏的，打开发现文件头错了，修复一下\n\n<img src=\"BUU MISC第二页/image-20231209172213470.png\" alt=\"image-20231209172213470\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209172415401.png\" alt=\"image-20231209172415401\" style=\"zoom:67%;\" />\n\n应该是把文字隐藏了，或者文字改为了白色，直接`cirl+a`选中所有文字，右键查看字体，果然是隐藏了。\n\n<img src=\"BUU MISC第二页/image-20231209172524394.png\" alt=\"image-20231209172524394\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209172550260.png\" alt=\"image-20231209172550260\" style=\"zoom:67%;\" />\n\n```\n♭♯♪‖¶♬♭♭♪♭‖‖♭♭♬‖♫♪‖♩♬‖♬♬♭♭♫‖♩♫‖♬♪♭♭♭‖¶∮‖‖‖‖♩♬‖♬♪‖♩♫♭♭♭♭♭§‖♩♩♭♭♫♭♭♭‖♬♭‖¶§♭♭♯‖♫∮‖♬¶‖¶∮‖♬♫‖♫♬‖♫♫§=\n```\n\n用在线网站翻译一下得到flag。\n\n<img src=\"BUU MISC第二页/image-20231209172641900.png\" alt=\"image-20231209172641900\" style=\"zoom:67%;\" />\n\nflag为：`flag{thEse_n0tes_ArE_am@zing~}`。\n\n","source":"_posts/BUU MISC第二页.md","raw":"---\ntitle: BUU MISC第二页\ndate: 2023-12-09 20:00:01\ncover: /illust_99248298_20220722_142026.jpg\ntags: 做题记录\n---\n# BUU MISC第二页\n\n### 1.被劫持的神秘礼物\n\n<img src=\"BUU MISC第二页/image-20231116195450524.png\" alt=\"image-20231116195450524\" style=\"zoom:67%;\" />\n\n这题是流量分析，上来先http过滤一下，这条比较可疑，追踪一下tcp流：\n\n<img src=\"BUU MISC第二页/image-20231116195905524.png\" alt=\"image-20231116195905524\" style=\"zoom:67%;\" />\n\n![image-20231116195953609](BUU MISC第二页/image-20231116195953609.png)\n\n根据题目所写，”找到帐号密码，串在一起，用32位小写MD5哈希一下得到的就是答案“，那么本题答案为：`adminaadminb`，拿去用32位MD5哈希一下：\n\n<img src=\"BUU MISC第二页/image-20231116200756188.png\" alt=\"image-20231116200756188\" style=\"zoom:67%;\" />\n\nflag为：`flag{1d240aafe21a86afc11f38a45b541a49}`。\n\n### 2.[BJDCTF2020]认真你就输了\n\n<img src=\"BUU MISC第二页/image-20231116201610324.png\" alt=\"image-20231116201610324\" style=\"zoom:67%;\" />\n\n下载下来是一个**.xls**文件，打开是这样，没有东西，用bandzip打开看看：\n\n<img src=\"BUU MISC第二页/image-20231116202048077.png\" alt=\"image-20231116202048077\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231116202136439.png\" alt=\"image-20231116202136439\" style=\"zoom:67%;\" />\n\n一顿翻找，找到了flag：`flag{M9eVfi2Pcs#}`。\n\n### 3.[BJDCTF2020]藏藏藏\n\n<img src=\"BUU MISC第二页/image-20231116202242375.png\" alt=\"image-20231116202242375\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231116202340218.png\" alt=\"image-20231116202340218\" style=\"zoom:67%;\" />\n\n下载下来是一个图片，先看看属性没问题，再用010看看，有压缩包：\n\n<img src=\"BUU MISC第二页/image-20231116202652184.png\" alt=\"image-20231116202652184\" style=\"zoom:67%;\" />\n\n用kali，binwalk、foremost，得到压缩包：\n\n<img src=\"BUU MISC第二页/image-20231116221127242.png\" alt=\"image-20231116221127242\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231116221149333.png\" alt=\"image-20231116221149333\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231116221219237.png\" alt=\"image-20231116221219237\" style=\"zoom:67%;\" />\n\n打开得到二维码，扫一下得到本题的flag：`flag{you are the best!}`。\n\n### 4.被偷走的文件\n\n<img src=\"BUU MISC第二页/image-20231125114517454.png\" alt=\"image-20231125114517454\" style=\"zoom:67%;\" />\n\n分析流量时找到了这条，将FTP过滤出来看看：\n\n<img src=\"BUU MISC第二页/image-20231125114555413.png\" alt=\"image-20231125114555413\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231125114810488.png\" alt=\"image-20231125114810488\" style=\"zoom:67%;\" />\n\n追踪看看，说明被偷走了**flag.rar**文件：\n\n<img src=\"BUU MISC第二页/image-20231125114834857.png\" alt=\"image-20231125114834857\" style=\"zoom:67%;\" />\n\n用foremost分离流量包看看：\n\n<img src=\"BUU MISC第二页/image-20231125115048235.png\" alt=\"image-20231125115048235\" style=\"zoom:67%;\" />\n\n成功得到一个加密的压缩包文件，尝试暴力破解：\n\n<img src=\"BUU MISC第二页/image-20231125115216084.png\" alt=\"image-20231125115216084\" style=\"zoom:67%;\" />\n\n发现是四位纯数字密码：`5790`\n\n得到flag：`flag{6fe99a5d03fb01f833ec3caa80358fa3}`。\n\n### 5.刷新过的图片\n\n<img src=\"BUU MISC第二页/image-20231203190350284.png\" alt=\"image-20231203190350284\" style=\"zoom:67%;\" />\n\n键盘上的刷新键快捷键是F5,可以得知这题应该是F5隐写，上网找工具下载下来：**F5-steganography-master**，一开始怎么都用不起来，后来才发现是java版本的问题。\n\n#### 关于解决F5工具java版本问题的方法\n\n解决java版本问题的原文链接：https://blog.csdn.net/pythllc/article/details/128969843\n\n因为java版本是kali自带的17.0.5的版本，使用F5-steganography会出现报错，网上找到的博客中介绍的解决办法是安装java11，小版本不影响，改一下教程里面的版本就行，我下到的版本为**jdk-11.0.21_linux-x64_bin.tar.gz**，所以教程经过小改动后是：\n\n1.下载好后，将压缩包移动到/etc/opt目录再进行解压\n\n2.移动压缩包至opt目录\n\n```\nmv jdk-11.0.21_linux-x64_bin.tar.gz /etc/opt\n```\n\n3.移动好后切换至opt目录进行解压\n\n```\ncd /etc/opt\n```\n\n4.解压\n\n```\ntar -zxvf jdk-11.0.21_linux-x64_bin.tar.gz\n```\n\n5.拷贝解压后Java文件夹至/usr/bin\n\n```\ncp -r jdk-11.0.21/ /usr/bin\n```\n\n6.安装并注册\n\n```\nupdate-alternatives --install /usr/bin/java java /etc/opt/jdk-11.0.21/bin/java 1\n\nupdate-alternatives --install /usr/bin/javac javac /etc/opt/jdk-11.0.21/bin/javac 1\n\nupdate-alternatives --set java /etc/opt/jdk-11.0.21/bin/java\n\nupdate-alternatives --set javac /etc/opt/jdk-11.0.21/bin/javac\n```\n\n现在就可以正常使用F5工具了。\n\n#### F5工具的使用\n\n执行F5工具的命令为：\n\n```\njava Extract /图片的绝对路径 [-p 密码] [-e 输出文件]\n```\n\n一般在CTF题目中，密码就是图片名字，本题并不需要输入密码\n\n<img src=\"BUU MISC第二页/image-20231203192026164.png\" alt=\"image-20231203192026164\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231203192047884.png\" alt=\"image-20231203192047884\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231203192100854.png\" alt=\"image-20231203192100854\" style=\"zoom:67%;\" />\n\n打开**output.txt**，发现PK开头，那这个应该是一个zip压缩包，改下后缀，发现文件被加密了，猜测是伪加密：\n\n<img src=\"BUU MISC第二页/image-20231203192156470.png\" alt=\"image-20231203192156470\" style=\"zoom:67%;\" />\n\n拖进010看一眼，果然是伪加密，`01 00`改成`00 00`：\n\n<img src=\"BUU MISC第二页/image-20231203192350491.png\" alt=\"image-20231203192350491\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231203192447918.png\" alt=\"image-20231203192447918\" style=\"zoom:67%;\" />\n\n成功得到flag：`flag{96efd0a2037d06f34199e921079778ee}`。\n\n### 6.[GXYCTF2019]佛系青年\n\n<img src=\"BUU MISC第二页/image-20231203193202986.png\" alt=\"image-20231203193202986\" style=\"zoom:67%;\" />\n\n看题目就猜测是与佛论禅加密，下载下来发现压缩包里面被加密了,估计是伪加密：\n\n<img src=\"BUU MISC第二页/image-20231203193314238.png\" alt=\"image-20231203193314238\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231203193406311.png\" alt=\"image-20231203193406311\" style=\"zoom:67%;\" />\n\n果然是伪加密，把`09 00`改成`00 00`，成功解压出来：\n\n<img src=\"BUU MISC第二页/image-20231203193508467.png\" alt=\"image-20231203193508467\" style=\"zoom:67%;\" />\n\n在网上找了几个与佛论禅的网站，最终找到是Bugku的可以成功解密：\n\n<img src=\"BUU MISC第二页/image-20231203193558273.png\" alt=\"image-20231203193558273\" style=\"zoom:67%;\" />\n\nflag为：`flag{w0_fo_ci_Be1}`。\n\n### 7.[BJDCTF2020]你猜我是个啥\n\n<img src=\"BUU MISC第二页/image-20231203193700775.png\" alt=\"image-20231203193700775\" style=\"zoom:67%;\" />\n\n下载下来是一个zip文件，但是用bandzip打开发现这个不是一个压缩包，用在线文件检查网站检查了一下，发现是个**png**文件\n\n<img src=\"BUU MISC第二页/image-20231203194054577.png\" alt=\"image-20231203194054577\" style=\"zoom:67%;\" />\n\n改完后缀给了一个二维码，扫看看：\n\n<img src=\"BUU MISC第二页/image-20231203194139439.png\" alt=\"image-20231203194139439\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231203194211872.png\" alt=\"image-20231203194211872\" style=\"zoom:67%;\" />\n\n哦？flag不在这里，用010看看，原来flag藏在这里啊：\n\n<img src=\"BUU MISC第二页/image-20231203194305702.png\" alt=\"image-20231203194305702\" style=\"zoom:67%;\" />\n\nflag为：`flag{i_am_fl@g}`。\n\n### 8.snake\n\n<img src=\"BUU MISC第二页/image-20231203194617231.png\" alt=\"image-20231203194617231\" style=\"zoom:67%;\" />\n\n下载下来是一张图片，用010看一眼，好家伙，有两个压缩包：\n\n<img src=\"BUU MISC第二页/image-20231203194647200.png\" alt=\"image-20231203194647200\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231203194837293.png\" alt=\"image-20231203194837293\" style=\"zoom:67%;\" />\n\n用binwalk分离：\n\n<img src=\"BUU MISC第二页/image-20231203195200078.png\" alt=\"image-20231203195200078\" style=\"zoom:67%;\" />\n\n得到**cipher**和**key**两个文件，key里面是一段base64编码，翻译一下：\n\n<img src=\"BUU MISC第二页/image-20231203195313506.png\" alt=\"image-20231203195313506\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231203195411777.png\" alt=\"image-20231203195411777\" style=\"zoom:67%;\" />\n\n`What is Nicki Minaj's favorite song that refers to snakes?`根据这段提示，搜索得知答案为`anaconda`\n\n在网上搜索与蛇相关的加密算法，找到了**Serpent加密**\n\n找到了这个在线解密网站：[Serpent 加密 – 轻松加密或解密字符串或文件 (online-domain-tools.com)](http://serpent.online-domain-tools.com/)\n\n<img src=\"BUU MISC第二页/image-20231203200040795.png\" alt=\"image-20231203200040795\" style=\"zoom:67%;\" />\n\n成功得到flag：`flag{who_knew_serpent_cipher_existed}`。\n\n### 9.秘密文件\n\n<img src=\"BUU MISC第二页/image-20231203201303694.png\" alt=\"image-20231203201303694\" style=\"zoom:67%;\" />\n\n猜测这题和之前那道**被偷走的文件**一样，先过滤一下**ftp**：\n\n<img src=\"BUU MISC第二页/image-20231203201344531.png\" alt=\"image-20231203201344531\" style=\"zoom:67%;\" />\n\n看着就很可疑，追踪一下tcp流：\n\n<img src=\"BUU MISC第二页/image-20231203201439351.png\" alt=\"image-20231203201439351\" style=\"zoom:67%;\" />\n\n找到被偷走的机密文件了，用kali去foremost分离一下：\n\n<img src=\"BUU MISC第二页/image-20231203201654872.png\" alt=\"image-20231203201654872\" style=\"zoom:67%;\" />\n\n得到一个加密的压缩包，爆一下得到压缩包密码为：`1903`\n\n<img src=\"BUU MISC第二页/image-20231203201759058.png\" alt=\"image-20231203201759058\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231203201833309.png\" alt=\"image-20231203201833309\" style=\"zoom:67%;\" />\n\n得到flag：`flag{d72e5a671aa50fa5f400e5d10eedeaa5}`。\n\n### 10.[BJDCTF2020]just_a_rar\n\n<img src=\"BUU MISC第二页/image-20231203234818626.png\" alt=\"image-20231203234818626\" style=\"zoom:67%;\" />\n\n下载下来是一个加密的rar文件：\n\n<img src=\"BUU MISC第二页/image-20231203234908095.png\" alt=\"image-20231203234908095\" style=\"zoom:67%;\" />\n\n根据提示，是四位纯数字密码，爆破一下得到密码为：`2016`\n\n<img src=\"BUU MISC第二页/image-20231203235021837.png\" alt=\"image-20231203235021837\" style=\"zoom:67%;\" />\n\n解压得到图片：\n\n<img src=\"BUU MISC第二页/image-20231203235059836.png\" alt=\"image-20231203235059836\" style=\"zoom:67%;\" />\n\n第一步检查属性，结果直接找到了flag：\n\n<img src=\"BUU MISC第二页/image-20231203235207075.png\" alt=\"image-20231203235207075\" style=\"zoom:67%;\" />\n\nflag为：`flag{Wadf_123}`。\n\n### 11.[BJDCTF2020]鸡你太美\n\n<img src=\"BUU MISC第二页/image-20231203235306913.png\" alt=\"image-20231203235306913\" style=\"zoom:67%;\" />\n\n解压发现鸡哥的gif图：\n\n<img src=\"BUU MISC第二页/image-20231203235419051.png\" alt=\"image-20231203235419051\" style=\"zoom:67%;\" />\n\n先拆分一下gif看看有没有暗藏玄鸡\n\n<img src=\"BUU MISC第二页/image-20231203235552446.png\" alt=\"image-20231203235552446\" style=\"zoom:67%;\" />\n\n![image-20231203235603898](BUU MISC第二页/image-20231203235603898.png)\n\n整整200帧居然没藏东西，看看篮球副本，好像坏了打不开，用010看看发现好像少文件头\n\n<img src=\"BUU MISC第二页/image-20231203235950197.png\" alt=\"image-20231203235950197\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204000002248.png\" alt=\"image-20231204000002248\" style=\"zoom:67%;\" />\n\n给他补全看看：\n\n<img src=\"BUU MISC第二页/image-20231204000213007.png\" alt=\"image-20231204000213007\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204000229830.png\" alt=\"image-20231204000229830\" style=\"zoom:67%;\" />\n\n得到flag：`flag{zhi-yin-you-are-beautiful}`，但是发现交上去不对，查了wp发现buu上的flag是：`flag{zhi_yin_you_are_beautiful}`。\n\n### 12.菜刀666\n\n<img src=\"BUU MISC第二页/image-20231204000656325.png\" alt=\"image-20231204000656325\" style=\"zoom:67%;\" />\n\n这题是流量分析，看了半天没办法，去参考wp了。\n\n先过滤**POST**的包：\n\n```\nhttp.request.method==POST\n```\n\n在**tcp.stream eq 7**中发现了大量的数据\n\n<img src=\"BUU MISC第二页/image-20231204001906241.png\" alt=\"image-20231204001906241\" style=\"zoom:67%;\" />\n\n`FF D8`开头`FF D9`结尾，判断为`jpg`图片，将这些十六进制复制出来，以原始文件流写入文件：\n\n##### 16进制转jpg图片\n\n```python\n#Author: MoChu7\nimport struct\n\na = open(\"str.txt\",\"r\")#十六进制数据文件\nlines = a.read()\nres = [lines[i:i+2] for i in range(0,len(lines),2)]\n\nwith open(\"res.jpg\",\"wb\") as f:\n\tfor i in res:\n\t\ts = struct.pack('B',int(i,16))\n\t\tf.write(s)\n```\n\n得到图片：\n\n<img src=\"BUU MISC第二页/image-20231204002400611.png\" alt=\"image-20231204002400611\" style=\"zoom:67%;\" />\n\n这是一个密码，那么还会有个压缩包，在这段流中找到一个**hello.zip**压缩包，foremost分离一下流量包：\n\n<img src=\"BUU MISC第二页/image-20231204002452504.png\" alt=\"image-20231204002452504\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204002850837.png\" alt=\"image-20231204002850837\" style=\"zoom:67%;\" />\n\n输入密码：`Th1s_1s_p4sswd_!!!`\n\n<img src=\"BUU MISC第二页/image-20231204003047862.png\" alt=\"image-20231204003047862\" style=\"zoom:67%;\" />\n\n得到flag：`flag{3OpWdJ-JP6FzK-koCMAK-VkfWBq-75Un2z}`。\n\n### 13.[BJDCTF2020]一叶障目\n\n<img src=\"BUU MISC第二页/image-20231204190453001.png\" alt=\"image-20231204190453001\" style=\"zoom:67%;\" />\n\n下载解压就是一张图片，拖进010看看：\n\n<img src=\"BUU MISC第二页/image-20231204190517609.png\" alt=\"image-20231204190517609\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204190542422.png\" alt=\"image-20231204190542422\" style=\"zoom:67%;\" />\n\n发现报错说crc不对，那应该是crc不正确，用工具爆破一下：\n\n<img src=\"BUU MISC第二页/image-20231204190628126.png\" alt=\"image-20231204190628126\" style=\"zoom:67%;\" />\n\n直接得到flag：`flag{66666}`。\n\n### 14.[SWPU2019]神奇的二维码\n\n<img src=\"BUU MISC第二页/image-20231204190948248.png\" alt=\"image-20231204190948248\" style=\"zoom:67%;\" />\n\n这题下载下来是一个二维码，先拖进010看看，发现没东西，扫码看看：\n\n<img src=\"BUU MISC第二页/image-20231204191213913.png\" alt=\"image-20231204191213913\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204191302186.png\" alt=\"image-20231204191302186\" style=\"zoom:67%;\" />\n\nflag不在这里，拖进kali里面binwalk看看，得到这些东西：\n\n<img src=\"BUU MISC第二页/image-20231204191340102.png\" alt=\"image-20231204191340102\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204191408741.png\" alt=\"image-20231204191408741\" style=\"zoom:67%;\" />\n\n这是一段base64加密，解密得到：`asdfghjkl1234567890`\n\n发现是那个加密的压缩包里面**flag.jpg**文件的密码，kali直接给我图片搞出来了，看看word文档：\n\n<img src=\"BUU MISC第二页/image-20231204191629040.png\" alt=\"image-20231204191629040\" style=\"zoom:67%;\" />\n\n超大一坨，猜测base64多次加密，试试：\n\n<img src=\"BUU MISC第二页/image-20231204191844688.png\" alt=\"image-20231204191844688\" style=\"zoom:67%;\" />\n\n我靠，base64加密了20层，以为得到flag：`flag{comEON_YOuAreSOSoS0great}`。错了！回头发现压缩包里面还有个音频文件，原来得到的``comEON_YOuAreSOSoS0great`是这个压缩包的密码，听了发现是摩斯密码：\n\n<img src=\"BUU MISC第二页/image-20231204192355168.png\" alt=\"image-20231204192355168\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204192520360.png\" alt=\"image-20231204192520360\" style=\"zoom:67%;\" />\n\n```\n-- --- .-. ... . .. ... ...- . .-. -.-- ...- . .-. -.-- . .- ... -.--\n```\n\n<img src=\"BUU MISC第二页/image-20231204193006361.png\" alt=\"image-20231204193006361\" style=\"zoom:67%;\" />\n\n这边要都转成小写才是正确的flag：`flag{morseisveryveryeasy}`。\n\n### 15.[BJDCTF2020]纳尼\n\n<img src=\"BUU MISC第二页/image-20231204193210939.png\" alt=\"image-20231204193210939\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204193242805.png\" alt=\"image-20231204193242805\" style=\"zoom:67%;\" />\n\n打开发现gif图打不开，根据之前写的一题，猜测是修复文件头，用010看看，果然是：\n\n<img src=\"BUU MISC第二页/image-20231204193356600.png\" alt=\"image-20231204193356600\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204193508018.png\" alt=\"image-20231204193508018\" style=\"zoom:67%;\" />\n\n修好打开一看，gif图里面每帧都是一段base64的部分，拆开发现总共4帧，提取文字汇总一下：\n\n<img src=\"BUU MISC第二页/image-20231204193715022.png\" alt=\"image-20231204193715022\" style=\"zoom:67%;\" />\n\n得到：`Q1RGe3dhbmdfYmFvX3FpYW5nX2lzX3NhZH0=`，解密得到flag：\n\n<img src=\"BUU MISC第二页/image-20231204193959516.png\" alt=\"image-20231204193959516\" style=\"zoom:67%;\" />\n\nflag为：`flag{wang_bao_qiang_is_sad}`。\n\n### 16.梅花香之苦寒来\n\n<img src=\"BUU MISC第二页/image-20231204194155541.png\" alt=\"image-20231204194155541\" style=\"zoom:67%;\" />\n\n下载下来是一个图片，按照惯例看看属性：\n\n<img src=\"BUU MISC第二页/image-20231204194247971.png\" alt=\"image-20231204194247971\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204194313711.png\" alt=\"image-20231204194313711\" style=\"zoom:67%;\" />\n\n有提示？拖进kali没找到东西，用010看看：\n\n<img src=\"BUU MISC第二页/image-20231204194827296.png\" alt=\"image-20231204194827296\" style=\"zoom:67%;\" />\n\n发现在文件后面藏了大量数据，感觉像**菜刀666**那题，这些应该也是16进制数据，需要脚本，上网搜wp，这是转换的脚本：\n\n##### 16进制转字符串\n\n```py\nwith open('hex.txt', 'r') as h:     # hex.txt为要转换的文本文件\n    val = h.read()\n    h.close()\n\nwith open('result.txt', 'w') as re: # 转换完成后写入result.txt\n    tem = ''\n    for i in range(0, len(val), 2):\n        tem = '0x' + val[i] + val[i+1]\n        tem = int(tem, base=16)\n        print(chr(tem), end=\"\")\n        re.write(chr(tem))\n    re.close()\n```\n\n<img src=\"BUU MISC第二页/image-20231204195602509.png\" alt=\"image-20231204195602509\" style=\"zoom:67%;\" />\n\n得到一堆坐标，需要画图，用matplotlib画图片，脚本为：\n\n##### 二维坐标画图\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# 逐行读取文件，去除括号并分割数值\nwith open('result.txt', 'r') as file:\n    data = [line.strip('()\\n').split(',') for line in file]\n\n# 将字符串值转换为浮点数\nx, y = np.array(data, dtype=float).T\n\n# 绘制数据图\nplt.plot(x, y, '.')\nplt.show()\n```\n\n得到二维码：\n\n<img src=\"BUU MISC第二页/image-20231204211343476.png\" alt=\"image-20231204211343476\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231204211456819.png\" alt=\"image-20231204211456819\" style=\"zoom:67%;\" />\n\n得到flag：`flag{40fc0a979f759c8892f4dc045e28b820}`。\n\n### 17.[HBNIS2018]excel破解\n\n![image-20231207190639195](C:\\Users\\48956\\AppData\\Roaming\\Typora\\typora-user-images\\image-20231207190639195.png)\n\n下载下来是一个**xls**文件，被加密了打不开，改成**zip**用010打开，搜索flag，结果直接找到了：\n\n<img src=\"C:\\Users\\48956\\AppData\\Roaming\\Typora\\typora-user-images\\image-20231207191246922.png\" alt=\"image-20231207191246922\" style=\"zoom:67%;\" />\n\nflag为：`flag{office_easy_cracked}`。\n\n### 18.[HBNIS2018]来题中等的吧\n\n<img src=\"BUU MISC第二页/image-20231207191425076.png\" alt=\"image-20231207191425076\" style=\"zoom:67%;\" />\n\n这题下下来解压得到一个png\n\n<img src=\"BUU MISC第二页/image-20231207191452348.png\" alt=\"image-20231207191452348\" style=\"zoom:67%;\" />\n\n像摩斯密码，翻译一下是`.- .-.. .--. .... .- .-.. .- -...`，在线翻译出来是：`ALPHALAB`，用各种方法查了一遍图片，好像没东西了。\n\n万一是flag呢？转换成小写提交看看：`flag{alphalab}`，还真是。\n\n### 19.[ACTF新生赛2020]outguess\n\n<img src=\"BUU MISC第二页/image-20231207192019538.png\" alt=\"image-20231207192019538\" style=\"zoom:67%;\" />\n\n下载下来解压得到：\n\n<img src=\"BUU MISC第二页/image-20231207192129749.png\" alt=\"image-20231207192129749\" style=\"zoom:67%;\" />\n\n查看图片属性时发现备注应该是社会主义核心价值观加密：\n\n<img src=\"BUU MISC第二页/image-20231207192155042.png\" alt=\"image-20231207192155042\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231207192302627.png\" alt=\"image-20231207192302627\" style=\"zoom:67%;\" />\n\n解密得到：`abc`\n\n模仿上题尝试提交看看，果然不对，回头搜搜guess是啥，找到一个工具叫**outguess**。\n\n#### 使用outguess\n输入outguess -help即可获得相关命令。\n\n**注意在windows里面需要加`\" \"`而在Linux里面不需要**\n\n- 加密：\n\n```\noutguess -k “my secret key” -d hidden.txt demo.jpg out.jpg\n```\n加密之后，demo.jpg会覆盖out.jpg，hidden.txt的内容是要隐藏的东西。\n\n- 解密：\n\n```\noutguess -k “my secret key” -r out.jpg hidden.txt\n```\n\n解密之后，紧密内容放在hidden.txt中。\n\n之前解密出来的**abc**应该就是**key**，那么本题的指令就是：\n\n```\noutguess -k abc -r mmm.jpg hidden.txt\n```\n\n得到flag：`flag{gue33_Gu3Ss!2020}`。\n\n### 20.穿越时空的思念\n\n<img src=\"BUU MISC第二页/image-20231207194219079.png\" alt=\"image-20231207194219079\" style=\"zoom:67%;\" />\n\n下载下来是一个mp3文件，用audacity打开看看，里面好像有段摩斯：\n\n<img src=\"BUU MISC第二页/image-20231207194435380.png\" alt=\"image-20231207194435380\" style=\"zoom:67%;\" />\n\n`..-. ----- ..--- ----. -... -.. -.... ..-. ..... ..... .---- .---- ...-- ----. . . -.. . -... ---.. . ....- ..... .- .---- --... ..... -... ----- --... ---.. -....`\n\n翻译出来是，再转成小写：\n\n```\nF029BD6F551139EEDEB8E45A175B0786\n\nf029bd6f551139eedeb8e45a175b0786\n```\n\n套个flag头提交看看，结果就是flag，flag为：`flag{f029bd6f551139eedeb8e45a175b0786}`。\n\n### 21.谁赢了比赛？\n\n<img src=\"BUU MISC第二页/image-20231207195203651.png\" alt=\"image-20231207195203651\" style=\"zoom:67%;\" />\n\n题目下载下来是一个png图片，是一个棋谱：\n\n<img src=\"BUU MISC第二页/image-20231207195254469.png\" alt=\"image-20231207195254469\" style=\"zoom: 67%;\" />\n\n在010中看到了这个，貌似里面藏了一个**flag.txt**文件：\n\n![image-20231207195431073](BUU MISC第二页/image-20231207195431073.png)\n\nbinwalk分离出来一个rar文件，里面有一个加密的gif文件：\n\n![image-20231207195745064](BUU MISC第二页/image-20231207195745064.png)\n\n<img src=\"BUU MISC第二页/image-20231207200019211.png\" alt=\"image-20231207200019211\" style=\"zoom:67%;\" />\n\n爆破出密码是`1020`，得到gif图，拆分一下\n\n<img src=\"BUU MISC第二页/image-20231207200225524.png\" alt=\"image-20231207200225524\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231207200405626.png\" alt=\"image-20231207200405626\" style=\"zoom:50%;\" />\n\n找到一个与众不同的图片，图片上有这一句话，说明还没结束：\n\n![image-20231207200452371](BUU MISC第二页/image-20231207200452371.png)\n\n把这张图片扔进stegsolve，在Red 0通道发现有二维码：\n\n<img src=\"BUU MISC第二页/image-20231207201125291.png\" alt=\"image-20231207201125291\" style=\"zoom: 67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231207201214134.png\" alt=\"image-20231207201214134\" style=\"zoom:67%;\" />\n\n扫一下成功得到flag：`flag{shanxiajingwu_won_the_game}`。\n\n### 22.[WUSTCTF2020]find_me\n\n<img src=\"BUU MISC第二页/image-20231207201323027.png\" alt=\"image-20231207201323027\" style=\"zoom:67%;\" />\n\n下下来就是一个jpg文件，查看属性发现盲文：\n\n<img src=\"BUU MISC第二页/image-20231207201445968.png\" alt=\"image-20231207201445968\" style=\"zoom: 67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231207201537387.png\" alt=\"image-20231207201537387\" style=\"zoom: 67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231207201739356.png\" alt=\"image-20231207201739356\" style=\"zoom:67%;\" />\n\n用网站翻译得到flag：`flag{y$0$u_f$1$n$d$_M$e$e$e$e$e}`。\n\n### 23.[SWPU2019]我有一只马里奥\n\n<img src=\"BUU MISC第二页/image-20231207202117408.png\" alt=\"image-20231207202117408\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231207202128334.png\" alt=\"image-20231207202128334\" style=\"zoom:67%;\" />\n\n运行发现多了一个**1.txt**文件，打开发现提示ntfs，即NTFS数据交换流。\n\n<img src=\"BUU MISC第二页/image-20231207202214558.png\" alt=\"image-20231207202214558\" style=\"zoom:67%;\" />\n\n#### 什么是NTFS数据流？\n> NTFS交换数据流（alternate data streams，简称ADS）是NTFS磁盘格式的一个特性，在NTFS文件系统下，每个文件都可以存在多个数据流，就是说除了主文件流之外还可以有许多非主文件流寄宿在主文件流中。它使用资源派生来维持与文件相关的信息。————百度百科\n\n> NTFS交换数据流（alternate data streams，简称ADS）是NTFS磁盘格式的一个特性，在NTFS文件系统下，每个文件都可以存在多个数据流，就是说除了主文件流之外还可以有许多非主文件流寄宿在主文件流中。它使用资源派生来维持与文件相关的信息，虽然我们无法看到数据流文件，但是它却是真实存在于我们的系统中的。创建一个数据交换流文件的方法很简单，命令为“宿主文件：准备与宿主文件关联的数据流文件”。————百度百科\n\n#### NTFS数据流隐藏文件的方法和实例\n\n创建一个数据交换流文件的方法，命令为“宿主文件：准备与宿主文件关联的数据流文件”。\n\n##### 1.单文件流隐藏\n\n先在F盘中新建一个空的文本文件，命名为m0re.txt，\n创建一个NTFS数据流，\n\n```bash\necho \"i am a test\" > :m0re.txt\n```\n\n已经成功的隐藏信息，查看方式有两种\n一种是使用windows自带的notepad查看，命令如下\n\n```bash\nnotepad :m0re.txt\n```\n\n第二种方法是使用工具，`lads.exe`\n\n```bash\nlads.exe /S\n```\n\n扫描到这个文件存在NTFS数据流，然后用第一种方法显示出来。\n\n##### 2.关联文件流\n\n```\necho \"https://m0re.top\" > lalala.txt:m0re.txt\n```\n\n此时的m0re.txt是宿主文件，将信息内容隐藏到宿主文件中了，直接打开lalala.txt:m0re.txt查看数据流文件\n\n这里需要注意的是这个不是将数据写入到文件中，而是创建了NTFS数据流，信息都在数据流当中。这个`lalala.txt:m0re.txt`就是创建的流文件。\n\n当然不止可以隐藏文本数据，还可以隐藏其他的文件，比如exe可执行文件，pyc文件等\n\n这里使用type命令，来隐藏文件。\n\n```\n#隐藏图片到另一张图片中\ntype yincang.jpg >yincang.jpg:suzhu.jpg\n\n#查看方式使用windows自带的mspaint.exe\nmspaint.exe yincang.jpg:suzhu.jpg\n```\n\n那么在本题中，先将文件都放在同一个文件夹中，再输入这个指令：\n\n```\nnotepad 1.txt:flag.txt\n```\n\n<img src=\"BUU MISC第二页/image-20231207221841155.png\" alt=\"image-20231207221841155\" style=\"zoom:67%;\" />\n\n就能得到flag：`flag{ddg_is_cute}`。\n\n### 24.[GUET-CTF2019]KO\n\n<img src=\"BUU MISC第二页/image-20231208135026442.png\" alt=\"image-20231208135026442\" style=\"zoom:67%;\" />\n\n 下载下来是Ook解密;\n\n```\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook!\nOok! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook!\nOok. Ook? Ook! Ook! Ook! Ook! Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook!\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook?\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook.\nOok. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook.\nOok. Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook!\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok! Ook? Ook! Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook!\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook?\nOok. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook!\nOok! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook!\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!\nOok? Ook. Ook? Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook.\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook!\nOok? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook.\nOok? Ook! Ook. Ook? Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook.\nOok. Ook! Ook? Ook! Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook.\nOok? Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!\nOok. Ook? Ook.\n```\n\n用在线网站翻译一下，得到：`welcome to CTF`，包上flag头，得到本题的flag：`flag{welcome to CTF}`。\n\n### 25.[GXYCTF2019]gakki\n\n<img src=\"BUU MISC第二页/image-20231208140317860.png\" alt=\"image-20231208140317860\" style=\"zoom:67%;\" />\n\n下下来是一个jpg图片，放进010里面可以找到藏了rar文件：\n\n<img src=\"BUU MISC第二页/image-20231208140603455.png\" alt=\"image-20231208140603455\" style=\"zoom: 67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231208140756245.png\" alt=\"image-20231208140756245\" style=\"zoom:67%;\" />\n\nbinwalk一下得到一个加密的rar压缩包，用工具爆出来密码`8864`：\n\n<img src=\"BUU MISC第二页/image-20231208141323096.png\" alt=\"image-20231208141323096\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231208141521644.png\" alt=\"image-20231208141521644\" style=\"zoom:67%;\" />\n\n打开得到这样的一大坨密文：\n\n<img src=\"BUU MISC第二页/image-20231208141659361.png\" alt=\"image-20231208141659361\" style=\"zoom:67%;\" />\n\n没找到是啥加密，去搜了搜，发现是字频统计，用puzzlesolver工具做：\n\n<img src=\"BUU MISC第二页/image-20231208142144663.png\" alt=\"image-20231208142144663\" style=\"zoom:67%;\" />\n\n得到flag：`flag{gaki_IsMyw1fe}`。\n\n### 26.[ACTF新生赛2020]base64隐写\n\n<img src=\"BUU MISC第二页/image-20231209011036959.png\" alt=\"image-20231209011036959\" style=\"zoom:67%;\" />\n\n解压下来就是\n\n<img src=\"BUU MISC第二页/image-20231209011121881.png\" alt=\"image-20231209011121881\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209011152563.png\" alt=\"image-20231209011152563\" style=\"zoom: 67%;\" />\n\n上网找了base64隐写的脚本，个别的用gpt改了改能用了：\n\n#### base64隐写脚本\n\n```py\nimport base64\n\ndef get_base64_diff_value(s1, s2):\n    base64chars = b'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n    res = 0\n    for i in range(len(s2)):\n        if s1[i] != s2[i]:\n            return abs(base64chars.index(s1[i:i+1]) - base64chars.index(s2[i:i+1]))\n    return res\n\ndef solve_stego():\n    with open('ComeOn!.txt', 'rb') as f:\n        file_lines = f.readlines()\n        bin_str = b''\n        for line in file_lines:\n            steg_line = line.replace(b'\\n', b'')\n            norm_line = base64.b64encode(base64.b64decode(steg_line)).replace(b'\\n', b'')\n            diff = get_base64_diff_value(steg_line, norm_line)\n            print(diff)\n            pads_num = steg_line.count(b'=')\n            if diff:\n                bin_str += bin(diff)[2:].zfill(pads_num * 2).encode()\n            else:\n                bin_str += b'0' * pads_num * 2\n            print(goflag(bin_str))\n\ndef goflag(bin_str):\n    res_str = b''\n    for i in range(0, len(bin_str), 8):\n        res_str += bytes([int(bin_str[i:i + 8], 2)])\n    return res_str.decode()\n\nif __name__ == '__main__':\n    solve_stego()\n```\n\n```py\nimport base64\n\nb64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\nwith open('ComeOn!.txt', 'rb') as f:\n    flag = ''\n    bin_str = ''\n    for line in f.readlines():\n        stegb64 = str(line, \"utf-8\").strip(\"\\n\")\n        rowb64 = str(base64.b64encode(base64.b64decode(stegb64)), \"utf-8\").strip(\"\\n\")\n        offset = abs(b64chars.index(stegb64.replace('=', '')[-1]) - b64chars.index(rowb64.replace('=', '')[-1]))\n        equalnum = stegb64.count('=')  # no equalnum no offset\n        if equalnum:\n            bin_str += bin(offset)[2:].zfill(equalnum * 2)\n\nprint(\"\".join([chr(int(bin_str[i:i + 8], 2)) for i in range(0, len(bin_str), 8)]))\n```\n\n这两个脚本的功能是一样的，可以都存着。\n\n<img src=\"BUU MISC第二页/image-20231209013048700.png\" alt=\"image-20231209013048700\" style=\"zoom:67%;\" />\n\n最后得到flag：`flag{6aseb4_f33!}`。\n\n### 27.[MRCTF2020]ezmisc\n\n<img src=\"BUU MISC第二页/image-20231209011611589.png\" alt=\"image-20231209011611589\" style=\"zoom:67%;\" />\n\n下载下来得到一个png图片，用010打开的时候发现了CRC校验错误，估计宽高有问题，用工具一把梭：\n\n<img src=\"BUU MISC第二页/image-20231209011700990.png\" alt=\"image-20231209011700990\" style=\"zoom: 67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209012049579.png\" alt=\"image-20231209012049579\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209012139794.png\" alt=\"image-20231209012139794\" style=\"zoom:67%;\" />\n\n得到flag：`flag{1ts_vEryyyyyy_ez!}`。\n\n### 28.[HBNIS2018]caesar\n\n<img src=\"BUU MISC第二页/image-20231209012303742.png\" alt=\"image-20231209012303742\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209012523387.png\" alt=\"image-20231209012523387\" style=\"zoom:67%;\" />\n\n好像是凯撒密码，但是不知道偏移了多少位，只能穷举，没办法只能上网找脚本：\n\n#### 凯撒密码穷举脚本\n\n```py\ndef change(c,i):\n    num=ord(c)\n    if(num>=33 and num<=126):\n        num=33+(num+i-33)%(94)#126-33=93\n    return chr(num)\n \n  \ndef kaisa_jiAmi(string,i):\n    string_new=''\n    for s in string:\n        string_new+=change(s,i)\n    print(string_new)\n    return string_new\n \n#本题有种暴力解密感觉\ndef kaisa_jiEmi(string):\n    for i in range(0,94):\n        print('第'+str(i+1)+'种可能:',end='  ')\n        #区别在于 string 是该对象原本就是字符串类型, 而 str()则是将该对象转换成字符串类型。\n        kaisa_jiAmi(string,i)\n    \n#你要知道input输入的数据类型都是string  \ndef main():\n    print('请输入操作，注意不是平常26种:')\n    choice=input('1:恺撒加密,2:凯撒穷举解密.请输入1或2：')\n    if choice=='1':\n        string=input('请输入需要加密字符串： ')\n        num=int(input('请输入需要加密的KEY： '))\n        kaisa_jiAmi(string,num)\n    elif choice=='2':\n        string=input('请输入需要解密字符串： ')\n        kaisa_jiEmi(string)\n    else:\n        print('输入错误，请重试')\n        main()\n    \nif __name__=='__main__':\n    main()\n\n```\n\n<img src=\"BUU MISC第二页/image-20231209012740846.png\" alt=\"image-20231209012740846\" style=\"zoom:67%;\" />\n\n得到flag：`flag{flagiscaesar}`。\n\n### 29.[SWPU2019]伟大的侦探\n\n<img src=\"BUU MISC第二页/image-20231209100308231.png\" alt=\"image-20231209100308231\" style=\"zoom:67%;\" />\n\n下载下来得到一个压缩包，里面有密码提示和一组加密的图片：\n\n<img src=\"BUU MISC第二页/image-20231209100928434.png\" alt=\"image-20231209100928434\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209100935662.png\" alt=\"image-20231209100935662\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209100947253.png\" alt=\"image-20231209100947253\" style=\"zoom:67%;\" />\n\n用010打开**密码.txt**，发现使用`EBCDIC`编码时，得到了`wllm_is_the_best_team!`，这个应该就是解压的密码。\n\n<img src=\"BUU MISC第二页/image-20231209101119204.png\" alt=\"image-20231209101119204\" style=\"zoom:67%;\" />\n\n![image-20231209101148513](BUU MISC第二页/image-20231209101148513.png)\n\n解压得到一组跳舞小人的图片，这个是**福尔摩斯小人密码**\n\n<img src=\"BUU MISC第二页/image-20231209101318319.png\" alt=\"image-20231209101318319\" style=\"zoom:67%;\" />\n\n对照密码表解出`iloveholmesandwllm`：\n\n<img src=\"BUU MISC第二页/image-20231209101456458.png\" alt=\"image-20231209101456458\" style=\"zoom:67%;\" />\n\nflag为：`flag{iloveholmesandwllm}`。\n\n###  30.黑客帝国\n\n<img src=\"BUU MISC第二页/image-20231209101820536.png\" alt=\"image-20231209101820536\" style=\"zoom:67%;\" />\n\n下载得到这样的一组数据：\n\n<img src=\"BUU MISC第二页/image-20231209164924674.png\" alt=\"image-20231209164924674\" style=\"zoom:67%;\" />\n\n查看数据发现`526172211a070000`很像16进制数据，用winhex创建一个文件看看：\n\n<img src=\"BUU MISC第二页/image-20231209170236676.png\" alt=\"image-20231209170236676\" style=\"zoom:67%;\" />\n\n是一个rar文件，这边有一个16进制转rar的脚本，也可以使用这个来得到rar：\n\n#### 16进制转rar\n\n```py\ndef hex_to_rar(hex_string, output_file):\n    # 将16进制字符串转换为bytes\n    binary_data = bytes.fromhex(hex_string)\n\n    # 将bytes写入RAR文件\n    with open(output_file, 'wb') as file:\n        file.write(binary_data)\n\nif __name__ == \"__main__\":\n    # 输入16进制字符串\n    hex_data = \"16进制字符串\"\n\n    # 指定输出RAR文件名\n    output_file_name = \"output.rar\"\n\n    # 调用函数进行转换\n    hex_to_rar(hex_data, output_file_name)\n\n    print(f\"成功将16进制字符串转换为RAR文件: {output_file_name}\")\n```\n\n保存后打开发现是加密的，用工具爆破一下：\n\n<img src=\"BUU MISC第二页/image-20231209170524315.png\" alt=\"image-20231209170524315\" style=\"zoom:67%;\" />\n\n得到密码`3690`打开得到一个损坏的png文件，应该是要修复：\n\n<img src=\"BUU MISC第二页/image-20231209170630653.png\" alt=\"image-20231209170630653\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209170749859.png\" alt=\"image-20231209170749859\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209170721640.png\" alt=\"image-20231209170721640\" style=\"zoom:67%;\" />\n\n但是查看了文件头尾之后，发现这是一个jepg文件的文件头被改成了png，将`B9 50 4E 47`改成`FF D8 FF E0`，保存后得到正确的图片：\n\n<img src=\"BUU MISC第二页/image-20231209171124461.png\" alt=\"image-20231209171124461\" style=\"zoom:67%;\" />\n\nflag为：`flag{57cd4cfd4e07505b98048ca106132125}`。\n\n### 31.[HBNIS2018]低个头\n\n<img src=\"BUU MISC第二页/image-20231209171406231.png\" alt=\"image-20231209171406231\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209171448092.png\" alt=\"image-20231209171448092\" style=\"zoom:67%;\" />\n\n熟悉的感觉，是键盘加密，翻译一下得到明文：`CTF`\n\n<img src=\"BUU MISC第二页/image-20231209171933148.png\" alt=\"image-20231209171933148\" style=\"zoom:67%;\" />\n\nflag为：`flag{CTF}`。\n\n### 32.[MRCTF2020]你能看懂音符吗\n\n<img src=\"BUU MISC第二页/image-20231209172049261.png\" alt=\"image-20231209172049261\" style=\"zoom:67%;\" />\n\n题目下载下来的rar压缩包是坏的，打开发现文件头错了，修复一下\n\n<img src=\"BUU MISC第二页/image-20231209172213470.png\" alt=\"image-20231209172213470\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209172415401.png\" alt=\"image-20231209172415401\" style=\"zoom:67%;\" />\n\n应该是把文字隐藏了，或者文字改为了白色，直接`cirl+a`选中所有文字，右键查看字体，果然是隐藏了。\n\n<img src=\"BUU MISC第二页/image-20231209172524394.png\" alt=\"image-20231209172524394\" style=\"zoom:67%;\" />\n\n<img src=\"BUU MISC第二页/image-20231209172550260.png\" alt=\"image-20231209172550260\" style=\"zoom:67%;\" />\n\n```\n♭♯♪‖¶♬♭♭♪♭‖‖♭♭♬‖♫♪‖♩♬‖♬♬♭♭♫‖♩♫‖♬♪♭♭♭‖¶∮‖‖‖‖♩♬‖♬♪‖♩♫♭♭♭♭♭§‖♩♩♭♭♫♭♭♭‖♬♭‖¶§♭♭♯‖♫∮‖♬¶‖¶∮‖♬♫‖♫♬‖♫♫§=\n```\n\n用在线网站翻译一下得到flag。\n\n<img src=\"BUU MISC第二页/image-20231209172641900.png\" alt=\"image-20231209172641900\" style=\"zoom:67%;\" />\n\nflag为：`flag{thEse_n0tes_ArE_am@zing~}`。\n\n","slug":"BUU MISC第二页","published":1,"updated":"2023-12-11T12:20:14.562Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq0w2clb00078wv5b0c7cp6r","content":"<h1 id=\"BUU-MISC第二页\"><a href=\"#BUU-MISC第二页\" class=\"headerlink\" title=\"BUU MISC第二页\"></a>BUU MISC第二页</h1><h3 id=\"1-被劫持的神秘礼物\"><a href=\"#1-被劫持的神秘礼物\" class=\"headerlink\" title=\"1.被劫持的神秘礼物\"></a>1.被劫持的神秘礼物</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116195450524.png\" alt=\"image-20231116195450524\" data-caption=\"image-20231116195450524\" loading=\"lazy\">\n\n<p>这题是流量分析，上来先http过滤一下，这条比较可疑，追踪一下tcp流：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116195905524.png\" alt=\"image-20231116195905524\" data-caption=\"image-20231116195905524\" loading=\"lazy\">\n\n<p>![image-20231116195953609](BUU MISC第二页&#x2F;image-20231116195953609.png)</p>\n<p>根据题目所写，”找到帐号密码，串在一起，用32位小写MD5哈希一下得到的就是答案“，那么本题答案为：<code>adminaadminb</code>，拿去用32位MD5哈希一下：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116200756188.png\" alt=\"image-20231116200756188\" data-caption=\"image-20231116200756188\" loading=\"lazy\">\n\n<p>flag为：<code>flag&#123;1d240aafe21a86afc11f38a45b541a49&#125;</code>。</p>\n<h3 id=\"2-BJDCTF2020-认真你就输了\"><a href=\"#2-BJDCTF2020-认真你就输了\" class=\"headerlink\" title=\"2.[BJDCTF2020]认真你就输了\"></a>2.[BJDCTF2020]认真你就输了</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116201610324.png\" alt=\"image-20231116201610324\" data-caption=\"image-20231116201610324\" loading=\"lazy\">\n\n<p>下载下来是一个**.xls**文件，打开是这样，没有东西，用bandzip打开看看：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116202048077.png\" alt=\"image-20231116202048077\" data-caption=\"image-20231116202048077\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116202136439.png\" alt=\"image-20231116202136439\" data-caption=\"image-20231116202136439\" loading=\"lazy\">\n\n<p>一顿翻找，找到了flag：<code>flag&#123;M9eVfi2Pcs#&#125;</code>。</p>\n<h3 id=\"3-BJDCTF2020-藏藏藏\"><a href=\"#3-BJDCTF2020-藏藏藏\" class=\"headerlink\" title=\"3.[BJDCTF2020]藏藏藏\"></a>3.[BJDCTF2020]藏藏藏</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116202242375.png\" alt=\"image-20231116202242375\" data-caption=\"image-20231116202242375\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116202340218.png\" alt=\"image-20231116202340218\" data-caption=\"image-20231116202340218\" loading=\"lazy\">\n\n<p>下载下来是一个图片，先看看属性没问题，再用010看看，有压缩包：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116202652184.png\" alt=\"image-20231116202652184\" data-caption=\"image-20231116202652184\" loading=\"lazy\">\n\n<p>用kali，binwalk、foremost，得到压缩包：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116221127242.png\" alt=\"image-20231116221127242\" data-caption=\"image-20231116221127242\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116221149333.png\" alt=\"image-20231116221149333\" data-caption=\"image-20231116221149333\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116221219237.png\" alt=\"image-20231116221219237\" data-caption=\"image-20231116221219237\" loading=\"lazy\">\n\n<p>打开得到二维码，扫一下得到本题的flag：<code>flag&#123;you are the best!&#125;</code>。</p>\n<h3 id=\"4-被偷走的文件\"><a href=\"#4-被偷走的文件\" class=\"headerlink\" title=\"4.被偷走的文件\"></a>4.被偷走的文件</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231125114517454.png\" alt=\"image-20231125114517454\" data-caption=\"image-20231125114517454\" loading=\"lazy\">\n\n<p>分析流量时找到了这条，将FTP过滤出来看看：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231125114555413.png\" alt=\"image-20231125114555413\" data-caption=\"image-20231125114555413\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231125114810488.png\" alt=\"image-20231125114810488\" data-caption=\"image-20231125114810488\" loading=\"lazy\">\n\n<p>追踪看看，说明被偷走了<strong>flag.rar</strong>文件：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231125114834857.png\" alt=\"image-20231125114834857\" data-caption=\"image-20231125114834857\" loading=\"lazy\">\n\n<p>用foremost分离流量包看看：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231125115048235.png\" alt=\"image-20231125115048235\" data-caption=\"image-20231125115048235\" loading=\"lazy\">\n\n<p>成功得到一个加密的压缩包文件，尝试暴力破解：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231125115216084.png\" alt=\"image-20231125115216084\" data-caption=\"image-20231125115216084\" loading=\"lazy\">\n\n<p>发现是四位纯数字密码：<code>5790</code></p>\n<p>得到flag：<code>flag&#123;6fe99a5d03fb01f833ec3caa80358fa3&#125;</code>。</p>\n<h3 id=\"5-刷新过的图片\"><a href=\"#5-刷新过的图片\" class=\"headerlink\" title=\"5.刷新过的图片\"></a>5.刷新过的图片</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203190350284.png\" alt=\"image-20231203190350284\" data-caption=\"image-20231203190350284\" loading=\"lazy\">\n\n<p>键盘上的刷新键快捷键是F5,可以得知这题应该是F5隐写，上网找工具下载下来：<strong>F5-steganography-master</strong>，一开始怎么都用不起来，后来才发现是java版本的问题。</p>\n<h4 id=\"关于解决F5工具java版本问题的方法\"><a href=\"#关于解决F5工具java版本问题的方法\" class=\"headerlink\" title=\"关于解决F5工具java版本问题的方法\"></a>关于解决F5工具java版本问题的方法</h4><p>解决java版本问题的原文链接：<a href=\"https://blog.csdn.net/pythllc/article/details/128969843\">https://blog.csdn.net/pythllc/article/details/128969843</a></p>\n<p>因为java版本是kali自带的17.0.5的版本，使用F5-steganography会出现报错，网上找到的博客中介绍的解决办法是安装java11，小版本不影响，改一下教程里面的版本就行，我下到的版本为<strong>jdk-11.0.21_linux-x64_bin.tar.gz</strong>，所以教程经过小改动后是：</p>\n<p>1.下载好后，将压缩包移动到&#x2F;etc&#x2F;opt目录再进行解压</p>\n<p>2.移动压缩包至opt目录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv jdk-11.0.21_linux-x64_bin.tar.gz /etc/opt</span><br></pre></td></tr></table></figure>\n\n<p>3.移动好后切换至opt目录进行解压</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/opt</span><br></pre></td></tr></table></figure>\n\n<p>4.解压</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf jdk-11.0.21_linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>5.拷贝解压后Java文件夹至&#x2F;usr&#x2F;bin</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp -r jdk-11.0.21/ /usr/bin</span><br></pre></td></tr></table></figure>\n\n<p>6.安装并注册</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update-alternatives --install /usr/bin/java java /etc/opt/jdk-11.0.21/bin/java 1</span><br><span class=\"line\"></span><br><span class=\"line\">update-alternatives --install /usr/bin/javac javac /etc/opt/jdk-11.0.21/bin/javac 1</span><br><span class=\"line\"></span><br><span class=\"line\">update-alternatives --set java /etc/opt/jdk-11.0.21/bin/java</span><br><span class=\"line\"></span><br><span class=\"line\">update-alternatives --set javac /etc/opt/jdk-11.0.21/bin/javac</span><br></pre></td></tr></table></figure>\n\n<p>现在就可以正常使用F5工具了。</p>\n<h4 id=\"F5工具的使用\"><a href=\"#F5工具的使用\" class=\"headerlink\" title=\"F5工具的使用\"></a>F5工具的使用</h4><p>执行F5工具的命令为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java Extract /图片的绝对路径 [-p 密码] [-e 输出文件]</span><br></pre></td></tr></table></figure>\n\n<p>一般在CTF题目中，密码就是图片名字，本题并不需要输入密码</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203192026164.png\" alt=\"image-20231203192026164\" data-caption=\"image-20231203192026164\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203192047884.png\" alt=\"image-20231203192047884\" data-caption=\"image-20231203192047884\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203192100854.png\" alt=\"image-20231203192100854\" data-caption=\"image-20231203192100854\" loading=\"lazy\">\n\n<p>打开<strong>output.txt</strong>，发现PK开头，那这个应该是一个zip压缩包，改下后缀，发现文件被加密了，猜测是伪加密：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203192156470.png\" alt=\"image-20231203192156470\" data-caption=\"image-20231203192156470\" loading=\"lazy\">\n\n<p>拖进010看一眼，果然是伪加密，<code>01 00</code>改成<code>00 00</code>：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203192350491.png\" alt=\"image-20231203192350491\" data-caption=\"image-20231203192350491\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203192447918.png\" alt=\"image-20231203192447918\" data-caption=\"image-20231203192447918\" loading=\"lazy\">\n\n<p>成功得到flag：<code>flag&#123;96efd0a2037d06f34199e921079778ee&#125;</code>。</p>\n<h3 id=\"6-GXYCTF2019-佛系青年\"><a href=\"#6-GXYCTF2019-佛系青年\" class=\"headerlink\" title=\"6.[GXYCTF2019]佛系青年\"></a>6.[GXYCTF2019]佛系青年</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203193202986.png\" alt=\"image-20231203193202986\" data-caption=\"image-20231203193202986\" loading=\"lazy\">\n\n<p>看题目就猜测是与佛论禅加密，下载下来发现压缩包里面被加密了,估计是伪加密：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203193314238.png\" alt=\"image-20231203193314238\" data-caption=\"image-20231203193314238\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203193406311.png\" alt=\"image-20231203193406311\" data-caption=\"image-20231203193406311\" loading=\"lazy\">\n\n<p>果然是伪加密，把<code>09 00</code>改成<code>00 00</code>，成功解压出来：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203193508467.png\" alt=\"image-20231203193508467\" data-caption=\"image-20231203193508467\" loading=\"lazy\">\n\n<p>在网上找了几个与佛论禅的网站，最终找到是Bugku的可以成功解密：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203193558273.png\" alt=\"image-20231203193558273\" data-caption=\"image-20231203193558273\" loading=\"lazy\">\n\n<p>flag为：<code>flag&#123;w0_fo_ci_Be1&#125;</code>。</p>\n<h3 id=\"7-BJDCTF2020-你猜我是个啥\"><a href=\"#7-BJDCTF2020-你猜我是个啥\" class=\"headerlink\" title=\"7.[BJDCTF2020]你猜我是个啥\"></a>7.[BJDCTF2020]你猜我是个啥</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203193700775.png\" alt=\"image-20231203193700775\" data-caption=\"image-20231203193700775\" loading=\"lazy\">\n\n<p>下载下来是一个zip文件，但是用bandzip打开发现这个不是一个压缩包，用在线文件检查网站检查了一下，发现是个<strong>png</strong>文件</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203194054577.png\" alt=\"image-20231203194054577\" data-caption=\"image-20231203194054577\" loading=\"lazy\">\n\n<p>改完后缀给了一个二维码，扫看看：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203194139439.png\" alt=\"image-20231203194139439\" data-caption=\"image-20231203194139439\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203194211872.png\" alt=\"image-20231203194211872\" data-caption=\"image-20231203194211872\" loading=\"lazy\">\n\n<p>哦？flag不在这里，用010看看，原来flag藏在这里啊：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203194305702.png\" alt=\"image-20231203194305702\" data-caption=\"image-20231203194305702\" loading=\"lazy\">\n\n<p>flag为：<code>flag&#123;i_am_fl@g&#125;</code>。</p>\n<h3 id=\"8-snake\"><a href=\"#8-snake\" class=\"headerlink\" title=\"8.snake\"></a>8.snake</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203194617231.png\" alt=\"image-20231203194617231\" data-caption=\"image-20231203194617231\" loading=\"lazy\">\n\n<p>下载下来是一张图片，用010看一眼，好家伙，有两个压缩包：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203194647200.png\" alt=\"image-20231203194647200\" data-caption=\"image-20231203194647200\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203194837293.png\" alt=\"image-20231203194837293\" data-caption=\"image-20231203194837293\" loading=\"lazy\">\n\n<p>用binwalk分离：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203195200078.png\" alt=\"image-20231203195200078\" data-caption=\"image-20231203195200078\" loading=\"lazy\">\n\n<p>得到<strong>cipher</strong>和<strong>key</strong>两个文件，key里面是一段base64编码，翻译一下：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203195313506.png\" alt=\"image-20231203195313506\" data-caption=\"image-20231203195313506\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203195411777.png\" alt=\"image-20231203195411777\" data-caption=\"image-20231203195411777\" loading=\"lazy\">\n\n<p><code>What is Nicki Minaj&#39;s favorite song that refers to snakes?</code>根据这段提示，搜索得知答案为<code>anaconda</code></p>\n<p>在网上搜索与蛇相关的加密算法，找到了<strong>Serpent加密</strong></p>\n<p>找到了这个在线解密网站：<a href=\"http://serpent.online-domain-tools.com/\">Serpent 加密 – 轻松加密或解密字符串或文件 (online-domain-tools.com)</a></p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203200040795.png\" alt=\"image-20231203200040795\" data-caption=\"image-20231203200040795\" loading=\"lazy\">\n\n<p>成功得到flag：<code>flag&#123;who_knew_serpent_cipher_existed&#125;</code>。</p>\n<h3 id=\"9-秘密文件\"><a href=\"#9-秘密文件\" class=\"headerlink\" title=\"9.秘密文件\"></a>9.秘密文件</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203201303694.png\" alt=\"image-20231203201303694\" data-caption=\"image-20231203201303694\" loading=\"lazy\">\n\n<p>猜测这题和之前那道<strong>被偷走的文件</strong>一样，先过滤一下<strong>ftp</strong>：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203201344531.png\" alt=\"image-20231203201344531\" data-caption=\"image-20231203201344531\" loading=\"lazy\">\n\n<p>看着就很可疑，追踪一下tcp流：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203201439351.png\" alt=\"image-20231203201439351\" data-caption=\"image-20231203201439351\" loading=\"lazy\">\n\n<p>找到被偷走的机密文件了，用kali去foremost分离一下：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203201654872.png\" alt=\"image-20231203201654872\" data-caption=\"image-20231203201654872\" loading=\"lazy\">\n\n<p>得到一个加密的压缩包，爆一下得到压缩包密码为：<code>1903</code></p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203201759058.png\" alt=\"image-20231203201759058\" data-caption=\"image-20231203201759058\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203201833309.png\" alt=\"image-20231203201833309\" data-caption=\"image-20231203201833309\" loading=\"lazy\">\n\n<p>得到flag：<code>flag&#123;d72e5a671aa50fa5f400e5d10eedeaa5&#125;</code>。</p>\n<h3 id=\"10-BJDCTF2020-just-a-rar\"><a href=\"#10-BJDCTF2020-just-a-rar\" class=\"headerlink\" title=\"10.[BJDCTF2020]just_a_rar\"></a>10.[BJDCTF2020]just_a_rar</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203234818626.png\" alt=\"image-20231203234818626\" data-caption=\"image-20231203234818626\" loading=\"lazy\">\n\n<p>下载下来是一个加密的rar文件：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203234908095.png\" alt=\"image-20231203234908095\" data-caption=\"image-20231203234908095\" loading=\"lazy\">\n\n<p>根据提示，是四位纯数字密码，爆破一下得到密码为：<code>2016</code></p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203235021837.png\" alt=\"image-20231203235021837\" data-caption=\"image-20231203235021837\" loading=\"lazy\">\n\n<p>解压得到图片：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203235059836.png\" alt=\"image-20231203235059836\" data-caption=\"image-20231203235059836\" loading=\"lazy\">\n\n<p>第一步检查属性，结果直接找到了flag：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203235207075.png\" alt=\"image-20231203235207075\" data-caption=\"image-20231203235207075\" loading=\"lazy\">\n\n<p>flag为：<code>flag&#123;Wadf_123&#125;</code>。</p>\n<h3 id=\"11-BJDCTF2020-鸡你太美\"><a href=\"#11-BJDCTF2020-鸡你太美\" class=\"headerlink\" title=\"11.[BJDCTF2020]鸡你太美\"></a>11.[BJDCTF2020]鸡你太美</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203235306913.png\" alt=\"image-20231203235306913\" data-caption=\"image-20231203235306913\" loading=\"lazy\">\n\n<p>解压发现鸡哥的gif图：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203235419051.png\" alt=\"image-20231203235419051\" data-caption=\"image-20231203235419051\" loading=\"lazy\">\n\n<p>先拆分一下gif看看有没有暗藏玄鸡</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203235552446.png\" alt=\"image-20231203235552446\" data-caption=\"image-20231203235552446\" loading=\"lazy\">\n\n<p>![image-20231203235603898](BUU MISC第二页&#x2F;image-20231203235603898.png)</p>\n<p>整整200帧居然没藏东西，看看篮球副本，好像坏了打不开，用010看看发现好像少文件头</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203235950197.png\" alt=\"image-20231203235950197\" data-caption=\"image-20231203235950197\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204000002248.png\" alt=\"image-20231204000002248\" data-caption=\"image-20231204000002248\" loading=\"lazy\">\n\n<p>给他补全看看：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204000213007.png\" alt=\"image-20231204000213007\" data-caption=\"image-20231204000213007\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204000229830.png\" alt=\"image-20231204000229830\" data-caption=\"image-20231204000229830\" loading=\"lazy\">\n\n<p>得到flag：<code>flag&#123;zhi-yin-you-are-beautiful&#125;</code>，但是发现交上去不对，查了wp发现buu上的flag是：<code>flag&#123;zhi_yin_you_are_beautiful&#125;</code>。</p>\n<h3 id=\"12-菜刀666\"><a href=\"#12-菜刀666\" class=\"headerlink\" title=\"12.菜刀666\"></a>12.菜刀666</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204000656325.png\" alt=\"image-20231204000656325\" data-caption=\"image-20231204000656325\" loading=\"lazy\">\n\n<p>这题是流量分析，看了半天没办法，去参考wp了。</p>\n<p>先过滤<strong>POST</strong>的包：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http.request.method==POST</span><br></pre></td></tr></table></figure>\n\n<p>在<strong>tcp.stream eq 7</strong>中发现了大量的数据</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204001906241.png\" alt=\"image-20231204001906241\" data-caption=\"image-20231204001906241\" loading=\"lazy\">\n\n<p><code>FF D8</code>开头<code>FF D9</code>结尾，判断为<code>jpg</code>图片，将这些十六进制复制出来，以原始文件流写入文件：</p>\n<h5 id=\"16进制转jpg图片\"><a href=\"#16进制转jpg图片\" class=\"headerlink\" title=\"16进制转jpg图片\"></a>16进制转jpg图片</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Author: MoChu7</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> struct</span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;str.txt&quot;</span>,<span class=\"string\">&quot;r&quot;</span>)<span class=\"comment\">#十六进制数据文件</span></span><br><span class=\"line\">lines = a.read()</span><br><span class=\"line\">res = [lines[i:i+<span class=\"number\">2</span>] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"built_in\">len</span>(lines),<span class=\"number\">2</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;res.jpg&quot;</span>,<span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">\t\ts = struct.pack(<span class=\"string\">&#x27;B&#x27;</span>,<span class=\"built_in\">int</span>(i,<span class=\"number\">16</span>))</span><br><span class=\"line\">\t\tf.write(s)</span><br></pre></td></tr></table></figure>\n\n<p>得到图片：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204002400611.png\" alt=\"image-20231204002400611\" data-caption=\"image-20231204002400611\" loading=\"lazy\">\n\n<p>这是一个密码，那么还会有个压缩包，在这段流中找到一个<strong>hello.zip</strong>压缩包，foremost分离一下流量包：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204002452504.png\" alt=\"image-20231204002452504\" data-caption=\"image-20231204002452504\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204002850837.png\" alt=\"image-20231204002850837\" data-caption=\"image-20231204002850837\" loading=\"lazy\">\n\n<p>输入密码：<code>Th1s_1s_p4sswd_!!!</code></p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204003047862.png\" alt=\"image-20231204003047862\" data-caption=\"image-20231204003047862\" loading=\"lazy\">\n\n<p>得到flag：<code>flag&#123;3OpWdJ-JP6FzK-koCMAK-VkfWBq-75Un2z&#125;</code>。</p>\n<h3 id=\"13-BJDCTF2020-一叶障目\"><a href=\"#13-BJDCTF2020-一叶障目\" class=\"headerlink\" title=\"13.[BJDCTF2020]一叶障目\"></a>13.[BJDCTF2020]一叶障目</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204190453001.png\" alt=\"image-20231204190453001\" data-caption=\"image-20231204190453001\" loading=\"lazy\">\n\n<p>下载解压就是一张图片，拖进010看看：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204190517609.png\" alt=\"image-20231204190517609\" data-caption=\"image-20231204190517609\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204190542422.png\" alt=\"image-20231204190542422\" data-caption=\"image-20231204190542422\" loading=\"lazy\">\n\n<p>发现报错说crc不对，那应该是crc不正确，用工具爆破一下：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204190628126.png\" alt=\"image-20231204190628126\" data-caption=\"image-20231204190628126\" loading=\"lazy\">\n\n<p>直接得到flag：<code>flag&#123;66666&#125;</code>。</p>\n<h3 id=\"14-SWPU2019-神奇的二维码\"><a href=\"#14-SWPU2019-神奇的二维码\" class=\"headerlink\" title=\"14.[SWPU2019]神奇的二维码\"></a>14.[SWPU2019]神奇的二维码</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204190948248.png\" alt=\"image-20231204190948248\" data-caption=\"image-20231204190948248\" loading=\"lazy\">\n\n<p>这题下载下来是一个二维码，先拖进010看看，发现没东西，扫码看看：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204191213913.png\" alt=\"image-20231204191213913\" data-caption=\"image-20231204191213913\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204191302186.png\" alt=\"image-20231204191302186\" data-caption=\"image-20231204191302186\" loading=\"lazy\">\n\n<p>flag不在这里，拖进kali里面binwalk看看，得到这些东西：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204191340102.png\" alt=\"image-20231204191340102\" data-caption=\"image-20231204191340102\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204191408741.png\" alt=\"image-20231204191408741\" data-caption=\"image-20231204191408741\" loading=\"lazy\">\n\n<p>这是一段base64加密，解密得到：<code>asdfghjkl1234567890</code></p>\n<p>发现是那个加密的压缩包里面<strong>flag.jpg</strong>文件的密码，kali直接给我图片搞出来了，看看word文档：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204191629040.png\" alt=\"image-20231204191629040\" data-caption=\"image-20231204191629040\" loading=\"lazy\">\n\n<p>超大一坨，猜测base64多次加密，试试：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204191844688.png\" alt=\"image-20231204191844688\" data-caption=\"image-20231204191844688\" loading=\"lazy\">\n\n<p>我靠，base64加密了20层，以为得到flag：<code>flag&#123;comEON_YOuAreSOSoS0great&#125;</code>。错了！回头发现压缩包里面还有个音频文件，原来得到的&#96;&#96;comEON_YOuAreSOSoS0great&#96;是这个压缩包的密码，听了发现是摩斯密码：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204192355168.png\" alt=\"image-20231204192355168\" data-caption=\"image-20231204192355168\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204192520360.png\" alt=\"image-20231204192520360\" data-caption=\"image-20231204192520360\" loading=\"lazy\">\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- --- .-. ... . .. ... ...- . .-. -.-- ...- . .-. -.-- . .- ... -.--</span><br></pre></td></tr></table></figure>\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204193006361.png\" alt=\"image-20231204193006361\" data-caption=\"image-20231204193006361\" loading=\"lazy\">\n\n<p>这边要都转成小写才是正确的flag：<code>flag&#123;morseisveryveryeasy&#125;</code>。</p>\n<h3 id=\"15-BJDCTF2020-纳尼\"><a href=\"#15-BJDCTF2020-纳尼\" class=\"headerlink\" title=\"15.[BJDCTF2020]纳尼\"></a>15.[BJDCTF2020]纳尼</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204193210939.png\" alt=\"image-20231204193210939\" data-caption=\"image-20231204193210939\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204193242805.png\" alt=\"image-20231204193242805\" data-caption=\"image-20231204193242805\" loading=\"lazy\">\n\n<p>打开发现gif图打不开，根据之前写的一题，猜测是修复文件头，用010看看，果然是：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204193356600.png\" alt=\"image-20231204193356600\" data-caption=\"image-20231204193356600\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204193508018.png\" alt=\"image-20231204193508018\" data-caption=\"image-20231204193508018\" loading=\"lazy\">\n\n<p>修好打开一看，gif图里面每帧都是一段base64的部分，拆开发现总共4帧，提取文字汇总一下：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204193715022.png\" alt=\"image-20231204193715022\" data-caption=\"image-20231204193715022\" loading=\"lazy\">\n\n<p>得到：<code>Q1RGe3dhbmdfYmFvX3FpYW5nX2lzX3NhZH0=</code>，解密得到flag：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204193959516.png\" alt=\"image-20231204193959516\" data-caption=\"image-20231204193959516\" loading=\"lazy\">\n\n<p>flag为：<code>flag&#123;wang_bao_qiang_is_sad&#125;</code>。</p>\n<h3 id=\"16-梅花香之苦寒来\"><a href=\"#16-梅花香之苦寒来\" class=\"headerlink\" title=\"16.梅花香之苦寒来\"></a>16.梅花香之苦寒来</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204194155541.png\" alt=\"image-20231204194155541\" data-caption=\"image-20231204194155541\" loading=\"lazy\">\n\n<p>下载下来是一个图片，按照惯例看看属性：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204194247971.png\" alt=\"image-20231204194247971\" data-caption=\"image-20231204194247971\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204194313711.png\" alt=\"image-20231204194313711\" data-caption=\"image-20231204194313711\" loading=\"lazy\">\n\n<p>有提示？拖进kali没找到东西，用010看看：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204194827296.png\" alt=\"image-20231204194827296\" data-caption=\"image-20231204194827296\" loading=\"lazy\">\n\n<p>发现在文件后面藏了大量数据，感觉像<strong>菜刀666</strong>那题，这些应该也是16进制数据，需要脚本，上网搜wp，这是转换的脚本：</p>\n<h5 id=\"16进制转字符串\"><a href=\"#16进制转字符串\" class=\"headerlink\" title=\"16进制转字符串\"></a>16进制转字符串</h5><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;hex.txt&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> h:     <span class=\"comment\"># hex.txt为要转换的文本文件</span></span><br><span class=\"line\">    val = h.read()</span><br><span class=\"line\">    h.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;result.txt&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> re: <span class=\"comment\"># 转换完成后写入result.txt</span></span><br><span class=\"line\">    tem = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(val), <span class=\"number\">2</span>):</span><br><span class=\"line\">        tem = <span class=\"string\">&#x27;0x&#x27;</span> + val[i] + val[i+<span class=\"number\">1</span>]</span><br><span class=\"line\">        tem = <span class=\"built_in\">int</span>(tem, base=<span class=\"number\">16</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(tem), end=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">        re.write(<span class=\"built_in\">chr</span>(tem))</span><br><span class=\"line\">    re.close()</span><br></pre></td></tr></table></figure>\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204195602509.png\" alt=\"image-20231204195602509\" data-caption=\"image-20231204195602509\" loading=\"lazy\">\n\n<p>得到一堆坐标，需要画图，用matplotlib画图片，脚本为：</p>\n<h5 id=\"二维坐标画图\"><a href=\"#二维坐标画图\" class=\"headerlink\" title=\"二维坐标画图\"></a>二维坐标画图</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 逐行读取文件，去除括号并分割数值</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;result.txt&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">    data = [line.strip(<span class=\"string\">&#x27;()\\n&#x27;</span>).split(<span class=\"string\">&#x27;,&#x27;</span>) <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> file]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将字符串值转换为浮点数</span></span><br><span class=\"line\">x, y = np.array(data, dtype=<span class=\"built_in\">float</span>).T</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制数据图</span></span><br><span class=\"line\">plt.plot(x, y, <span class=\"string\">&#x27;.&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<p>得到二维码：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204211343476.png\" alt=\"image-20231204211343476\" data-caption=\"image-20231204211343476\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204211456819.png\" alt=\"image-20231204211456819\" data-caption=\"image-20231204211456819\" loading=\"lazy\">\n\n<p>得到flag：<code>flag&#123;40fc0a979f759c8892f4dc045e28b820&#125;</code>。</p>\n<h3 id=\"17-HBNIS2018-excel破解\"><a href=\"#17-HBNIS2018-excel破解\" class=\"headerlink\" title=\"17.[HBNIS2018]excel破解\"></a>17.[HBNIS2018]excel破解</h3><p><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/Users\\48956\\AppData\\Roaming\\Typora\\typora-user-images\\image-20231207190639195.png\" alt=\"image-20231207190639195\" data-caption=\"image-20231207190639195\" loading=\"lazy\"></p>\n<p>下载下来是一个<strong>xls</strong>文件，被加密了打不开，改成<strong>zip</strong>用010打开，搜索flag，结果直接找到了：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/Users\\48956\\AppData\\Roaming\\Typora\\typora-user-images\\image-20231207191246922.png\" alt=\"image-20231207191246922\" data-caption=\"image-20231207191246922\" loading=\"lazy\">\n\n<p>flag为：<code>flag&#123;office_easy_cracked&#125;</code>。</p>\n<h3 id=\"18-HBNIS2018-来题中等的吧\"><a href=\"#18-HBNIS2018-来题中等的吧\" class=\"headerlink\" title=\"18.[HBNIS2018]来题中等的吧\"></a>18.[HBNIS2018]来题中等的吧</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207191425076.png\" alt=\"image-20231207191425076\" data-caption=\"image-20231207191425076\" loading=\"lazy\">\n\n<p>这题下下来解压得到一个png</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207191452348.png\" alt=\"image-20231207191452348\" data-caption=\"image-20231207191452348\" loading=\"lazy\">\n\n<p>像摩斯密码，翻译一下是<code>.- .-.. .--. .... .- .-.. .- -...</code>，在线翻译出来是：<code>ALPHALAB</code>，用各种方法查了一遍图片，好像没东西了。</p>\n<p>万一是flag呢？转换成小写提交看看：<code>flag&#123;alphalab&#125;</code>，还真是。</p>\n<h3 id=\"19-ACTF新生赛2020-outguess\"><a href=\"#19-ACTF新生赛2020-outguess\" class=\"headerlink\" title=\"19.[ACTF新生赛2020]outguess\"></a>19.[ACTF新生赛2020]outguess</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207192019538.png\" alt=\"image-20231207192019538\" data-caption=\"image-20231207192019538\" loading=\"lazy\">\n\n<p>下载下来解压得到：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207192129749.png\" alt=\"image-20231207192129749\" data-caption=\"image-20231207192129749\" loading=\"lazy\">\n\n<p>查看图片属性时发现备注应该是社会主义核心价值观加密：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207192155042.png\" alt=\"image-20231207192155042\" data-caption=\"image-20231207192155042\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207192302627.png\" alt=\"image-20231207192302627\" data-caption=\"image-20231207192302627\" loading=\"lazy\">\n\n<p>解密得到：<code>abc</code></p>\n<p>模仿上题尝试提交看看，果然不对，回头搜搜guess是啥，找到一个工具叫<strong>outguess</strong>。</p>\n<h4 id=\"使用outguess\"><a href=\"#使用outguess\" class=\"headerlink\" title=\"使用outguess\"></a>使用outguess</h4><p>输入outguess -help即可获得相关命令。</p>\n<p><strong>注意在windows里面需要加<code>&quot; &quot;</code>而在Linux里面不需要</strong></p>\n<ul>\n<li>加密：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outguess -k “my secret key” -d hidden.txt demo.jpg out.jpg</span><br></pre></td></tr></table></figure>\n<p>加密之后，demo.jpg会覆盖out.jpg，hidden.txt的内容是要隐藏的东西。</p>\n<ul>\n<li>解密：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outguess -k “my secret key” -r out.jpg hidden.txt</span><br></pre></td></tr></table></figure>\n\n<p>解密之后，紧密内容放在hidden.txt中。</p>\n<p>之前解密出来的<strong>abc</strong>应该就是<strong>key</strong>，那么本题的指令就是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outguess -k abc -r mmm.jpg hidden.txt</span><br></pre></td></tr></table></figure>\n\n<p>得到flag：<code>flag&#123;gue33_Gu3Ss!2020&#125;</code>。</p>\n<h3 id=\"20-穿越时空的思念\"><a href=\"#20-穿越时空的思念\" class=\"headerlink\" title=\"20.穿越时空的思念\"></a>20.穿越时空的思念</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207194219079.png\" alt=\"image-20231207194219079\" data-caption=\"image-20231207194219079\" loading=\"lazy\">\n\n<p>下载下来是一个mp3文件，用audacity打开看看，里面好像有段摩斯：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207194435380.png\" alt=\"image-20231207194435380\" data-caption=\"image-20231207194435380\" loading=\"lazy\">\n\n<p><code>..-. ----- ..--- ----. -... -.. -.... ..-. ..... ..... .---- .---- ...-- ----. . . -.. . -... ---.. . ....- ..... .- .---- --... ..... -... ----- --... ---.. -....</code></p>\n<p>翻译出来是，再转成小写：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">F029BD6F551139EEDEB8E45A175B0786</span><br><span class=\"line\"></span><br><span class=\"line\">f029bd6f551139eedeb8e45a175b0786</span><br></pre></td></tr></table></figure>\n\n<p>套个flag头提交看看，结果就是flag，flag为：<code>flag&#123;f029bd6f551139eedeb8e45a175b0786&#125;</code>。</p>\n<h3 id=\"21-谁赢了比赛？\"><a href=\"#21-谁赢了比赛？\" class=\"headerlink\" title=\"21.谁赢了比赛？\"></a>21.谁赢了比赛？</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207195203651.png\" alt=\"image-20231207195203651\" data-caption=\"image-20231207195203651\" loading=\"lazy\">\n\n<p>题目下载下来是一个png图片，是一个棋谱：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207195254469.png\" alt=\"image-20231207195254469\" data-caption=\"image-20231207195254469\" loading=\"lazy\">\n\n<p>在010中看到了这个，貌似里面藏了一个<strong>flag.txt</strong>文件：</p>\n<p>![image-20231207195431073](BUU MISC第二页&#x2F;image-20231207195431073.png)</p>\n<p>binwalk分离出来一个rar文件，里面有一个加密的gif文件：</p>\n<p>![image-20231207195745064](BUU MISC第二页&#x2F;image-20231207195745064.png)</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207200019211.png\" alt=\"image-20231207200019211\" data-caption=\"image-20231207200019211\" loading=\"lazy\">\n\n<p>爆破出密码是<code>1020</code>，得到gif图，拆分一下</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207200225524.png\" alt=\"image-20231207200225524\" data-caption=\"image-20231207200225524\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207200405626.png\" alt=\"image-20231207200405626\" data-caption=\"image-20231207200405626\" loading=\"lazy\">\n\n<p>找到一个与众不同的图片，图片上有这一句话，说明还没结束：</p>\n<p>![image-20231207200452371](BUU MISC第二页&#x2F;image-20231207200452371.png)</p>\n<p>把这张图片扔进stegsolve，在Red 0通道发现有二维码：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207201125291.png\" alt=\"image-20231207201125291\" data-caption=\"image-20231207201125291\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207201214134.png\" alt=\"image-20231207201214134\" data-caption=\"image-20231207201214134\" loading=\"lazy\">\n\n<p>扫一下成功得到flag：<code>flag&#123;shanxiajingwu_won_the_game&#125;</code>。</p>\n<h3 id=\"22-WUSTCTF2020-find-me\"><a href=\"#22-WUSTCTF2020-find-me\" class=\"headerlink\" title=\"22.[WUSTCTF2020]find_me\"></a>22.[WUSTCTF2020]find_me</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207201323027.png\" alt=\"image-20231207201323027\" data-caption=\"image-20231207201323027\" loading=\"lazy\">\n\n<p>下下来就是一个jpg文件，查看属性发现盲文：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207201445968.png\" alt=\"image-20231207201445968\" data-caption=\"image-20231207201445968\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207201537387.png\" alt=\"image-20231207201537387\" data-caption=\"image-20231207201537387\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207201739356.png\" alt=\"image-20231207201739356\" data-caption=\"image-20231207201739356\" loading=\"lazy\">\n\n<p>用网站翻译得到flag：<code>flag&#123;y$0$u_f$1$n$d$_M$e$e$e$e$e&#125;</code>。</p>\n<h3 id=\"23-SWPU2019-我有一只马里奥\"><a href=\"#23-SWPU2019-我有一只马里奥\" class=\"headerlink\" title=\"23.[SWPU2019]我有一只马里奥\"></a>23.[SWPU2019]我有一只马里奥</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207202117408.png\" alt=\"image-20231207202117408\" data-caption=\"image-20231207202117408\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207202128334.png\" alt=\"image-20231207202128334\" data-caption=\"image-20231207202128334\" loading=\"lazy\">\n\n<p>运行发现多了一个<strong>1.txt</strong>文件，打开发现提示ntfs，即NTFS数据交换流。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207202214558.png\" alt=\"image-20231207202214558\" data-caption=\"image-20231207202214558\" loading=\"lazy\">\n\n<h4 id=\"什么是NTFS数据流？\"><a href=\"#什么是NTFS数据流？\" class=\"headerlink\" title=\"什么是NTFS数据流？\"></a>什么是NTFS数据流？</h4><blockquote>\n<p>NTFS交换数据流（alternate data streams，简称ADS）是NTFS磁盘格式的一个特性，在NTFS文件系统下，每个文件都可以存在多个数据流，就是说除了主文件流之外还可以有许多非主文件流寄宿在主文件流中。它使用资源派生来维持与文件相关的信息。————百度百科</p>\n</blockquote>\n<blockquote>\n<p>NTFS交换数据流（alternate data streams，简称ADS）是NTFS磁盘格式的一个特性，在NTFS文件系统下，每个文件都可以存在多个数据流，就是说除了主文件流之外还可以有许多非主文件流寄宿在主文件流中。它使用资源派生来维持与文件相关的信息，虽然我们无法看到数据流文件，但是它却是真实存在于我们的系统中的。创建一个数据交换流文件的方法很简单，命令为“宿主文件：准备与宿主文件关联的数据流文件”。————百度百科</p>\n</blockquote>\n<h4 id=\"NTFS数据流隐藏文件的方法和实例\"><a href=\"#NTFS数据流隐藏文件的方法和实例\" class=\"headerlink\" title=\"NTFS数据流隐藏文件的方法和实例\"></a>NTFS数据流隐藏文件的方法和实例</h4><p>创建一个数据交换流文件的方法，命令为“宿主文件：准备与宿主文件关联的数据流文件”。</p>\n<h5 id=\"1-单文件流隐藏\"><a href=\"#1-单文件流隐藏\" class=\"headerlink\" title=\"1.单文件流隐藏\"></a>1.单文件流隐藏</h5><p>先在F盘中新建一个空的文本文件，命名为m0re.txt，<br>创建一个NTFS数据流，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;i am a test&quot;</span> &gt; :m0re.txt</span><br></pre></td></tr></table></figure>\n\n<p>已经成功的隐藏信息，查看方式有两种<br>一种是使用windows自带的notepad查看，命令如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">notepad :m0re.txt</span><br></pre></td></tr></table></figure>\n\n<p>第二种方法是使用工具，<code>lads.exe</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lads.exe /S</span><br></pre></td></tr></table></figure>\n\n<p>扫描到这个文件存在NTFS数据流，然后用第一种方法显示出来。</p>\n<h5 id=\"2-关联文件流\"><a href=\"#2-关联文件流\" class=\"headerlink\" title=\"2.关联文件流\"></a>2.关联文件流</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;https://m0re.top&quot; &gt; lalala.txt:m0re.txt</span><br></pre></td></tr></table></figure>\n\n<p>此时的m0re.txt是宿主文件，将信息内容隐藏到宿主文件中了，直接打开lalala.txt:m0re.txt查看数据流文件</p>\n<p>这里需要注意的是这个不是将数据写入到文件中，而是创建了NTFS数据流，信息都在数据流当中。这个<code>lalala.txt:m0re.txt</code>就是创建的流文件。</p>\n<p>当然不止可以隐藏文本数据，还可以隐藏其他的文件，比如exe可执行文件，pyc文件等</p>\n<p>这里使用type命令，来隐藏文件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#隐藏图片到另一张图片中</span><br><span class=\"line\">type yincang.jpg &gt;yincang.jpg:suzhu.jpg</span><br><span class=\"line\"></span><br><span class=\"line\">#查看方式使用windows自带的mspaint.exe</span><br><span class=\"line\">mspaint.exe yincang.jpg:suzhu.jpg</span><br></pre></td></tr></table></figure>\n\n<p>那么在本题中，先将文件都放在同一个文件夹中，再输入这个指令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">notepad 1.txt:flag.txt</span><br></pre></td></tr></table></figure>\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207221841155.png\" alt=\"image-20231207221841155\" data-caption=\"image-20231207221841155\" loading=\"lazy\">\n\n<p>就能得到flag：<code>flag&#123;ddg_is_cute&#125;</code>。</p>\n<h3 id=\"24-GUET-CTF2019-KO\"><a href=\"#24-GUET-CTF2019-KO\" class=\"headerlink\" title=\"24.[GUET-CTF2019]KO\"></a>24.[GUET-CTF2019]KO</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231208135026442.png\" alt=\"image-20231208135026442\" data-caption=\"image-20231208135026442\" loading=\"lazy\">\n\n<p> 下载下来是Ook解密;</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook!</span><br><span class=\"line\">Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook!</span><br><span class=\"line\">Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class=\"line\">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook?</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class=\"line\">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook! Ook? Ook! Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class=\"line\">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook!</span><br><span class=\"line\">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook?</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class=\"line\">Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook!</span><br><span class=\"line\">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class=\"line\">Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class=\"line\">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class=\"line\">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook!</span><br><span class=\"line\">Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook.</span><br><span class=\"line\">Ook? Ook! Ook. Ook? Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook.</span><br><span class=\"line\">Ook? Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class=\"line\">Ook. Ook? Ook.</span><br></pre></td></tr></table></figure>\n\n<p>用在线网站翻译一下，得到：<code>welcome to CTF</code>，包上flag头，得到本题的flag：<code>flag&#123;welcome to CTF&#125;</code>。</p>\n<h3 id=\"25-GXYCTF2019-gakki\"><a href=\"#25-GXYCTF2019-gakki\" class=\"headerlink\" title=\"25.[GXYCTF2019]gakki\"></a>25.[GXYCTF2019]gakki</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231208140317860.png\" alt=\"image-20231208140317860\" data-caption=\"image-20231208140317860\" loading=\"lazy\">\n\n<p>下下来是一个jpg图片，放进010里面可以找到藏了rar文件：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231208140603455.png\" alt=\"image-20231208140603455\" data-caption=\"image-20231208140603455\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231208140756245.png\" alt=\"image-20231208140756245\" data-caption=\"image-20231208140756245\" loading=\"lazy\">\n\n<p>binwalk一下得到一个加密的rar压缩包，用工具爆出来密码<code>8864</code>：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231208141323096.png\" alt=\"image-20231208141323096\" data-caption=\"image-20231208141323096\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231208141521644.png\" alt=\"image-20231208141521644\" data-caption=\"image-20231208141521644\" loading=\"lazy\">\n\n<p>打开得到这样的一大坨密文：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231208141659361.png\" alt=\"image-20231208141659361\" data-caption=\"image-20231208141659361\" loading=\"lazy\">\n\n<p>没找到是啥加密，去搜了搜，发现是字频统计，用puzzlesolver工具做：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231208142144663.png\" alt=\"image-20231208142144663\" data-caption=\"image-20231208142144663\" loading=\"lazy\">\n\n<p>得到flag：<code>flag&#123;gaki_IsMyw1fe&#125;</code>。</p>\n<h3 id=\"26-ACTF新生赛2020-base64隐写\"><a href=\"#26-ACTF新生赛2020-base64隐写\" class=\"headerlink\" title=\"26.[ACTF新生赛2020]base64隐写\"></a>26.[ACTF新生赛2020]base64隐写</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209011036959.png\" alt=\"image-20231209011036959\" data-caption=\"image-20231209011036959\" loading=\"lazy\">\n\n<p>解压下来就是</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209011121881.png\" alt=\"image-20231209011121881\" data-caption=\"image-20231209011121881\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209011152563.png\" alt=\"image-20231209011152563\" data-caption=\"image-20231209011152563\" loading=\"lazy\">\n\n<p>上网找了base64隐写的脚本，个别的用gpt改了改能用了：</p>\n<h4 id=\"base64隐写脚本\"><a href=\"#base64隐写脚本\" class=\"headerlink\" title=\"base64隐写脚本\"></a>base64隐写脚本</h4><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_base64_diff_value</span>(<span class=\"params\">s1, s2</span>):</span><br><span class=\"line\">    base64chars = <span class=\"string\">b&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class=\"line\">    res = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(s2)):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> s1[i] != s2[i]:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">abs</span>(base64chars.index(s1[i:i+<span class=\"number\">1</span>]) - base64chars.index(s2[i:i+<span class=\"number\">1</span>]))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">solve_stego</span>():</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;ComeOn!.txt&#x27;</span>, <span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        file_lines = f.readlines()</span><br><span class=\"line\">        bin_str = <span class=\"string\">b&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> file_lines:</span><br><span class=\"line\">            steg_line = line.replace(<span class=\"string\">b&#x27;\\n&#x27;</span>, <span class=\"string\">b&#x27;&#x27;</span>)</span><br><span class=\"line\">            norm_line = base64.b64encode(base64.b64decode(steg_line)).replace(<span class=\"string\">b&#x27;\\n&#x27;</span>, <span class=\"string\">b&#x27;&#x27;</span>)</span><br><span class=\"line\">            diff = get_base64_diff_value(steg_line, norm_line)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(diff)</span><br><span class=\"line\">            pads_num = steg_line.count(<span class=\"string\">b&#x27;=&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> diff:</span><br><span class=\"line\">                bin_str += <span class=\"built_in\">bin</span>(diff)[<span class=\"number\">2</span>:].zfill(pads_num * <span class=\"number\">2</span>).encode()</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                bin_str += <span class=\"string\">b&#x27;0&#x27;</span> * pads_num * <span class=\"number\">2</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(goflag(bin_str))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">goflag</span>(<span class=\"params\">bin_str</span>):</span><br><span class=\"line\">    res_str = <span class=\"string\">b&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(bin_str), <span class=\"number\">8</span>):</span><br><span class=\"line\">        res_str += <span class=\"built_in\">bytes</span>([<span class=\"built_in\">int</span>(bin_str[i:i + <span class=\"number\">8</span>], <span class=\"number\">2</span>)])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res_str.decode()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    solve_stego()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\">b64chars = <span class=\"string\">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;ComeOn!.txt&#x27;</span>, <span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    bin_str = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> f.readlines():</span><br><span class=\"line\">        stegb64 = <span class=\"built_in\">str</span>(line, <span class=\"string\">&quot;utf-8&quot;</span>).strip(<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\">        rowb64 = <span class=\"built_in\">str</span>(base64.b64encode(base64.b64decode(stegb64)), <span class=\"string\">&quot;utf-8&quot;</span>).strip(<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\">        offset = <span class=\"built_in\">abs</span>(b64chars.index(stegb64.replace(<span class=\"string\">&#x27;=&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)[-<span class=\"number\">1</span>]) - b64chars.index(rowb64.replace(<span class=\"string\">&#x27;=&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)[-<span class=\"number\">1</span>]))</span><br><span class=\"line\">        equalnum = stegb64.count(<span class=\"string\">&#x27;=&#x27;</span>)  <span class=\"comment\"># no equalnum no offset</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> equalnum:</span><br><span class=\"line\">            bin_str += <span class=\"built_in\">bin</span>(offset)[<span class=\"number\">2</span>:].zfill(equalnum * <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>.join([<span class=\"built_in\">chr</span>(<span class=\"built_in\">int</span>(bin_str[i:i + <span class=\"number\">8</span>], <span class=\"number\">2</span>)) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(bin_str), <span class=\"number\">8</span>)]))</span><br></pre></td></tr></table></figure>\n\n<p>这两个脚本的功能是一样的，可以都存着。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209013048700.png\" alt=\"image-20231209013048700\" data-caption=\"image-20231209013048700\" loading=\"lazy\">\n\n<p>最后得到flag：<code>flag&#123;6aseb4_f33!&#125;</code>。</p>\n<h3 id=\"27-MRCTF2020-ezmisc\"><a href=\"#27-MRCTF2020-ezmisc\" class=\"headerlink\" title=\"27.[MRCTF2020]ezmisc\"></a>27.[MRCTF2020]ezmisc</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209011611589.png\" alt=\"image-20231209011611589\" data-caption=\"image-20231209011611589\" loading=\"lazy\">\n\n<p>下载下来得到一个png图片，用010打开的时候发现了CRC校验错误，估计宽高有问题，用工具一把梭：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209011700990.png\" alt=\"image-20231209011700990\" data-caption=\"image-20231209011700990\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209012049579.png\" alt=\"image-20231209012049579\" data-caption=\"image-20231209012049579\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209012139794.png\" alt=\"image-20231209012139794\" data-caption=\"image-20231209012139794\" loading=\"lazy\">\n\n<p>得到flag：<code>flag&#123;1ts_vEryyyyyy_ez!&#125;</code>。</p>\n<h3 id=\"28-HBNIS2018-caesar\"><a href=\"#28-HBNIS2018-caesar\" class=\"headerlink\" title=\"28.[HBNIS2018]caesar\"></a>28.[HBNIS2018]caesar</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209012303742.png\" alt=\"image-20231209012303742\" data-caption=\"image-20231209012303742\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209012523387.png\" alt=\"image-20231209012523387\" data-caption=\"image-20231209012523387\" loading=\"lazy\">\n\n<p>好像是凯撒密码，但是不知道偏移了多少位，只能穷举，没办法只能上网找脚本：</p>\n<h4 id=\"凯撒密码穷举脚本\"><a href=\"#凯撒密码穷举脚本\" class=\"headerlink\" title=\"凯撒密码穷举脚本\"></a>凯撒密码穷举脚本</h4><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">change</span>(<span class=\"params\">c,i</span>):</span><br><span class=\"line\">    num=<span class=\"built_in\">ord</span>(c)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(num&gt;=<span class=\"number\">33</span> <span class=\"keyword\">and</span> num&lt;=<span class=\"number\">126</span>):</span><br><span class=\"line\">        num=<span class=\"number\">33</span>+(num+i-<span class=\"number\">33</span>)%(<span class=\"number\">94</span>)<span class=\"comment\">#126-33=93</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">chr</span>(num)</span><br><span class=\"line\"> </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">kaisa_jiAmi</span>(<span class=\"params\">string,i</span>):</span><br><span class=\"line\">    string_new=<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> string:</span><br><span class=\"line\">        string_new+=change(s,i)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(string_new)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> string_new</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#本题有种暴力解密感觉</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">kaisa_jiEmi</span>(<span class=\"params\">string</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">94</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;第&#x27;</span>+<span class=\"built_in\">str</span>(i+<span class=\"number\">1</span>)+<span class=\"string\">&#x27;种可能:&#x27;</span>,end=<span class=\"string\">&#x27;  &#x27;</span>)</span><br><span class=\"line\">        <span class=\"comment\">#区别在于 string 是该对象原本就是字符串类型, 而 str()则是将该对象转换成字符串类型。</span></span><br><span class=\"line\">        kaisa_jiAmi(string,i)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#你要知道input输入的数据类型都是string  </span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;请输入操作，注意不是平常26种:&#x27;</span>)</span><br><span class=\"line\">    choice=<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;1:恺撒加密,2:凯撒穷举解密.请输入1或2：&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> choice==<span class=\"string\">&#x27;1&#x27;</span>:</span><br><span class=\"line\">        string=<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入需要加密字符串： &#x27;</span>)</span><br><span class=\"line\">        num=<span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入需要加密的KEY： &#x27;</span>))</span><br><span class=\"line\">        kaisa_jiAmi(string,num)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> choice==<span class=\"string\">&#x27;2&#x27;</span>:</span><br><span class=\"line\">        string=<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入需要解密字符串： &#x27;</span>)</span><br><span class=\"line\">        kaisa_jiEmi(string)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;输入错误，请重试&#x27;</span>)</span><br><span class=\"line\">        main()</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__==<span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209012740846.png\" alt=\"image-20231209012740846\" data-caption=\"image-20231209012740846\" loading=\"lazy\">\n\n<p>得到flag：<code>flag&#123;flagiscaesar&#125;</code>。</p>\n<h3 id=\"29-SWPU2019-伟大的侦探\"><a href=\"#29-SWPU2019-伟大的侦探\" class=\"headerlink\" title=\"29.[SWPU2019]伟大的侦探\"></a>29.[SWPU2019]伟大的侦探</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209100308231.png\" alt=\"image-20231209100308231\" data-caption=\"image-20231209100308231\" loading=\"lazy\">\n\n<p>下载下来得到一个压缩包，里面有密码提示和一组加密的图片：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209100928434.png\" alt=\"image-20231209100928434\" data-caption=\"image-20231209100928434\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209100935662.png\" alt=\"image-20231209100935662\" data-caption=\"image-20231209100935662\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209100947253.png\" alt=\"image-20231209100947253\" data-caption=\"image-20231209100947253\" loading=\"lazy\">\n\n<p>用010打开<strong>密码.txt</strong>，发现使用<code>EBCDIC</code>编码时，得到了<code>wllm_is_the_best_team!</code>，这个应该就是解压的密码。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209101119204.png\" alt=\"image-20231209101119204\" data-caption=\"image-20231209101119204\" loading=\"lazy\">\n\n<p>![image-20231209101148513](BUU MISC第二页&#x2F;image-20231209101148513.png)</p>\n<p>解压得到一组跳舞小人的图片，这个是<strong>福尔摩斯小人密码</strong></p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209101318319.png\" alt=\"image-20231209101318319\" data-caption=\"image-20231209101318319\" loading=\"lazy\">\n\n<p>对照密码表解出<code>iloveholmesandwllm</code>：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209101456458.png\" alt=\"image-20231209101456458\" data-caption=\"image-20231209101456458\" loading=\"lazy\">\n\n<p>flag为：<code>flag&#123;iloveholmesandwllm&#125;</code>。</p>\n<h3 id=\"30-黑客帝国\"><a href=\"#30-黑客帝国\" class=\"headerlink\" title=\"30.黑客帝国\"></a>30.黑客帝国</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209101820536.png\" alt=\"image-20231209101820536\" data-caption=\"image-20231209101820536\" loading=\"lazy\">\n\n<p>下载得到这样的一组数据：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209164924674.png\" alt=\"image-20231209164924674\" data-caption=\"image-20231209164924674\" loading=\"lazy\">\n\n<p>查看数据发现<code>526172211a070000</code>很像16进制数据，用winhex创建一个文件看看：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209170236676.png\" alt=\"image-20231209170236676\" data-caption=\"image-20231209170236676\" loading=\"lazy\">\n\n<p>是一个rar文件，这边有一个16进制转rar的脚本，也可以使用这个来得到rar：</p>\n<h4 id=\"16进制转rar\"><a href=\"#16进制转rar\" class=\"headerlink\" title=\"16进制转rar\"></a>16进制转rar</h4><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hex_to_rar</span>(<span class=\"params\">hex_string, output_file</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 将16进制字符串转换为bytes</span></span><br><span class=\"line\">    binary_data = <span class=\"built_in\">bytes</span>.fromhex(hex_string)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 将bytes写入RAR文件</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(output_file, <span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">        file.write(binary_data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 输入16进制字符串</span></span><br><span class=\"line\">    hex_data = <span class=\"string\">&quot;16进制字符串&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 指定输出RAR文件名</span></span><br><span class=\"line\">    output_file_name = <span class=\"string\">&quot;output.rar&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 调用函数进行转换</span></span><br><span class=\"line\">    hex_to_rar(hex_data, output_file_name)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;成功将16进制字符串转换为RAR文件: <span class=\"subst\">&#123;output_file_name&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>保存后打开发现是加密的，用工具爆破一下：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209170524315.png\" alt=\"image-20231209170524315\" data-caption=\"image-20231209170524315\" loading=\"lazy\">\n\n<p>得到密码<code>3690</code>打开得到一个损坏的png文件，应该是要修复：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209170630653.png\" alt=\"image-20231209170630653\" data-caption=\"image-20231209170630653\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209170749859.png\" alt=\"image-20231209170749859\" data-caption=\"image-20231209170749859\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209170721640.png\" alt=\"image-20231209170721640\" data-caption=\"image-20231209170721640\" loading=\"lazy\">\n\n<p>但是查看了文件头尾之后，发现这是一个jepg文件的文件头被改成了png，将<code>B9 50 4E 47</code>改成<code>FF D8 FF E0</code>，保存后得到正确的图片：</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209171124461.png\" alt=\"image-20231209171124461\" data-caption=\"image-20231209171124461\" loading=\"lazy\">\n\n<p>flag为：<code>flag&#123;57cd4cfd4e07505b98048ca106132125&#125;</code>。</p>\n<h3 id=\"31-HBNIS2018-低个头\"><a href=\"#31-HBNIS2018-低个头\" class=\"headerlink\" title=\"31.[HBNIS2018]低个头\"></a>31.[HBNIS2018]低个头</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209171406231.png\" alt=\"image-20231209171406231\" data-caption=\"image-20231209171406231\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209171448092.png\" alt=\"image-20231209171448092\" data-caption=\"image-20231209171448092\" loading=\"lazy\">\n\n<p>熟悉的感觉，是键盘加密，翻译一下得到明文：<code>CTF</code></p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209171933148.png\" alt=\"image-20231209171933148\" data-caption=\"image-20231209171933148\" loading=\"lazy\">\n\n<p>flag为：<code>flag&#123;CTF&#125;</code>。</p>\n<h3 id=\"32-MRCTF2020-你能看懂音符吗\"><a href=\"#32-MRCTF2020-你能看懂音符吗\" class=\"headerlink\" title=\"32.[MRCTF2020]你能看懂音符吗\"></a>32.[MRCTF2020]你能看懂音符吗</h3><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209172049261.png\" alt=\"image-20231209172049261\" data-caption=\"image-20231209172049261\" loading=\"lazy\">\n\n<p>题目下载下来的rar压缩包是坏的，打开发现文件头错了，修复一下</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209172213470.png\" alt=\"image-20231209172213470\" data-caption=\"image-20231209172213470\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209172415401.png\" alt=\"image-20231209172415401\" data-caption=\"image-20231209172415401\" loading=\"lazy\">\n\n<p>应该是把文字隐藏了，或者文字改为了白色，直接<code>cirl+a</code>选中所有文字，右键查看字体，果然是隐藏了。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209172524394.png\" alt=\"image-20231209172524394\" data-caption=\"image-20231209172524394\" loading=\"lazy\">\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209172550260.png\" alt=\"image-20231209172550260\" data-caption=\"image-20231209172550260\" loading=\"lazy\">\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">♭♯♪‖¶♬♭♭♪♭‖‖♭♭♬‖♫♪‖♩♬‖♬♬♭♭♫‖♩♫‖♬♪♭♭♭‖¶∮‖‖‖‖♩♬‖♬♪‖♩♫♭♭♭♭♭§‖♩♩♭♭♫♭♭♭‖♬♭‖¶§♭♭♯‖♫∮‖♬¶‖¶∮‖♬♫‖♫♬‖♫♫§=</span><br></pre></td></tr></table></figure>\n\n<p>用在线网站翻译一下得到flag。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209172641900.png\" alt=\"image-20231209172641900\" data-caption=\"image-20231209172641900\" loading=\"lazy\">\n\n<p>flag为：<code>flag&#123;thEse_n0tes_ArE_am@zing~&#125;</code>。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"BUU-MISC第二页\"><a href=\"#BUU-MISC第二页\" class=\"headerlink\" title=\"BUU MISC第二页\"></a>BUU MISC第二页</h1><h3 id=\"1-被劫持的神秘礼物\"><a href=\"#1-被劫持的神秘礼物\" class=\"headerlink\" title=\"1.被劫持的神秘礼物\"></a>1.被劫持的神秘礼物</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116195450524.png\" alt=\"image-20231116195450524\" style=\"zoom:67%;\">\n\n<p>这题是流量分析，上来先http过滤一下，这条比较可疑，追踪一下tcp流：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116195905524.png\" alt=\"image-20231116195905524\" style=\"zoom:67%;\">\n\n<p>![image-20231116195953609](BUU MISC第二页&#x2F;image-20231116195953609.png)</p>\n<p>根据题目所写，”找到帐号密码，串在一起，用32位小写MD5哈希一下得到的就是答案“，那么本题答案为：<code>adminaadminb</code>，拿去用32位MD5哈希一下：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116200756188.png\" alt=\"image-20231116200756188\" style=\"zoom:67%;\">\n\n<p>flag为：<code>flag&#123;1d240aafe21a86afc11f38a45b541a49&#125;</code>。</p>\n<h3 id=\"2-BJDCTF2020-认真你就输了\"><a href=\"#2-BJDCTF2020-认真你就输了\" class=\"headerlink\" title=\"2.[BJDCTF2020]认真你就输了\"></a>2.[BJDCTF2020]认真你就输了</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116201610324.png\" alt=\"image-20231116201610324\" style=\"zoom:67%;\">\n\n<p>下载下来是一个**.xls**文件，打开是这样，没有东西，用bandzip打开看看：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116202048077.png\" alt=\"image-20231116202048077\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116202136439.png\" alt=\"image-20231116202136439\" style=\"zoom:67%;\">\n\n<p>一顿翻找，找到了flag：<code>flag&#123;M9eVfi2Pcs#&#125;</code>。</p>\n<h3 id=\"3-BJDCTF2020-藏藏藏\"><a href=\"#3-BJDCTF2020-藏藏藏\" class=\"headerlink\" title=\"3.[BJDCTF2020]藏藏藏\"></a>3.[BJDCTF2020]藏藏藏</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116202242375.png\" alt=\"image-20231116202242375\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116202340218.png\" alt=\"image-20231116202340218\" style=\"zoom:67%;\">\n\n<p>下载下来是一个图片，先看看属性没问题，再用010看看，有压缩包：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116202652184.png\" alt=\"image-20231116202652184\" style=\"zoom:67%;\">\n\n<p>用kali，binwalk、foremost，得到压缩包：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116221127242.png\" alt=\"image-20231116221127242\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116221149333.png\" alt=\"image-20231116221149333\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231116221219237.png\" alt=\"image-20231116221219237\" style=\"zoom:67%;\">\n\n<p>打开得到二维码，扫一下得到本题的flag：<code>flag&#123;you are the best!&#125;</code>。</p>\n<h3 id=\"4-被偷走的文件\"><a href=\"#4-被偷走的文件\" class=\"headerlink\" title=\"4.被偷走的文件\"></a>4.被偷走的文件</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231125114517454.png\" alt=\"image-20231125114517454\" style=\"zoom:67%;\">\n\n<p>分析流量时找到了这条，将FTP过滤出来看看：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231125114555413.png\" alt=\"image-20231125114555413\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231125114810488.png\" alt=\"image-20231125114810488\" style=\"zoom:67%;\">\n\n<p>追踪看看，说明被偷走了<strong>flag.rar</strong>文件：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231125114834857.png\" alt=\"image-20231125114834857\" style=\"zoom:67%;\">\n\n<p>用foremost分离流量包看看：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231125115048235.png\" alt=\"image-20231125115048235\" style=\"zoom:67%;\">\n\n<p>成功得到一个加密的压缩包文件，尝试暴力破解：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231125115216084.png\" alt=\"image-20231125115216084\" style=\"zoom:67%;\">\n\n<p>发现是四位纯数字密码：<code>5790</code></p>\n<p>得到flag：<code>flag&#123;6fe99a5d03fb01f833ec3caa80358fa3&#125;</code>。</p>\n<h3 id=\"5-刷新过的图片\"><a href=\"#5-刷新过的图片\" class=\"headerlink\" title=\"5.刷新过的图片\"></a>5.刷新过的图片</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203190350284.png\" alt=\"image-20231203190350284\" style=\"zoom:67%;\">\n\n<p>键盘上的刷新键快捷键是F5,可以得知这题应该是F5隐写，上网找工具下载下来：<strong>F5-steganography-master</strong>，一开始怎么都用不起来，后来才发现是java版本的问题。</p>\n<h4 id=\"关于解决F5工具java版本问题的方法\"><a href=\"#关于解决F5工具java版本问题的方法\" class=\"headerlink\" title=\"关于解决F5工具java版本问题的方法\"></a>关于解决F5工具java版本问题的方法</h4><p>解决java版本问题的原文链接：<a href=\"https://blog.csdn.net/pythllc/article/details/128969843\">https://blog.csdn.net/pythllc/article/details/128969843</a></p>\n<p>因为java版本是kali自带的17.0.5的版本，使用F5-steganography会出现报错，网上找到的博客中介绍的解决办法是安装java11，小版本不影响，改一下教程里面的版本就行，我下到的版本为<strong>jdk-11.0.21_linux-x64_bin.tar.gz</strong>，所以教程经过小改动后是：</p>\n<p>1.下载好后，将压缩包移动到&#x2F;etc&#x2F;opt目录再进行解压</p>\n<p>2.移动压缩包至opt目录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv jdk-11.0.21_linux-x64_bin.tar.gz /etc/opt</span><br></pre></td></tr></table></figure>\n\n<p>3.移动好后切换至opt目录进行解压</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/opt</span><br></pre></td></tr></table></figure>\n\n<p>4.解压</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf jdk-11.0.21_linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>5.拷贝解压后Java文件夹至&#x2F;usr&#x2F;bin</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp -r jdk-11.0.21/ /usr/bin</span><br></pre></td></tr></table></figure>\n\n<p>6.安装并注册</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update-alternatives --install /usr/bin/java java /etc/opt/jdk-11.0.21/bin/java 1</span><br><span class=\"line\"></span><br><span class=\"line\">update-alternatives --install /usr/bin/javac javac /etc/opt/jdk-11.0.21/bin/javac 1</span><br><span class=\"line\"></span><br><span class=\"line\">update-alternatives --set java /etc/opt/jdk-11.0.21/bin/java</span><br><span class=\"line\"></span><br><span class=\"line\">update-alternatives --set javac /etc/opt/jdk-11.0.21/bin/javac</span><br></pre></td></tr></table></figure>\n\n<p>现在就可以正常使用F5工具了。</p>\n<h4 id=\"F5工具的使用\"><a href=\"#F5工具的使用\" class=\"headerlink\" title=\"F5工具的使用\"></a>F5工具的使用</h4><p>执行F5工具的命令为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java Extract /图片的绝对路径 [-p 密码] [-e 输出文件]</span><br></pre></td></tr></table></figure>\n\n<p>一般在CTF题目中，密码就是图片名字，本题并不需要输入密码</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203192026164.png\" alt=\"image-20231203192026164\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203192047884.png\" alt=\"image-20231203192047884\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203192100854.png\" alt=\"image-20231203192100854\" style=\"zoom:67%;\">\n\n<p>打开<strong>output.txt</strong>，发现PK开头，那这个应该是一个zip压缩包，改下后缀，发现文件被加密了，猜测是伪加密：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203192156470.png\" alt=\"image-20231203192156470\" style=\"zoom:67%;\">\n\n<p>拖进010看一眼，果然是伪加密，<code>01 00</code>改成<code>00 00</code>：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203192350491.png\" alt=\"image-20231203192350491\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203192447918.png\" alt=\"image-20231203192447918\" style=\"zoom:67%;\">\n\n<p>成功得到flag：<code>flag&#123;96efd0a2037d06f34199e921079778ee&#125;</code>。</p>\n<h3 id=\"6-GXYCTF2019-佛系青年\"><a href=\"#6-GXYCTF2019-佛系青年\" class=\"headerlink\" title=\"6.[GXYCTF2019]佛系青年\"></a>6.[GXYCTF2019]佛系青年</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203193202986.png\" alt=\"image-20231203193202986\" style=\"zoom:67%;\">\n\n<p>看题目就猜测是与佛论禅加密，下载下来发现压缩包里面被加密了,估计是伪加密：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203193314238.png\" alt=\"image-20231203193314238\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203193406311.png\" alt=\"image-20231203193406311\" style=\"zoom:67%;\">\n\n<p>果然是伪加密，把<code>09 00</code>改成<code>00 00</code>，成功解压出来：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203193508467.png\" alt=\"image-20231203193508467\" style=\"zoom:67%;\">\n\n<p>在网上找了几个与佛论禅的网站，最终找到是Bugku的可以成功解密：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203193558273.png\" alt=\"image-20231203193558273\" style=\"zoom:67%;\">\n\n<p>flag为：<code>flag&#123;w0_fo_ci_Be1&#125;</code>。</p>\n<h3 id=\"7-BJDCTF2020-你猜我是个啥\"><a href=\"#7-BJDCTF2020-你猜我是个啥\" class=\"headerlink\" title=\"7.[BJDCTF2020]你猜我是个啥\"></a>7.[BJDCTF2020]你猜我是个啥</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203193700775.png\" alt=\"image-20231203193700775\" style=\"zoom:67%;\">\n\n<p>下载下来是一个zip文件，但是用bandzip打开发现这个不是一个压缩包，用在线文件检查网站检查了一下，发现是个<strong>png</strong>文件</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203194054577.png\" alt=\"image-20231203194054577\" style=\"zoom:67%;\">\n\n<p>改完后缀给了一个二维码，扫看看：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203194139439.png\" alt=\"image-20231203194139439\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203194211872.png\" alt=\"image-20231203194211872\" style=\"zoom:67%;\">\n\n<p>哦？flag不在这里，用010看看，原来flag藏在这里啊：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203194305702.png\" alt=\"image-20231203194305702\" style=\"zoom:67%;\">\n\n<p>flag为：<code>flag&#123;i_am_fl@g&#125;</code>。</p>\n<h3 id=\"8-snake\"><a href=\"#8-snake\" class=\"headerlink\" title=\"8.snake\"></a>8.snake</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203194617231.png\" alt=\"image-20231203194617231\" style=\"zoom:67%;\">\n\n<p>下载下来是一张图片，用010看一眼，好家伙，有两个压缩包：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203194647200.png\" alt=\"image-20231203194647200\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203194837293.png\" alt=\"image-20231203194837293\" style=\"zoom:67%;\">\n\n<p>用binwalk分离：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203195200078.png\" alt=\"image-20231203195200078\" style=\"zoom:67%;\">\n\n<p>得到<strong>cipher</strong>和<strong>key</strong>两个文件，key里面是一段base64编码，翻译一下：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203195313506.png\" alt=\"image-20231203195313506\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203195411777.png\" alt=\"image-20231203195411777\" style=\"zoom:67%;\">\n\n<p><code>What is Nicki Minaj&#39;s favorite song that refers to snakes?</code>根据这段提示，搜索得知答案为<code>anaconda</code></p>\n<p>在网上搜索与蛇相关的加密算法，找到了<strong>Serpent加密</strong></p>\n<p>找到了这个在线解密网站：<a href=\"http://serpent.online-domain-tools.com/\">Serpent 加密 – 轻松加密或解密字符串或文件 (online-domain-tools.com)</a></p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203200040795.png\" alt=\"image-20231203200040795\" style=\"zoom:67%;\">\n\n<p>成功得到flag：<code>flag&#123;who_knew_serpent_cipher_existed&#125;</code>。</p>\n<h3 id=\"9-秘密文件\"><a href=\"#9-秘密文件\" class=\"headerlink\" title=\"9.秘密文件\"></a>9.秘密文件</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203201303694.png\" alt=\"image-20231203201303694\" style=\"zoom:67%;\">\n\n<p>猜测这题和之前那道<strong>被偷走的文件</strong>一样，先过滤一下<strong>ftp</strong>：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203201344531.png\" alt=\"image-20231203201344531\" style=\"zoom:67%;\">\n\n<p>看着就很可疑，追踪一下tcp流：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203201439351.png\" alt=\"image-20231203201439351\" style=\"zoom:67%;\">\n\n<p>找到被偷走的机密文件了，用kali去foremost分离一下：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203201654872.png\" alt=\"image-20231203201654872\" style=\"zoom:67%;\">\n\n<p>得到一个加密的压缩包，爆一下得到压缩包密码为：<code>1903</code></p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203201759058.png\" alt=\"image-20231203201759058\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203201833309.png\" alt=\"image-20231203201833309\" style=\"zoom:67%;\">\n\n<p>得到flag：<code>flag&#123;d72e5a671aa50fa5f400e5d10eedeaa5&#125;</code>。</p>\n<h3 id=\"10-BJDCTF2020-just-a-rar\"><a href=\"#10-BJDCTF2020-just-a-rar\" class=\"headerlink\" title=\"10.[BJDCTF2020]just_a_rar\"></a>10.[BJDCTF2020]just_a_rar</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203234818626.png\" alt=\"image-20231203234818626\" style=\"zoom:67%;\">\n\n<p>下载下来是一个加密的rar文件：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203234908095.png\" alt=\"image-20231203234908095\" style=\"zoom:67%;\">\n\n<p>根据提示，是四位纯数字密码，爆破一下得到密码为：<code>2016</code></p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203235021837.png\" alt=\"image-20231203235021837\" style=\"zoom:67%;\">\n\n<p>解压得到图片：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203235059836.png\" alt=\"image-20231203235059836\" style=\"zoom:67%;\">\n\n<p>第一步检查属性，结果直接找到了flag：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203235207075.png\" alt=\"image-20231203235207075\" style=\"zoom:67%;\">\n\n<p>flag为：<code>flag&#123;Wadf_123&#125;</code>。</p>\n<h3 id=\"11-BJDCTF2020-鸡你太美\"><a href=\"#11-BJDCTF2020-鸡你太美\" class=\"headerlink\" title=\"11.[BJDCTF2020]鸡你太美\"></a>11.[BJDCTF2020]鸡你太美</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203235306913.png\" alt=\"image-20231203235306913\" style=\"zoom:67%;\">\n\n<p>解压发现鸡哥的gif图：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203235419051.png\" alt=\"image-20231203235419051\" style=\"zoom:67%;\">\n\n<p>先拆分一下gif看看有没有暗藏玄鸡</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203235552446.png\" alt=\"image-20231203235552446\" style=\"zoom:67%;\">\n\n<p>![image-20231203235603898](BUU MISC第二页&#x2F;image-20231203235603898.png)</p>\n<p>整整200帧居然没藏东西，看看篮球副本，好像坏了打不开，用010看看发现好像少文件头</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231203235950197.png\" alt=\"image-20231203235950197\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204000002248.png\" alt=\"image-20231204000002248\" style=\"zoom:67%;\">\n\n<p>给他补全看看：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204000213007.png\" alt=\"image-20231204000213007\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204000229830.png\" alt=\"image-20231204000229830\" style=\"zoom:67%;\">\n\n<p>得到flag：<code>flag&#123;zhi-yin-you-are-beautiful&#125;</code>，但是发现交上去不对，查了wp发现buu上的flag是：<code>flag&#123;zhi_yin_you_are_beautiful&#125;</code>。</p>\n<h3 id=\"12-菜刀666\"><a href=\"#12-菜刀666\" class=\"headerlink\" title=\"12.菜刀666\"></a>12.菜刀666</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204000656325.png\" alt=\"image-20231204000656325\" style=\"zoom:67%;\">\n\n<p>这题是流量分析，看了半天没办法，去参考wp了。</p>\n<p>先过滤<strong>POST</strong>的包：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http.request.method==POST</span><br></pre></td></tr></table></figure>\n\n<p>在<strong>tcp.stream eq 7</strong>中发现了大量的数据</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204001906241.png\" alt=\"image-20231204001906241\" style=\"zoom:67%;\">\n\n<p><code>FF D8</code>开头<code>FF D9</code>结尾，判断为<code>jpg</code>图片，将这些十六进制复制出来，以原始文件流写入文件：</p>\n<h5 id=\"16进制转jpg图片\"><a href=\"#16进制转jpg图片\" class=\"headerlink\" title=\"16进制转jpg图片\"></a>16进制转jpg图片</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Author: MoChu7</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> struct</span><br><span class=\"line\"></span><br><span class=\"line\">a = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;str.txt&quot;</span>,<span class=\"string\">&quot;r&quot;</span>)<span class=\"comment\">#十六进制数据文件</span></span><br><span class=\"line\">lines = a.read()</span><br><span class=\"line\">res = [lines[i:i+<span class=\"number\">2</span>] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"built_in\">len</span>(lines),<span class=\"number\">2</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;res.jpg&quot;</span>,<span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">\t\ts = struct.pack(<span class=\"string\">&#x27;B&#x27;</span>,<span class=\"built_in\">int</span>(i,<span class=\"number\">16</span>))</span><br><span class=\"line\">\t\tf.write(s)</span><br></pre></td></tr></table></figure>\n\n<p>得到图片：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204002400611.png\" alt=\"image-20231204002400611\" style=\"zoom:67%;\">\n\n<p>这是一个密码，那么还会有个压缩包，在这段流中找到一个<strong>hello.zip</strong>压缩包，foremost分离一下流量包：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204002452504.png\" alt=\"image-20231204002452504\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204002850837.png\" alt=\"image-20231204002850837\" style=\"zoom:67%;\">\n\n<p>输入密码：<code>Th1s_1s_p4sswd_!!!</code></p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204003047862.png\" alt=\"image-20231204003047862\" style=\"zoom:67%;\">\n\n<p>得到flag：<code>flag&#123;3OpWdJ-JP6FzK-koCMAK-VkfWBq-75Un2z&#125;</code>。</p>\n<h3 id=\"13-BJDCTF2020-一叶障目\"><a href=\"#13-BJDCTF2020-一叶障目\" class=\"headerlink\" title=\"13.[BJDCTF2020]一叶障目\"></a>13.[BJDCTF2020]一叶障目</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204190453001.png\" alt=\"image-20231204190453001\" style=\"zoom:67%;\">\n\n<p>下载解压就是一张图片，拖进010看看：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204190517609.png\" alt=\"image-20231204190517609\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204190542422.png\" alt=\"image-20231204190542422\" style=\"zoom:67%;\">\n\n<p>发现报错说crc不对，那应该是crc不正确，用工具爆破一下：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204190628126.png\" alt=\"image-20231204190628126\" style=\"zoom:67%;\">\n\n<p>直接得到flag：<code>flag&#123;66666&#125;</code>。</p>\n<h3 id=\"14-SWPU2019-神奇的二维码\"><a href=\"#14-SWPU2019-神奇的二维码\" class=\"headerlink\" title=\"14.[SWPU2019]神奇的二维码\"></a>14.[SWPU2019]神奇的二维码</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204190948248.png\" alt=\"image-20231204190948248\" style=\"zoom:67%;\">\n\n<p>这题下载下来是一个二维码，先拖进010看看，发现没东西，扫码看看：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204191213913.png\" alt=\"image-20231204191213913\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204191302186.png\" alt=\"image-20231204191302186\" style=\"zoom:67%;\">\n\n<p>flag不在这里，拖进kali里面binwalk看看，得到这些东西：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204191340102.png\" alt=\"image-20231204191340102\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204191408741.png\" alt=\"image-20231204191408741\" style=\"zoom:67%;\">\n\n<p>这是一段base64加密，解密得到：<code>asdfghjkl1234567890</code></p>\n<p>发现是那个加密的压缩包里面<strong>flag.jpg</strong>文件的密码，kali直接给我图片搞出来了，看看word文档：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204191629040.png\" alt=\"image-20231204191629040\" style=\"zoom:67%;\">\n\n<p>超大一坨，猜测base64多次加密，试试：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204191844688.png\" alt=\"image-20231204191844688\" style=\"zoom:67%;\">\n\n<p>我靠，base64加密了20层，以为得到flag：<code>flag&#123;comEON_YOuAreSOSoS0great&#125;</code>。错了！回头发现压缩包里面还有个音频文件，原来得到的&#96;&#96;comEON_YOuAreSOSoS0great&#96;是这个压缩包的密码，听了发现是摩斯密码：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204192355168.png\" alt=\"image-20231204192355168\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204192520360.png\" alt=\"image-20231204192520360\" style=\"zoom:67%;\">\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- --- .-. ... . .. ... ...- . .-. -.-- ...- . .-. -.-- . .- ... -.--</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204193006361.png\" alt=\"image-20231204193006361\" style=\"zoom:67%;\">\n\n<p>这边要都转成小写才是正确的flag：<code>flag&#123;morseisveryveryeasy&#125;</code>。</p>\n<h3 id=\"15-BJDCTF2020-纳尼\"><a href=\"#15-BJDCTF2020-纳尼\" class=\"headerlink\" title=\"15.[BJDCTF2020]纳尼\"></a>15.[BJDCTF2020]纳尼</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204193210939.png\" alt=\"image-20231204193210939\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204193242805.png\" alt=\"image-20231204193242805\" style=\"zoom:67%;\">\n\n<p>打开发现gif图打不开，根据之前写的一题，猜测是修复文件头，用010看看，果然是：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204193356600.png\" alt=\"image-20231204193356600\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204193508018.png\" alt=\"image-20231204193508018\" style=\"zoom:67%;\">\n\n<p>修好打开一看，gif图里面每帧都是一段base64的部分，拆开发现总共4帧，提取文字汇总一下：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204193715022.png\" alt=\"image-20231204193715022\" style=\"zoom:67%;\">\n\n<p>得到：<code>Q1RGe3dhbmdfYmFvX3FpYW5nX2lzX3NhZH0=</code>，解密得到flag：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204193959516.png\" alt=\"image-20231204193959516\" style=\"zoom:67%;\">\n\n<p>flag为：<code>flag&#123;wang_bao_qiang_is_sad&#125;</code>。</p>\n<h3 id=\"16-梅花香之苦寒来\"><a href=\"#16-梅花香之苦寒来\" class=\"headerlink\" title=\"16.梅花香之苦寒来\"></a>16.梅花香之苦寒来</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204194155541.png\" alt=\"image-20231204194155541\" style=\"zoom:67%;\">\n\n<p>下载下来是一个图片，按照惯例看看属性：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204194247971.png\" alt=\"image-20231204194247971\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204194313711.png\" alt=\"image-20231204194313711\" style=\"zoom:67%;\">\n\n<p>有提示？拖进kali没找到东西，用010看看：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204194827296.png\" alt=\"image-20231204194827296\" style=\"zoom:67%;\">\n\n<p>发现在文件后面藏了大量数据，感觉像<strong>菜刀666</strong>那题，这些应该也是16进制数据，需要脚本，上网搜wp，这是转换的脚本：</p>\n<h5 id=\"16进制转字符串\"><a href=\"#16进制转字符串\" class=\"headerlink\" title=\"16进制转字符串\"></a>16进制转字符串</h5><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;hex.txt&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> h:     <span class=\"comment\"># hex.txt为要转换的文本文件</span></span><br><span class=\"line\">    val = h.read()</span><br><span class=\"line\">    h.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;result.txt&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> re: <span class=\"comment\"># 转换完成后写入result.txt</span></span><br><span class=\"line\">    tem = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(val), <span class=\"number\">2</span>):</span><br><span class=\"line\">        tem = <span class=\"string\">&#x27;0x&#x27;</span> + val[i] + val[i+<span class=\"number\">1</span>]</span><br><span class=\"line\">        tem = <span class=\"built_in\">int</span>(tem, base=<span class=\"number\">16</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"built_in\">chr</span>(tem), end=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">        re.write(<span class=\"built_in\">chr</span>(tem))</span><br><span class=\"line\">    re.close()</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204195602509.png\" alt=\"image-20231204195602509\" style=\"zoom:67%;\">\n\n<p>得到一堆坐标，需要画图，用matplotlib画图片，脚本为：</p>\n<h5 id=\"二维坐标画图\"><a href=\"#二维坐标画图\" class=\"headerlink\" title=\"二维坐标画图\"></a>二维坐标画图</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 逐行读取文件，去除括号并分割数值</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;result.txt&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">    data = [line.strip(<span class=\"string\">&#x27;()\\n&#x27;</span>).split(<span class=\"string\">&#x27;,&#x27;</span>) <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> file]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将字符串值转换为浮点数</span></span><br><span class=\"line\">x, y = np.array(data, dtype=<span class=\"built_in\">float</span>).T</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制数据图</span></span><br><span class=\"line\">plt.plot(x, y, <span class=\"string\">&#x27;.&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<p>得到二维码：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204211343476.png\" alt=\"image-20231204211343476\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231204211456819.png\" alt=\"image-20231204211456819\" style=\"zoom:67%;\">\n\n<p>得到flag：<code>flag&#123;40fc0a979f759c8892f4dc045e28b820&#125;</code>。</p>\n<h3 id=\"17-HBNIS2018-excel破解\"><a href=\"#17-HBNIS2018-excel破解\" class=\"headerlink\" title=\"17.[HBNIS2018]excel破解\"></a>17.[HBNIS2018]excel破解</h3><p><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/Users\\48956\\AppData\\Roaming\\Typora\\typora-user-images\\image-20231207190639195.png\" alt=\"image-20231207190639195\"></p>\n<p>下载下来是一个<strong>xls</strong>文件，被加密了打不开，改成<strong>zip</strong>用010打开，搜索flag，结果直接找到了：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/Users\\48956\\AppData\\Roaming\\Typora\\typora-user-images\\image-20231207191246922.png\" alt=\"image-20231207191246922\" style=\"zoom:67%;\">\n\n<p>flag为：<code>flag&#123;office_easy_cracked&#125;</code>。</p>\n<h3 id=\"18-HBNIS2018-来题中等的吧\"><a href=\"#18-HBNIS2018-来题中等的吧\" class=\"headerlink\" title=\"18.[HBNIS2018]来题中等的吧\"></a>18.[HBNIS2018]来题中等的吧</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207191425076.png\" alt=\"image-20231207191425076\" style=\"zoom:67%;\">\n\n<p>这题下下来解压得到一个png</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207191452348.png\" alt=\"image-20231207191452348\" style=\"zoom:67%;\">\n\n<p>像摩斯密码，翻译一下是<code>.- .-.. .--. .... .- .-.. .- -...</code>，在线翻译出来是：<code>ALPHALAB</code>，用各种方法查了一遍图片，好像没东西了。</p>\n<p>万一是flag呢？转换成小写提交看看：<code>flag&#123;alphalab&#125;</code>，还真是。</p>\n<h3 id=\"19-ACTF新生赛2020-outguess\"><a href=\"#19-ACTF新生赛2020-outguess\" class=\"headerlink\" title=\"19.[ACTF新生赛2020]outguess\"></a>19.[ACTF新生赛2020]outguess</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207192019538.png\" alt=\"image-20231207192019538\" style=\"zoom:67%;\">\n\n<p>下载下来解压得到：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207192129749.png\" alt=\"image-20231207192129749\" style=\"zoom:67%;\">\n\n<p>查看图片属性时发现备注应该是社会主义核心价值观加密：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207192155042.png\" alt=\"image-20231207192155042\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207192302627.png\" alt=\"image-20231207192302627\" style=\"zoom:67%;\">\n\n<p>解密得到：<code>abc</code></p>\n<p>模仿上题尝试提交看看，果然不对，回头搜搜guess是啥，找到一个工具叫<strong>outguess</strong>。</p>\n<h4 id=\"使用outguess\"><a href=\"#使用outguess\" class=\"headerlink\" title=\"使用outguess\"></a>使用outguess</h4><p>输入outguess -help即可获得相关命令。</p>\n<p><strong>注意在windows里面需要加<code>&quot; &quot;</code>而在Linux里面不需要</strong></p>\n<ul>\n<li>加密：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outguess -k “my secret key” -d hidden.txt demo.jpg out.jpg</span><br></pre></td></tr></table></figure>\n<p>加密之后，demo.jpg会覆盖out.jpg，hidden.txt的内容是要隐藏的东西。</p>\n<ul>\n<li>解密：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outguess -k “my secret key” -r out.jpg hidden.txt</span><br></pre></td></tr></table></figure>\n\n<p>解密之后，紧密内容放在hidden.txt中。</p>\n<p>之前解密出来的<strong>abc</strong>应该就是<strong>key</strong>，那么本题的指令就是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outguess -k abc -r mmm.jpg hidden.txt</span><br></pre></td></tr></table></figure>\n\n<p>得到flag：<code>flag&#123;gue33_Gu3Ss!2020&#125;</code>。</p>\n<h3 id=\"20-穿越时空的思念\"><a href=\"#20-穿越时空的思念\" class=\"headerlink\" title=\"20.穿越时空的思念\"></a>20.穿越时空的思念</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207194219079.png\" alt=\"image-20231207194219079\" style=\"zoom:67%;\">\n\n<p>下载下来是一个mp3文件，用audacity打开看看，里面好像有段摩斯：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207194435380.png\" alt=\"image-20231207194435380\" style=\"zoom:67%;\">\n\n<p><code>..-. ----- ..--- ----. -... -.. -.... ..-. ..... ..... .---- .---- ...-- ----. . . -.. . -... ---.. . ....- ..... .- .---- --... ..... -... ----- --... ---.. -....</code></p>\n<p>翻译出来是，再转成小写：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">F029BD6F551139EEDEB8E45A175B0786</span><br><span class=\"line\"></span><br><span class=\"line\">f029bd6f551139eedeb8e45a175b0786</span><br></pre></td></tr></table></figure>\n\n<p>套个flag头提交看看，结果就是flag，flag为：<code>flag&#123;f029bd6f551139eedeb8e45a175b0786&#125;</code>。</p>\n<h3 id=\"21-谁赢了比赛？\"><a href=\"#21-谁赢了比赛？\" class=\"headerlink\" title=\"21.谁赢了比赛？\"></a>21.谁赢了比赛？</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207195203651.png\" alt=\"image-20231207195203651\" style=\"zoom:67%;\">\n\n<p>题目下载下来是一个png图片，是一个棋谱：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207195254469.png\" alt=\"image-20231207195254469\" style=\"zoom: 67%;\">\n\n<p>在010中看到了这个，貌似里面藏了一个<strong>flag.txt</strong>文件：</p>\n<p>![image-20231207195431073](BUU MISC第二页&#x2F;image-20231207195431073.png)</p>\n<p>binwalk分离出来一个rar文件，里面有一个加密的gif文件：</p>\n<p>![image-20231207195745064](BUU MISC第二页&#x2F;image-20231207195745064.png)</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207200019211.png\" alt=\"image-20231207200019211\" style=\"zoom:67%;\">\n\n<p>爆破出密码是<code>1020</code>，得到gif图，拆分一下</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207200225524.png\" alt=\"image-20231207200225524\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207200405626.png\" alt=\"image-20231207200405626\" style=\"zoom:50%;\">\n\n<p>找到一个与众不同的图片，图片上有这一句话，说明还没结束：</p>\n<p>![image-20231207200452371](BUU MISC第二页&#x2F;image-20231207200452371.png)</p>\n<p>把这张图片扔进stegsolve，在Red 0通道发现有二维码：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207201125291.png\" alt=\"image-20231207201125291\" style=\"zoom: 67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207201214134.png\" alt=\"image-20231207201214134\" style=\"zoom:67%;\">\n\n<p>扫一下成功得到flag：<code>flag&#123;shanxiajingwu_won_the_game&#125;</code>。</p>\n<h3 id=\"22-WUSTCTF2020-find-me\"><a href=\"#22-WUSTCTF2020-find-me\" class=\"headerlink\" title=\"22.[WUSTCTF2020]find_me\"></a>22.[WUSTCTF2020]find_me</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207201323027.png\" alt=\"image-20231207201323027\" style=\"zoom:67%;\">\n\n<p>下下来就是一个jpg文件，查看属性发现盲文：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207201445968.png\" alt=\"image-20231207201445968\" style=\"zoom: 67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207201537387.png\" alt=\"image-20231207201537387\" style=\"zoom: 67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207201739356.png\" alt=\"image-20231207201739356\" style=\"zoom:67%;\">\n\n<p>用网站翻译得到flag：<code>flag&#123;y$0$u_f$1$n$d$_M$e$e$e$e$e&#125;</code>。</p>\n<h3 id=\"23-SWPU2019-我有一只马里奥\"><a href=\"#23-SWPU2019-我有一只马里奥\" class=\"headerlink\" title=\"23.[SWPU2019]我有一只马里奥\"></a>23.[SWPU2019]我有一只马里奥</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207202117408.png\" alt=\"image-20231207202117408\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207202128334.png\" alt=\"image-20231207202128334\" style=\"zoom:67%;\">\n\n<p>运行发现多了一个<strong>1.txt</strong>文件，打开发现提示ntfs，即NTFS数据交换流。</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207202214558.png\" alt=\"image-20231207202214558\" style=\"zoom:67%;\">\n\n<h4 id=\"什么是NTFS数据流？\"><a href=\"#什么是NTFS数据流？\" class=\"headerlink\" title=\"什么是NTFS数据流？\"></a>什么是NTFS数据流？</h4><blockquote>\n<p>NTFS交换数据流（alternate data streams，简称ADS）是NTFS磁盘格式的一个特性，在NTFS文件系统下，每个文件都可以存在多个数据流，就是说除了主文件流之外还可以有许多非主文件流寄宿在主文件流中。它使用资源派生来维持与文件相关的信息。————百度百科</p>\n</blockquote>\n<blockquote>\n<p>NTFS交换数据流（alternate data streams，简称ADS）是NTFS磁盘格式的一个特性，在NTFS文件系统下，每个文件都可以存在多个数据流，就是说除了主文件流之外还可以有许多非主文件流寄宿在主文件流中。它使用资源派生来维持与文件相关的信息，虽然我们无法看到数据流文件，但是它却是真实存在于我们的系统中的。创建一个数据交换流文件的方法很简单，命令为“宿主文件：准备与宿主文件关联的数据流文件”。————百度百科</p>\n</blockquote>\n<h4 id=\"NTFS数据流隐藏文件的方法和实例\"><a href=\"#NTFS数据流隐藏文件的方法和实例\" class=\"headerlink\" title=\"NTFS数据流隐藏文件的方法和实例\"></a>NTFS数据流隐藏文件的方法和实例</h4><p>创建一个数据交换流文件的方法，命令为“宿主文件：准备与宿主文件关联的数据流文件”。</p>\n<h5 id=\"1-单文件流隐藏\"><a href=\"#1-单文件流隐藏\" class=\"headerlink\" title=\"1.单文件流隐藏\"></a>1.单文件流隐藏</h5><p>先在F盘中新建一个空的文本文件，命名为m0re.txt，<br>创建一个NTFS数据流，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;i am a test&quot;</span> &gt; :m0re.txt</span><br></pre></td></tr></table></figure>\n\n<p>已经成功的隐藏信息，查看方式有两种<br>一种是使用windows自带的notepad查看，命令如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">notepad :m0re.txt</span><br></pre></td></tr></table></figure>\n\n<p>第二种方法是使用工具，<code>lads.exe</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lads.exe /S</span><br></pre></td></tr></table></figure>\n\n<p>扫描到这个文件存在NTFS数据流，然后用第一种方法显示出来。</p>\n<h5 id=\"2-关联文件流\"><a href=\"#2-关联文件流\" class=\"headerlink\" title=\"2.关联文件流\"></a>2.关联文件流</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;https://m0re.top&quot; &gt; lalala.txt:m0re.txt</span><br></pre></td></tr></table></figure>\n\n<p>此时的m0re.txt是宿主文件，将信息内容隐藏到宿主文件中了，直接打开lalala.txt:m0re.txt查看数据流文件</p>\n<p>这里需要注意的是这个不是将数据写入到文件中，而是创建了NTFS数据流，信息都在数据流当中。这个<code>lalala.txt:m0re.txt</code>就是创建的流文件。</p>\n<p>当然不止可以隐藏文本数据，还可以隐藏其他的文件，比如exe可执行文件，pyc文件等</p>\n<p>这里使用type命令，来隐藏文件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#隐藏图片到另一张图片中</span><br><span class=\"line\">type yincang.jpg &gt;yincang.jpg:suzhu.jpg</span><br><span class=\"line\"></span><br><span class=\"line\">#查看方式使用windows自带的mspaint.exe</span><br><span class=\"line\">mspaint.exe yincang.jpg:suzhu.jpg</span><br></pre></td></tr></table></figure>\n\n<p>那么在本题中，先将文件都放在同一个文件夹中，再输入这个指令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">notepad 1.txt:flag.txt</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231207221841155.png\" alt=\"image-20231207221841155\" style=\"zoom:67%;\">\n\n<p>就能得到flag：<code>flag&#123;ddg_is_cute&#125;</code>。</p>\n<h3 id=\"24-GUET-CTF2019-KO\"><a href=\"#24-GUET-CTF2019-KO\" class=\"headerlink\" title=\"24.[GUET-CTF2019]KO\"></a>24.[GUET-CTF2019]KO</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231208135026442.png\" alt=\"image-20231208135026442\" style=\"zoom:67%;\">\n\n<p> 下载下来是Ook解密;</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook!</span><br><span class=\"line\">Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook!</span><br><span class=\"line\">Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class=\"line\">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook?</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class=\"line\">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook! Ook? Ook! Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class=\"line\">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook!</span><br><span class=\"line\">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook?</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class=\"line\">Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook!</span><br><span class=\"line\">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class=\"line\">Ook? Ook. Ook? Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class=\"line\">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class=\"line\">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook!</span><br><span class=\"line\">Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook.</span><br><span class=\"line\">Ook? Ook! Ook. Ook? Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook.</span><br><span class=\"line\">Ook. Ook! Ook? Ook! Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook? Ook.</span><br><span class=\"line\">Ook? Ook! Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span><br><span class=\"line\">Ook. Ook? Ook.</span><br></pre></td></tr></table></figure>\n\n<p>用在线网站翻译一下，得到：<code>welcome to CTF</code>，包上flag头，得到本题的flag：<code>flag&#123;welcome to CTF&#125;</code>。</p>\n<h3 id=\"25-GXYCTF2019-gakki\"><a href=\"#25-GXYCTF2019-gakki\" class=\"headerlink\" title=\"25.[GXYCTF2019]gakki\"></a>25.[GXYCTF2019]gakki</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231208140317860.png\" alt=\"image-20231208140317860\" style=\"zoom:67%;\">\n\n<p>下下来是一个jpg图片，放进010里面可以找到藏了rar文件：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231208140603455.png\" alt=\"image-20231208140603455\" style=\"zoom: 67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231208140756245.png\" alt=\"image-20231208140756245\" style=\"zoom:67%;\">\n\n<p>binwalk一下得到一个加密的rar压缩包，用工具爆出来密码<code>8864</code>：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231208141323096.png\" alt=\"image-20231208141323096\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231208141521644.png\" alt=\"image-20231208141521644\" style=\"zoom:67%;\">\n\n<p>打开得到这样的一大坨密文：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231208141659361.png\" alt=\"image-20231208141659361\" style=\"zoom:67%;\">\n\n<p>没找到是啥加密，去搜了搜，发现是字频统计，用puzzlesolver工具做：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231208142144663.png\" alt=\"image-20231208142144663\" style=\"zoom:67%;\">\n\n<p>得到flag：<code>flag&#123;gaki_IsMyw1fe&#125;</code>。</p>\n<h3 id=\"26-ACTF新生赛2020-base64隐写\"><a href=\"#26-ACTF新生赛2020-base64隐写\" class=\"headerlink\" title=\"26.[ACTF新生赛2020]base64隐写\"></a>26.[ACTF新生赛2020]base64隐写</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209011036959.png\" alt=\"image-20231209011036959\" style=\"zoom:67%;\">\n\n<p>解压下来就是</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209011121881.png\" alt=\"image-20231209011121881\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209011152563.png\" alt=\"image-20231209011152563\" style=\"zoom: 67%;\">\n\n<p>上网找了base64隐写的脚本，个别的用gpt改了改能用了：</p>\n<h4 id=\"base64隐写脚本\"><a href=\"#base64隐写脚本\" class=\"headerlink\" title=\"base64隐写脚本\"></a>base64隐写脚本</h4><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_base64_diff_value</span>(<span class=\"params\">s1, s2</span>):</span><br><span class=\"line\">    base64chars = <span class=\"string\">b&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class=\"line\">    res = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(s2)):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> s1[i] != s2[i]:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">abs</span>(base64chars.index(s1[i:i+<span class=\"number\">1</span>]) - base64chars.index(s2[i:i+<span class=\"number\">1</span>]))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">solve_stego</span>():</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;ComeOn!.txt&#x27;</span>, <span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        file_lines = f.readlines()</span><br><span class=\"line\">        bin_str = <span class=\"string\">b&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> file_lines:</span><br><span class=\"line\">            steg_line = line.replace(<span class=\"string\">b&#x27;\\n&#x27;</span>, <span class=\"string\">b&#x27;&#x27;</span>)</span><br><span class=\"line\">            norm_line = base64.b64encode(base64.b64decode(steg_line)).replace(<span class=\"string\">b&#x27;\\n&#x27;</span>, <span class=\"string\">b&#x27;&#x27;</span>)</span><br><span class=\"line\">            diff = get_base64_diff_value(steg_line, norm_line)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(diff)</span><br><span class=\"line\">            pads_num = steg_line.count(<span class=\"string\">b&#x27;=&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> diff:</span><br><span class=\"line\">                bin_str += <span class=\"built_in\">bin</span>(diff)[<span class=\"number\">2</span>:].zfill(pads_num * <span class=\"number\">2</span>).encode()</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                bin_str += <span class=\"string\">b&#x27;0&#x27;</span> * pads_num * <span class=\"number\">2</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(goflag(bin_str))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">goflag</span>(<span class=\"params\">bin_str</span>):</span><br><span class=\"line\">    res_str = <span class=\"string\">b&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(bin_str), <span class=\"number\">8</span>):</span><br><span class=\"line\">        res_str += <span class=\"built_in\">bytes</span>([<span class=\"built_in\">int</span>(bin_str[i:i + <span class=\"number\">8</span>], <span class=\"number\">2</span>)])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res_str.decode()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    solve_stego()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\">b64chars = <span class=\"string\">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;ComeOn!.txt&#x27;</span>, <span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    bin_str = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> f.readlines():</span><br><span class=\"line\">        stegb64 = <span class=\"built_in\">str</span>(line, <span class=\"string\">&quot;utf-8&quot;</span>).strip(<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\">        rowb64 = <span class=\"built_in\">str</span>(base64.b64encode(base64.b64decode(stegb64)), <span class=\"string\">&quot;utf-8&quot;</span>).strip(<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\">        offset = <span class=\"built_in\">abs</span>(b64chars.index(stegb64.replace(<span class=\"string\">&#x27;=&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)[-<span class=\"number\">1</span>]) - b64chars.index(rowb64.replace(<span class=\"string\">&#x27;=&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)[-<span class=\"number\">1</span>]))</span><br><span class=\"line\">        equalnum = stegb64.count(<span class=\"string\">&#x27;=&#x27;</span>)  <span class=\"comment\"># no equalnum no offset</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> equalnum:</span><br><span class=\"line\">            bin_str += <span class=\"built_in\">bin</span>(offset)[<span class=\"number\">2</span>:].zfill(equalnum * <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>.join([<span class=\"built_in\">chr</span>(<span class=\"built_in\">int</span>(bin_str[i:i + <span class=\"number\">8</span>], <span class=\"number\">2</span>)) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(bin_str), <span class=\"number\">8</span>)]))</span><br></pre></td></tr></table></figure>\n\n<p>这两个脚本的功能是一样的，可以都存着。</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209013048700.png\" alt=\"image-20231209013048700\" style=\"zoom:67%;\">\n\n<p>最后得到flag：<code>flag&#123;6aseb4_f33!&#125;</code>。</p>\n<h3 id=\"27-MRCTF2020-ezmisc\"><a href=\"#27-MRCTF2020-ezmisc\" class=\"headerlink\" title=\"27.[MRCTF2020]ezmisc\"></a>27.[MRCTF2020]ezmisc</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209011611589.png\" alt=\"image-20231209011611589\" style=\"zoom:67%;\">\n\n<p>下载下来得到一个png图片，用010打开的时候发现了CRC校验错误，估计宽高有问题，用工具一把梭：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209011700990.png\" alt=\"image-20231209011700990\" style=\"zoom: 67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209012049579.png\" alt=\"image-20231209012049579\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209012139794.png\" alt=\"image-20231209012139794\" style=\"zoom:67%;\">\n\n<p>得到flag：<code>flag&#123;1ts_vEryyyyyy_ez!&#125;</code>。</p>\n<h3 id=\"28-HBNIS2018-caesar\"><a href=\"#28-HBNIS2018-caesar\" class=\"headerlink\" title=\"28.[HBNIS2018]caesar\"></a>28.[HBNIS2018]caesar</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209012303742.png\" alt=\"image-20231209012303742\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209012523387.png\" alt=\"image-20231209012523387\" style=\"zoom:67%;\">\n\n<p>好像是凯撒密码，但是不知道偏移了多少位，只能穷举，没办法只能上网找脚本：</p>\n<h4 id=\"凯撒密码穷举脚本\"><a href=\"#凯撒密码穷举脚本\" class=\"headerlink\" title=\"凯撒密码穷举脚本\"></a>凯撒密码穷举脚本</h4><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">change</span>(<span class=\"params\">c,i</span>):</span><br><span class=\"line\">    num=<span class=\"built_in\">ord</span>(c)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(num&gt;=<span class=\"number\">33</span> <span class=\"keyword\">and</span> num&lt;=<span class=\"number\">126</span>):</span><br><span class=\"line\">        num=<span class=\"number\">33</span>+(num+i-<span class=\"number\">33</span>)%(<span class=\"number\">94</span>)<span class=\"comment\">#126-33=93</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">chr</span>(num)</span><br><span class=\"line\"> </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">kaisa_jiAmi</span>(<span class=\"params\">string,i</span>):</span><br><span class=\"line\">    string_new=<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> string:</span><br><span class=\"line\">        string_new+=change(s,i)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(string_new)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> string_new</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#本题有种暴力解密感觉</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">kaisa_jiEmi</span>(<span class=\"params\">string</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">94</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;第&#x27;</span>+<span class=\"built_in\">str</span>(i+<span class=\"number\">1</span>)+<span class=\"string\">&#x27;种可能:&#x27;</span>,end=<span class=\"string\">&#x27;  &#x27;</span>)</span><br><span class=\"line\">        <span class=\"comment\">#区别在于 string 是该对象原本就是字符串类型, 而 str()则是将该对象转换成字符串类型。</span></span><br><span class=\"line\">        kaisa_jiAmi(string,i)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#你要知道input输入的数据类型都是string  </span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;请输入操作，注意不是平常26种:&#x27;</span>)</span><br><span class=\"line\">    choice=<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;1:恺撒加密,2:凯撒穷举解密.请输入1或2：&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> choice==<span class=\"string\">&#x27;1&#x27;</span>:</span><br><span class=\"line\">        string=<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入需要加密字符串： &#x27;</span>)</span><br><span class=\"line\">        num=<span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入需要加密的KEY： &#x27;</span>))</span><br><span class=\"line\">        kaisa_jiAmi(string,num)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> choice==<span class=\"string\">&#x27;2&#x27;</span>:</span><br><span class=\"line\">        string=<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入需要解密字符串： &#x27;</span>)</span><br><span class=\"line\">        kaisa_jiEmi(string)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;输入错误，请重试&#x27;</span>)</span><br><span class=\"line\">        main()</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__==<span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209012740846.png\" alt=\"image-20231209012740846\" style=\"zoom:67%;\">\n\n<p>得到flag：<code>flag&#123;flagiscaesar&#125;</code>。</p>\n<h3 id=\"29-SWPU2019-伟大的侦探\"><a href=\"#29-SWPU2019-伟大的侦探\" class=\"headerlink\" title=\"29.[SWPU2019]伟大的侦探\"></a>29.[SWPU2019]伟大的侦探</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209100308231.png\" alt=\"image-20231209100308231\" style=\"zoom:67%;\">\n\n<p>下载下来得到一个压缩包，里面有密码提示和一组加密的图片：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209100928434.png\" alt=\"image-20231209100928434\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209100935662.png\" alt=\"image-20231209100935662\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209100947253.png\" alt=\"image-20231209100947253\" style=\"zoom:67%;\">\n\n<p>用010打开<strong>密码.txt</strong>，发现使用<code>EBCDIC</code>编码时，得到了<code>wllm_is_the_best_team!</code>，这个应该就是解压的密码。</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209101119204.png\" alt=\"image-20231209101119204\" style=\"zoom:67%;\">\n\n<p>![image-20231209101148513](BUU MISC第二页&#x2F;image-20231209101148513.png)</p>\n<p>解压得到一组跳舞小人的图片，这个是<strong>福尔摩斯小人密码</strong></p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209101318319.png\" alt=\"image-20231209101318319\" style=\"zoom:67%;\">\n\n<p>对照密码表解出<code>iloveholmesandwllm</code>：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209101456458.png\" alt=\"image-20231209101456458\" style=\"zoom:67%;\">\n\n<p>flag为：<code>flag&#123;iloveholmesandwllm&#125;</code>。</p>\n<h3 id=\"30-黑客帝国\"><a href=\"#30-黑客帝国\" class=\"headerlink\" title=\"30.黑客帝国\"></a>30.黑客帝国</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209101820536.png\" alt=\"image-20231209101820536\" style=\"zoom:67%;\">\n\n<p>下载得到这样的一组数据：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209164924674.png\" alt=\"image-20231209164924674\" style=\"zoom:67%;\">\n\n<p>查看数据发现<code>526172211a070000</code>很像16进制数据，用winhex创建一个文件看看：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209170236676.png\" alt=\"image-20231209170236676\" style=\"zoom:67%;\">\n\n<p>是一个rar文件，这边有一个16进制转rar的脚本，也可以使用这个来得到rar：</p>\n<h4 id=\"16进制转rar\"><a href=\"#16进制转rar\" class=\"headerlink\" title=\"16进制转rar\"></a>16进制转rar</h4><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hex_to_rar</span>(<span class=\"params\">hex_string, output_file</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 将16进制字符串转换为bytes</span></span><br><span class=\"line\">    binary_data = <span class=\"built_in\">bytes</span>.fromhex(hex_string)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 将bytes写入RAR文件</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(output_file, <span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">        file.write(binary_data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 输入16进制字符串</span></span><br><span class=\"line\">    hex_data = <span class=\"string\">&quot;16进制字符串&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 指定输出RAR文件名</span></span><br><span class=\"line\">    output_file_name = <span class=\"string\">&quot;output.rar&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 调用函数进行转换</span></span><br><span class=\"line\">    hex_to_rar(hex_data, output_file_name)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;成功将16进制字符串转换为RAR文件: <span class=\"subst\">&#123;output_file_name&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>保存后打开发现是加密的，用工具爆破一下：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209170524315.png\" alt=\"image-20231209170524315\" style=\"zoom:67%;\">\n\n<p>得到密码<code>3690</code>打开得到一个损坏的png文件，应该是要修复：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209170630653.png\" alt=\"image-20231209170630653\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209170749859.png\" alt=\"image-20231209170749859\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209170721640.png\" alt=\"image-20231209170721640\" style=\"zoom:67%;\">\n\n<p>但是查看了文件头尾之后，发现这是一个jepg文件的文件头被改成了png，将<code>B9 50 4E 47</code>改成<code>FF D8 FF E0</code>，保存后得到正确的图片：</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209171124461.png\" alt=\"image-20231209171124461\" style=\"zoom:67%;\">\n\n<p>flag为：<code>flag&#123;57cd4cfd4e07505b98048ca106132125&#125;</code>。</p>\n<h3 id=\"31-HBNIS2018-低个头\"><a href=\"#31-HBNIS2018-低个头\" class=\"headerlink\" title=\"31.[HBNIS2018]低个头\"></a>31.[HBNIS2018]低个头</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209171406231.png\" alt=\"image-20231209171406231\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209171448092.png\" alt=\"image-20231209171448092\" style=\"zoom:67%;\">\n\n<p>熟悉的感觉，是键盘加密，翻译一下得到明文：<code>CTF</code></p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209171933148.png\" alt=\"image-20231209171933148\" style=\"zoom:67%;\">\n\n<p>flag为：<code>flag&#123;CTF&#125;</code>。</p>\n<h3 id=\"32-MRCTF2020-你能看懂音符吗\"><a href=\"#32-MRCTF2020-你能看懂音符吗\" class=\"headerlink\" title=\"32.[MRCTF2020]你能看懂音符吗\"></a>32.[MRCTF2020]你能看懂音符吗</h3><img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209172049261.png\" alt=\"image-20231209172049261\" style=\"zoom:67%;\">\n\n<p>题目下载下来的rar压缩包是坏的，打开发现文件头错了，修复一下</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209172213470.png\" alt=\"image-20231209172213470\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209172415401.png\" alt=\"image-20231209172415401\" style=\"zoom:67%;\">\n\n<p>应该是把文字隐藏了，或者文字改为了白色，直接<code>cirl+a</code>选中所有文字，右键查看字体，果然是隐藏了。</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209172524394.png\" alt=\"image-20231209172524394\" style=\"zoom:67%;\">\n\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209172550260.png\" alt=\"image-20231209172550260\" style=\"zoom:67%;\">\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">♭♯♪‖¶♬♭♭♪♭‖‖♭♭♬‖♫♪‖♩♬‖♬♬♭♭♫‖♩♫‖♬♪♭♭♭‖¶∮‖‖‖‖♩♬‖♬♪‖♩♫♭♭♭♭♭§‖♩♩♭♭♫♭♭♭‖♬♭‖¶§♭♭♯‖♫∮‖♬¶‖¶∮‖♬♫‖♫♬‖♫♫§=</span><br></pre></td></tr></table></figure>\n\n<p>用在线网站翻译一下得到flag。</p>\n<img src=\"/2023/12/09/BUU%20MISC%E7%AC%AC%E4%BA%8C%E9%A1%B5/image-20231209172641900.png\" alt=\"image-20231209172641900\" style=\"zoom:67%;\">\n\n<p>flag为：<code>flag&#123;thEse_n0tes_ArE_am@zing~&#125;</code>。</p>\n"},{"title":"C语言初次学习笔记(1)","date":"2023-08-07T11:15:00.000Z","cover":"/illust_79559380_20210801_212327.png","_content":"# C语言初次学习笔记(1)\n\n--------\n\n## 8.1\n\n晚上8点开始听网络安全专业启蒙沙龙，其中提到了pwn，re，misc（安全杂项），洛谷等专业名词，了解网安专业方向的多样性，在未来的学习中我们要选定一个方向去钻研。之后由毕业学长为我们介绍网安的未来就业前景和现状，最后总结结束了沙龙。\n\n-------\n\n## 8.2\n\n今天讲的是C语言基础，学习了一下四点内容：\n\n### **1.c语言概述**\n\n- 介绍了什么是C语言\n\n- 为什么要学习C语言\n\n### **2.第一个c语言程序**\n\n第一个C语言程序便是最经典的“Hello World!”\n\n```c\n#include <studio.h>//导包\nint main()//主函数\n{\n    printf(\"Hello World!\\n\");//输出\n    return 0;//程序正常退出\n}\n```\n\n<!--一定要注意程序格式不然在开学后用的pta程序会跑不起来-->\n\n>“ ”里面的内容叫做字符串，printf会把\"\"中的内容原封不动地输出\n>>\\n表示需要在输出的结果后面换行\n>>> %d说明后面有一个**整数**要输出在这个位置上\n\n```c\nprintf(\"13+14=%d\\n\",13+14);\n```\n那么此时就会输出13+14=27\n<!--注意中文的分号；和英文的;的区别-->\n\n### **3.变量**\n\n- 变量：变量是一个保存数据的地方\n\n变量定义的一般形式就是：**<类型名称><变量名称>;**\n\n```c\nint a;\nint a,b;//在同一行中可以定义多个变量\n```\n\nC语言关键字不可以做标识符（变量的名字）如：**int,break,case**\n\n- 赋值和初始化\n\n```c\nint price = 0//此时的赋值叫做初始化\n```\n\n这里的“=”是一个赋值运算符，**表示将“=“右边的值赋给左边**\n\na=b和b=a在程序设计中与数学中不一样，在程序设计中相当于两个意思\n\na=b相当于叫计算机把b的值给a，反之亦然\n\n例如：\n\n```c\n#include <stdio.h> \nint main()\n{\n    int a=4;\n    int b=2;\n    a=b;\n    printf(\"a=%d\\n\",a);\n    return 0;\n}\n```\n\n此时程序运行便会输出a=2\n\n### **4.浮点数**\n\n- 浮点数：带有小数点的数\n\n10是整数(int)，而10.0是浮点数\n\nC语言中采用float和double关键字来定位浮点数\n\nfloat：单精度浮点数(可以表示6到7位有效数字)\n\ndouble：双精度浮点数(可有表示15到16位有效数字)\n\n```c\nfloat a;\nscanf(\"%f\",&a);\nprintf(\"%f\",a);\n\ndouble b:\nscanf(\"%lf\",&b);\nprinf(\"%f\",b);\n```\n\n当浮点数和整数放在一起运算时，C会将整数转换成浮点数，然后进行浮点数运算\n\n- 表达式\n\n运算符:是指进行运算的动作，比如加法运算符\"+\",减法运算符\"-\"\n\n算子：是指参与运算的之，这个值可能是常数，也可能是变量，还可能是一个方法的返回值\n\n比如：a=b+6;\n\n那么其中运算符有\"=\"、\"+\"，算子有”a“、”b“、”6“\n\n<img src=\"C语言初次学习笔记(1)/image-20230805172114403.png\" alt=\"image-20230805172114403\" style=\"zoom: 67%;\" />\n\n遵循先乘除后加减的运算规则（取余也算除法运算）可以通过括号改变运算顺序\n\n--------\n\n## 8.3\n\n<img src=\"C语言初次学习笔记(1)/image-20230805172454571.png\" alt=\"image-20230805172454571\" style=\"zoom:67%;\" />\n\n### git的使用方法\n\n克隆仓库：git clone git地址\n\n初始化仓库：git init \n\n添加文件到暂存区：git add -A \n\n把暂存区的文件提交到仓库：git commit -m\n\n查看提交的历史记录：git log --stat\n\n工作区回滚：git checkout filename\n\n撤销最后一次提交：git reset HEAD^1\n\n以当前分支为基础新建分支：git checkout -b branchname\n\n列举所有的分支：git branch \n\n单纯地切换到某个分支：git checkout branchname \n\n删掉特定的分支：git branch -D branchname \n\n合并分支：git merge branchname \n\n放弃合并：git merge --abort \n\n添加远程仓库：git remote add origin\n\n本地仓库改名：git branch -M main\n\n上传代码：git push -u origin main\n\n推送当前分支最新的提交到远程：git push\n\n拉取远程分支最新的提交到本地：git pull\n\n以上是git相关代码，也可以在`vscode`下载`GitLens`扩展插件来进行图形化操作，省去次次打代码 ~~复制代码~~ 的麻烦。\n\n学习了git相关的工作原理和如何在vscode中使用git来进行上传本地内容到github上建立的远程仓库中。但学习的仍然浅显，还需在多次实践和复习巩固中，了解掌握git的使用。\n\n假如我要更新个人博客的话，由于github在国内链接不稳定，通过vscode的powershell终端不一定能成功将本地库成功上传更新，所以我可以通过梯子来帮助，在梯子中打开cmd终端，先直接输入`<目标硬盘>:`进入到目标硬盘后，再输入`cd\\<目标硬盘>\\<目标文件夹>`打开我的blog文件夹，此时输入以下三条指令：\n\n```\ngit add .                      添加所有修改的文件\ngit commit -m '文字内容'         更新日志（文字内容可替换）\ngit push                       （推送更新）\n```\n\n就能实现将本地文件夹中的内容上传到远程仓库，更新自己的博客了。\n\n\n--------\n\n## 8.4\n\n今天讲的是C语言分支，主要有以下两点内容：\n\n### **1.条件判断**\n\nif(条件成立){...}如果条件成立，执行大括号里的内容，反之不执行，会跳过大括号里的内容。\n\n<img src=\"C语言初次学习笔记(1)/image-20230805155452616.png\" alt=\"`image-20230805155452616`\" style=\"zoom:50%;\" />\n\n- 关系运算的结果：当两个值的关系符合关系运算符的预期时，关系运算的结果为整数1，否则为整数0\n\n```c\nprintf`(“%d\\n”,5==3);\nprintf(“%d\\n”,5>3);\nprintf(“%d\\n”,5<=3);\n```\n\n- 优先级：所有的关系运算符的优先级比算术运算的低，但是比赋值运算的高\n\n`7>=3+4` 优先级高于`int r = a>0;`\n\n`==`和`！=`的优先级比其他的低，而连续的关系运算是从左到右进行的\n\n`5>3==6>4`  `6>5>4` `a==b==6` `a==b>0`\n\n- 注释：插入在程序代码中，用来向读者提高解释信息。它们对程序没有任何影响，但是往往使得程序更容易被人类读者理解。\n\n注释分为：`//`和`/**/`\n\n`//`是单行注释，`/**/`是多行注释，以`/*`开始,以`*/`结束\n\n**如果**\n\n如果条件不满足，做另一件事\n\nelse=否则的话\n\n```c\nif(条件){\n    ...\n}else{\n    ...\n}\n```\n\nif语句\n\n一个基本的if语句由一个关键字开头，跟在括号里的一个表示条件的逻辑表达式，然后是一对大括号”{}”之间的若干条语句。如果表示条件的逻辑表达式的结果不是零，那么就执行后面跟着的这对大括号中的语句，否则就跳过这些语句不执行，而执行下面的其他语句。\n\n```c\nf(total>amount)  total=total+amount+10;\n```\n\nif语句这一行结束的时候并没有表示语句结束的“；”，而在后面的赋值语句写在if的下一行，并且缩进了，在这一行结束的时候有一个表示语句结束的“；”。这表明这条赋值语句是if语句的一部分，if语句拥有和控制这条赋值语句，决定它是否要被执行。\n\nPS：以下是某学长给予的宝贵知识，此处整合到周报中用来一并记忆学习\n\n## if-else\n\n```c\nif(条件) {\n    执行语句\n} else {\n    执行语句\n}\n```\n\n`else` 是可有可无的\n\n当 `if` 条件满足时会执行 `if` 里面的语句，否则\n\n- 如果有 `else` 则执行 `else`\n\n  - 如果 `else` 后有 `if` ，将会再次判断是否符合，否则执行 `else`\n\n    ```c\n    int a = 10;\n    if(a>100) {\n        printf(\"a大于100\");\n        xxxxxx;\n    }else if(a>10) {\n        printf(\"a大于10且小于等于100\");\n    }else if(a>5) {\n        printf(\"a大于5且a小于等于10\");\n    }else{\n        printf(\"a小于等于5\");\n    }\n    ```\n\n    区别：\n\n    ```c\n    int a = 20;\n    if(a>100) {\n        printf(\"a大于100\");\n    }//else{}\n    if(a>10) {\n        printf(\"a大于10且小于等于100\");\n    }//else{}\n    if(a>5) {\n        printf(\"a大于5且a小于等于10\");\n    }else{\n        printf(\"a小于等于5\");\n    }\n    ```\n\n- 如果没有 `else` 将不会执行\n\nif简写\n\n```c\nif(a>10) printf(\"a大于10\");\nelse {printf(\"a小于等于10\");xxxxxx;}\n```\n\nif 嵌套\n\n```c\nif(a) {\n    if(b) {\n        xxx\n    }else{\n        xxxx\n    }\n}else{\n    xxxxx\n}\n```\n\n### **2.循环**\n\nwhile(条件){...}从语法角度看循环和if类似，区别在于if指只会执行一次，while会执行多次。\n\n<img src=\"C语言初次学习笔记(1)/image-20230805165608821.png\" alt=\"image-20230805165608821\" style=\"zoom:80%;\" />\n\n- **while循环**\n\n如果我们把while翻译作“当”，那么一个while循环的意思是：当条件满足时，不断地重复循环体内的语句。循环之前需要判断是否符合条件才能进入循环，所以有可能循环一次也没执行。条件成立是循环继续的基础。\n\n验证：测试程序常使用边界数据，如有效范围两端的数据，特殊的倍数等，在代码执行前一般都需要模拟一下。\n\n- **do-while循环**\n\n在进入循环体的时候不做检查，而是在执行完一轮循环体的代码后，再来检查循环的条件是否满足，如果满足则继续下一轮循环，不满足则结束循环。\n\n```c\ndo\n{\t<循环体语句>\n}while(<循环条件>);\n\n```\n\n<img src=\"C语言初次学习笔记(1)/image-20230805170423462.png\" alt=\"image-20230805170423462\" style=\"zoom:67%;\" />\n\ndo-while循环和while循环很像，区别在循环体执行结束的时候才来判断条件。也就是说，无论如何，`循环都会执行至少一边遍`，然后再来判断条件。与while循环相同的是，条件满足时执行循环，条件不满足时结束循环。\n\n- **for循环**\n\n```c\nfor(初始条件；循环继续条件；循环每一轮要做的事情）{\n\n......\n}\n```\n\nfor循环像一个计数循环：设定一个计数器，初始化它，然后在计数器到达某值之前，重复执行循环体，而每执行一轮循环，计数器值以一定步骤进行调整，比如加1或者减1。例如：\n\n```c\n#include <stdio.h> \nint main()\n{\n\tfor(int i=0;i<5;i=i+1){\n    printf(\"%d\",i);\n}\n\treturn 0;\n}\n```\n\n这个代码会不断执行循环，直到i=5时，程序会停止循环，结果输出为01234\n\nfor=对于\n\nfor(count=10;count>0;count--)就读成：”对于一开始的count=10,当count>0时，重复做循环体，每一轮循环在做完循环体语句后，使得count--。“\n\n<!--Tips：做求和的程序时，记录结果的变量应该初始化为0，而做求和积的变量时，记录结果的变量应该初始化为1-->\n\n- **循环次数**\n\nfor(i=0;i<n;i++)则循环的次数是n，而循环结束以后，i的值是n.循环的控制变量i，是选择从0开始还是从1开始，是判断i<n还是判断i<=n；对循环的次数，循环结束后变量的值有影响。\n\n<img src=\"C语言初次学习笔记(1)/image-20230805171655526.png\" alt=\"image-20230805171655526\" style=\"zoom: 67%;\" />\n\n如果有固定次数，用for如果必须执行一次，用do-while其他情况用while\n\n-----\n\n## 8.5\n\n今天事情比较多，没学习新的东西，只回顾了几遍笔记。在晚上读了读《提问的智慧》，受益匪浅。\n\n[提问的智慧]: https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-z\n\n--------\n\n## 8.6\n\n今天讲的是C语言的进一步判断和循环,主要学习的是以下两点：\n\n### **1.级联和嵌套的判断**\n\n- **级联**\n\n类似于分段函数\nif\nelse if\nelse\n不用再进else里的大括号\n单一出口原则程序里操作不要多次输出\n\n- **嵌套**\n\n如果if条件满足或不满足时，又进一个if 这就是if的嵌套语句。\n缩进不能影响else的匹配。在没有大括号时，else跟最近的if匹配。在if或else后始终用{}。\n\n此处内容与8.4中if-else的内容相近，就不再详细记录了。\n\n### **2.多支分路**\n\n- **switch-case**\n\n```c\nswitch(控制表达式）{\ncase 常量：\n语句\n......\ncase 常量：\n语句\n......\ndefault:\n语句\n......\n}\n```\n\n控制表达式只能是整数型的结果常量可以是常数，也可以是常数计算的表达式。\n\n不会像级联一样 从头判断，控制表达式只能是整数型（int）结果\n如果没有break 会顺序执行下面的case case只是跳转，我们可以利用这个特性来进行不同需求的程序设计。\n\n-----\n\n## 8.7\n\n今天打算在完成C语言作业之余，多去了解些C语言相关知识，继续阅读《提问的智慧》，争取在今后的学习中，能够更好的提出有意义 的提问，得到学长们的有效解答。QWQ\n\n以上就是这七天中学习的东西。\n","source":"_posts/C语言初次学习笔记(1).md","raw":"---\ntitle: C语言初次学习笔记(1)\ndate: 2023-08-07 19:15:00\ncover: /illust_79559380_20210801_212327.png\ntags: 笔记\n---\n# C语言初次学习笔记(1)\n\n--------\n\n## 8.1\n\n晚上8点开始听网络安全专业启蒙沙龙，其中提到了pwn，re，misc（安全杂项），洛谷等专业名词，了解网安专业方向的多样性，在未来的学习中我们要选定一个方向去钻研。之后由毕业学长为我们介绍网安的未来就业前景和现状，最后总结结束了沙龙。\n\n-------\n\n## 8.2\n\n今天讲的是C语言基础，学习了一下四点内容：\n\n### **1.c语言概述**\n\n- 介绍了什么是C语言\n\n- 为什么要学习C语言\n\n### **2.第一个c语言程序**\n\n第一个C语言程序便是最经典的“Hello World!”\n\n```c\n#include <studio.h>//导包\nint main()//主函数\n{\n    printf(\"Hello World!\\n\");//输出\n    return 0;//程序正常退出\n}\n```\n\n<!--一定要注意程序格式不然在开学后用的pta程序会跑不起来-->\n\n>“ ”里面的内容叫做字符串，printf会把\"\"中的内容原封不动地输出\n>>\\n表示需要在输出的结果后面换行\n>>> %d说明后面有一个**整数**要输出在这个位置上\n\n```c\nprintf(\"13+14=%d\\n\",13+14);\n```\n那么此时就会输出13+14=27\n<!--注意中文的分号；和英文的;的区别-->\n\n### **3.变量**\n\n- 变量：变量是一个保存数据的地方\n\n变量定义的一般形式就是：**<类型名称><变量名称>;**\n\n```c\nint a;\nint a,b;//在同一行中可以定义多个变量\n```\n\nC语言关键字不可以做标识符（变量的名字）如：**int,break,case**\n\n- 赋值和初始化\n\n```c\nint price = 0//此时的赋值叫做初始化\n```\n\n这里的“=”是一个赋值运算符，**表示将“=“右边的值赋给左边**\n\na=b和b=a在程序设计中与数学中不一样，在程序设计中相当于两个意思\n\na=b相当于叫计算机把b的值给a，反之亦然\n\n例如：\n\n```c\n#include <stdio.h> \nint main()\n{\n    int a=4;\n    int b=2;\n    a=b;\n    printf(\"a=%d\\n\",a);\n    return 0;\n}\n```\n\n此时程序运行便会输出a=2\n\n### **4.浮点数**\n\n- 浮点数：带有小数点的数\n\n10是整数(int)，而10.0是浮点数\n\nC语言中采用float和double关键字来定位浮点数\n\nfloat：单精度浮点数(可以表示6到7位有效数字)\n\ndouble：双精度浮点数(可有表示15到16位有效数字)\n\n```c\nfloat a;\nscanf(\"%f\",&a);\nprintf(\"%f\",a);\n\ndouble b:\nscanf(\"%lf\",&b);\nprinf(\"%f\",b);\n```\n\n当浮点数和整数放在一起运算时，C会将整数转换成浮点数，然后进行浮点数运算\n\n- 表达式\n\n运算符:是指进行运算的动作，比如加法运算符\"+\",减法运算符\"-\"\n\n算子：是指参与运算的之，这个值可能是常数，也可能是变量，还可能是一个方法的返回值\n\n比如：a=b+6;\n\n那么其中运算符有\"=\"、\"+\"，算子有”a“、”b“、”6“\n\n<img src=\"C语言初次学习笔记(1)/image-20230805172114403.png\" alt=\"image-20230805172114403\" style=\"zoom: 67%;\" />\n\n遵循先乘除后加减的运算规则（取余也算除法运算）可以通过括号改变运算顺序\n\n--------\n\n## 8.3\n\n<img src=\"C语言初次学习笔记(1)/image-20230805172454571.png\" alt=\"image-20230805172454571\" style=\"zoom:67%;\" />\n\n### git的使用方法\n\n克隆仓库：git clone git地址\n\n初始化仓库：git init \n\n添加文件到暂存区：git add -A \n\n把暂存区的文件提交到仓库：git commit -m\n\n查看提交的历史记录：git log --stat\n\n工作区回滚：git checkout filename\n\n撤销最后一次提交：git reset HEAD^1\n\n以当前分支为基础新建分支：git checkout -b branchname\n\n列举所有的分支：git branch \n\n单纯地切换到某个分支：git checkout branchname \n\n删掉特定的分支：git branch -D branchname \n\n合并分支：git merge branchname \n\n放弃合并：git merge --abort \n\n添加远程仓库：git remote add origin\n\n本地仓库改名：git branch -M main\n\n上传代码：git push -u origin main\n\n推送当前分支最新的提交到远程：git push\n\n拉取远程分支最新的提交到本地：git pull\n\n以上是git相关代码，也可以在`vscode`下载`GitLens`扩展插件来进行图形化操作，省去次次打代码 ~~复制代码~~ 的麻烦。\n\n学习了git相关的工作原理和如何在vscode中使用git来进行上传本地内容到github上建立的远程仓库中。但学习的仍然浅显，还需在多次实践和复习巩固中，了解掌握git的使用。\n\n假如我要更新个人博客的话，由于github在国内链接不稳定，通过vscode的powershell终端不一定能成功将本地库成功上传更新，所以我可以通过梯子来帮助，在梯子中打开cmd终端，先直接输入`<目标硬盘>:`进入到目标硬盘后，再输入`cd\\<目标硬盘>\\<目标文件夹>`打开我的blog文件夹，此时输入以下三条指令：\n\n```\ngit add .                      添加所有修改的文件\ngit commit -m '文字内容'         更新日志（文字内容可替换）\ngit push                       （推送更新）\n```\n\n就能实现将本地文件夹中的内容上传到远程仓库，更新自己的博客了。\n\n\n--------\n\n## 8.4\n\n今天讲的是C语言分支，主要有以下两点内容：\n\n### **1.条件判断**\n\nif(条件成立){...}如果条件成立，执行大括号里的内容，反之不执行，会跳过大括号里的内容。\n\n<img src=\"C语言初次学习笔记(1)/image-20230805155452616.png\" alt=\"`image-20230805155452616`\" style=\"zoom:50%;\" />\n\n- 关系运算的结果：当两个值的关系符合关系运算符的预期时，关系运算的结果为整数1，否则为整数0\n\n```c\nprintf`(“%d\\n”,5==3);\nprintf(“%d\\n”,5>3);\nprintf(“%d\\n”,5<=3);\n```\n\n- 优先级：所有的关系运算符的优先级比算术运算的低，但是比赋值运算的高\n\n`7>=3+4` 优先级高于`int r = a>0;`\n\n`==`和`！=`的优先级比其他的低，而连续的关系运算是从左到右进行的\n\n`5>3==6>4`  `6>5>4` `a==b==6` `a==b>0`\n\n- 注释：插入在程序代码中，用来向读者提高解释信息。它们对程序没有任何影响，但是往往使得程序更容易被人类读者理解。\n\n注释分为：`//`和`/**/`\n\n`//`是单行注释，`/**/`是多行注释，以`/*`开始,以`*/`结束\n\n**如果**\n\n如果条件不满足，做另一件事\n\nelse=否则的话\n\n```c\nif(条件){\n    ...\n}else{\n    ...\n}\n```\n\nif语句\n\n一个基本的if语句由一个关键字开头，跟在括号里的一个表示条件的逻辑表达式，然后是一对大括号”{}”之间的若干条语句。如果表示条件的逻辑表达式的结果不是零，那么就执行后面跟着的这对大括号中的语句，否则就跳过这些语句不执行，而执行下面的其他语句。\n\n```c\nf(total>amount)  total=total+amount+10;\n```\n\nif语句这一行结束的时候并没有表示语句结束的“；”，而在后面的赋值语句写在if的下一行，并且缩进了，在这一行结束的时候有一个表示语句结束的“；”。这表明这条赋值语句是if语句的一部分，if语句拥有和控制这条赋值语句，决定它是否要被执行。\n\nPS：以下是某学长给予的宝贵知识，此处整合到周报中用来一并记忆学习\n\n## if-else\n\n```c\nif(条件) {\n    执行语句\n} else {\n    执行语句\n}\n```\n\n`else` 是可有可无的\n\n当 `if` 条件满足时会执行 `if` 里面的语句，否则\n\n- 如果有 `else` 则执行 `else`\n\n  - 如果 `else` 后有 `if` ，将会再次判断是否符合，否则执行 `else`\n\n    ```c\n    int a = 10;\n    if(a>100) {\n        printf(\"a大于100\");\n        xxxxxx;\n    }else if(a>10) {\n        printf(\"a大于10且小于等于100\");\n    }else if(a>5) {\n        printf(\"a大于5且a小于等于10\");\n    }else{\n        printf(\"a小于等于5\");\n    }\n    ```\n\n    区别：\n\n    ```c\n    int a = 20;\n    if(a>100) {\n        printf(\"a大于100\");\n    }//else{}\n    if(a>10) {\n        printf(\"a大于10且小于等于100\");\n    }//else{}\n    if(a>5) {\n        printf(\"a大于5且a小于等于10\");\n    }else{\n        printf(\"a小于等于5\");\n    }\n    ```\n\n- 如果没有 `else` 将不会执行\n\nif简写\n\n```c\nif(a>10) printf(\"a大于10\");\nelse {printf(\"a小于等于10\");xxxxxx;}\n```\n\nif 嵌套\n\n```c\nif(a) {\n    if(b) {\n        xxx\n    }else{\n        xxxx\n    }\n}else{\n    xxxxx\n}\n```\n\n### **2.循环**\n\nwhile(条件){...}从语法角度看循环和if类似，区别在于if指只会执行一次，while会执行多次。\n\n<img src=\"C语言初次学习笔记(1)/image-20230805165608821.png\" alt=\"image-20230805165608821\" style=\"zoom:80%;\" />\n\n- **while循环**\n\n如果我们把while翻译作“当”，那么一个while循环的意思是：当条件满足时，不断地重复循环体内的语句。循环之前需要判断是否符合条件才能进入循环，所以有可能循环一次也没执行。条件成立是循环继续的基础。\n\n验证：测试程序常使用边界数据，如有效范围两端的数据，特殊的倍数等，在代码执行前一般都需要模拟一下。\n\n- **do-while循环**\n\n在进入循环体的时候不做检查，而是在执行完一轮循环体的代码后，再来检查循环的条件是否满足，如果满足则继续下一轮循环，不满足则结束循环。\n\n```c\ndo\n{\t<循环体语句>\n}while(<循环条件>);\n\n```\n\n<img src=\"C语言初次学习笔记(1)/image-20230805170423462.png\" alt=\"image-20230805170423462\" style=\"zoom:67%;\" />\n\ndo-while循环和while循环很像，区别在循环体执行结束的时候才来判断条件。也就是说，无论如何，`循环都会执行至少一边遍`，然后再来判断条件。与while循环相同的是，条件满足时执行循环，条件不满足时结束循环。\n\n- **for循环**\n\n```c\nfor(初始条件；循环继续条件；循环每一轮要做的事情）{\n\n......\n}\n```\n\nfor循环像一个计数循环：设定一个计数器，初始化它，然后在计数器到达某值之前，重复执行循环体，而每执行一轮循环，计数器值以一定步骤进行调整，比如加1或者减1。例如：\n\n```c\n#include <stdio.h> \nint main()\n{\n\tfor(int i=0;i<5;i=i+1){\n    printf(\"%d\",i);\n}\n\treturn 0;\n}\n```\n\n这个代码会不断执行循环，直到i=5时，程序会停止循环，结果输出为01234\n\nfor=对于\n\nfor(count=10;count>0;count--)就读成：”对于一开始的count=10,当count>0时，重复做循环体，每一轮循环在做完循环体语句后，使得count--。“\n\n<!--Tips：做求和的程序时，记录结果的变量应该初始化为0，而做求和积的变量时，记录结果的变量应该初始化为1-->\n\n- **循环次数**\n\nfor(i=0;i<n;i++)则循环的次数是n，而循环结束以后，i的值是n.循环的控制变量i，是选择从0开始还是从1开始，是判断i<n还是判断i<=n；对循环的次数，循环结束后变量的值有影响。\n\n<img src=\"C语言初次学习笔记(1)/image-20230805171655526.png\" alt=\"image-20230805171655526\" style=\"zoom: 67%;\" />\n\n如果有固定次数，用for如果必须执行一次，用do-while其他情况用while\n\n-----\n\n## 8.5\n\n今天事情比较多，没学习新的东西，只回顾了几遍笔记。在晚上读了读《提问的智慧》，受益匪浅。\n\n[提问的智慧]: https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-z\n\n--------\n\n## 8.6\n\n今天讲的是C语言的进一步判断和循环,主要学习的是以下两点：\n\n### **1.级联和嵌套的判断**\n\n- **级联**\n\n类似于分段函数\nif\nelse if\nelse\n不用再进else里的大括号\n单一出口原则程序里操作不要多次输出\n\n- **嵌套**\n\n如果if条件满足或不满足时，又进一个if 这就是if的嵌套语句。\n缩进不能影响else的匹配。在没有大括号时，else跟最近的if匹配。在if或else后始终用{}。\n\n此处内容与8.4中if-else的内容相近，就不再详细记录了。\n\n### **2.多支分路**\n\n- **switch-case**\n\n```c\nswitch(控制表达式）{\ncase 常量：\n语句\n......\ncase 常量：\n语句\n......\ndefault:\n语句\n......\n}\n```\n\n控制表达式只能是整数型的结果常量可以是常数，也可以是常数计算的表达式。\n\n不会像级联一样 从头判断，控制表达式只能是整数型（int）结果\n如果没有break 会顺序执行下面的case case只是跳转，我们可以利用这个特性来进行不同需求的程序设计。\n\n-----\n\n## 8.7\n\n今天打算在完成C语言作业之余，多去了解些C语言相关知识，继续阅读《提问的智慧》，争取在今后的学习中，能够更好的提出有意义 的提问，得到学长们的有效解答。QWQ\n\n以上就是这七天中学习的东西。\n","slug":"C语言初次学习笔记(1)","published":1,"updated":"2023-12-09T10:19:53.333Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq0w2clc00088wv54cgg2n1i","content":"<h1 id=\"C语言初次学习笔记-1\"><a href=\"#C语言初次学习笔记-1\" class=\"headerlink\" title=\"C语言初次学习笔记(1)\"></a>C语言初次学习笔记(1)</h1><hr>\n<h2 id=\"8-1\"><a href=\"#8-1\" class=\"headerlink\" title=\"8.1\"></a>8.1</h2><p>晚上8点开始听网络安全专业启蒙沙龙，其中提到了pwn，re，misc（安全杂项），洛谷等专业名词，了解网安专业方向的多样性，在未来的学习中我们要选定一个方向去钻研。之后由毕业学长为我们介绍网安的未来就业前景和现状，最后总结结束了沙龙。</p>\n<hr>\n<h2 id=\"8-2\"><a href=\"#8-2\" class=\"headerlink\" title=\"8.2\"></a>8.2</h2><p>今天讲的是C语言基础，学习了一下四点内容：</p>\n<h3 id=\"1-c语言概述\"><a href=\"#1-c语言概述\" class=\"headerlink\" title=\"1.c语言概述\"></a><strong>1.c语言概述</strong></h3><ul>\n<li><p>介绍了什么是C语言</p>\n</li>\n<li><p>为什么要学习C语言</p>\n</li>\n</ul>\n<h3 id=\"2-第一个c语言程序\"><a href=\"#2-第一个c语言程序\" class=\"headerlink\" title=\"2.第一个c语言程序\"></a><strong>2.第一个c语言程序</strong></h3><p>第一个C语言程序便是最经典的“Hello World!”</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;studio.h&gt;</span><span class=\"comment\">//导包</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span><span class=\"comment\">//主函数</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Hello World!\\n&quot;</span>);<span class=\"comment\">//输出</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//程序正常退出</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<!--一定要注意程序格式不然在开学后用的pta程序会跑不起来-->\n\n<blockquote>\n<p>“ ”里面的内容叫做字符串，printf会把””中的内容原封不动地输出</p>\n<blockquote>\n<p>\\n表示需要在输出的结果后面换行</p>\n<blockquote>\n<p>%d说明后面有一个<strong>整数</strong>要输出在这个位置上</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;13+14=%d\\n&quot;</span>,<span class=\"number\">13</span>+<span class=\"number\">14</span>);</span><br></pre></td></tr></table></figure>\n<p>那么此时就会输出13+14&#x3D;27</p>\n<!--注意中文的分号；和英文的;的区别-->\n\n<h3 id=\"3-变量\"><a href=\"#3-变量\" class=\"headerlink\" title=\"3.变量\"></a><strong>3.变量</strong></h3><ul>\n<li>变量：变量是一个保存数据的地方</li>\n</ul>\n<p>变量定义的一般形式就是：**&lt;类型名称&gt;&lt;变量名称&gt;;**</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a;</span><br><span class=\"line\"><span class=\"type\">int</span> a,b;<span class=\"comment\">//在同一行中可以定义多个变量</span></span><br></pre></td></tr></table></figure>\n\n<p>C语言关键字不可以做标识符（变量的名字）如：<strong>int,break,case</strong></p>\n<ul>\n<li>赋值和初始化</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> price = <span class=\"number\">0</span><span class=\"comment\">//此时的赋值叫做初始化</span></span><br></pre></td></tr></table></figure>\n\n<p>这里的“&#x3D;”是一个赋值运算符，<strong>表示将“&#x3D;“右边的值赋给左边</strong></p>\n<p>a&#x3D;b和b&#x3D;a在程序设计中与数学中不一样，在程序设计中相当于两个意思</p>\n<p>a&#x3D;b相当于叫计算机把b的值给a，反之亦然</p>\n<p>例如：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span> </span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a=<span class=\"number\">4</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b=<span class=\"number\">2</span>;</span><br><span class=\"line\">    a=b;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a=%d\\n&quot;</span>,a);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>此时程序运行便会输出a&#x3D;2</p>\n<h3 id=\"4-浮点数\"><a href=\"#4-浮点数\" class=\"headerlink\" title=\"4.浮点数\"></a><strong>4.浮点数</strong></h3><ul>\n<li>浮点数：带有小数点的数</li>\n</ul>\n<p>10是整数(int)，而10.0是浮点数</p>\n<p>C语言中采用float和double关键字来定位浮点数</p>\n<p>float：单精度浮点数(可以表示6到7位有效数字)</p>\n<p>double：双精度浮点数(可有表示15到16位有效数字)</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">float</span> a;</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%f&quot;</span>,&amp;a);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%f&quot;</span>,a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">double</span> b:</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lf&quot;</span>,&amp;b);</span><br><span class=\"line\">prinf(<span class=\"string\">&quot;%f&quot;</span>,b);</span><br></pre></td></tr></table></figure>\n\n<p>当浮点数和整数放在一起运算时，C会将整数转换成浮点数，然后进行浮点数运算</p>\n<ul>\n<li>表达式</li>\n</ul>\n<p>运算符:是指进行运算的动作，比如加法运算符”+”,减法运算符”-“</p>\n<p>算子：是指参与运算的之，这个值可能是常数，也可能是变量，还可能是一个方法的返回值</p>\n<p>比如：a&#x3D;b+6;</p>\n<p>那么其中运算符有”&#x3D;”、”+”，算子有”a“、”b“、”6“</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/08/07/C%E8%AF%AD%E8%A8%80%E5%88%9D%E6%AC%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)/image-20230805172114403.png\" alt=\"image-20230805172114403\" data-caption=\"image-20230805172114403\" loading=\"lazy\">\n\n<p>遵循先乘除后加减的运算规则（取余也算除法运算）可以通过括号改变运算顺序</p>\n<hr>\n<h2 id=\"8-3\"><a href=\"#8-3\" class=\"headerlink\" title=\"8.3\"></a>8.3</h2><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/08/07/C%E8%AF%AD%E8%A8%80%E5%88%9D%E6%AC%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)/image-20230805172454571.png\" alt=\"image-20230805172454571\" data-caption=\"image-20230805172454571\" loading=\"lazy\">\n\n<h3 id=\"git的使用方法\"><a href=\"#git的使用方法\" class=\"headerlink\" title=\"git的使用方法\"></a>git的使用方法</h3><p>克隆仓库：git clone git地址</p>\n<p>初始化仓库：git init </p>\n<p>添加文件到暂存区：git add -A </p>\n<p>把暂存区的文件提交到仓库：git commit -m</p>\n<p>查看提交的历史记录：git log –stat</p>\n<p>工作区回滚：git checkout filename</p>\n<p>撤销最后一次提交：git reset HEAD^1</p>\n<p>以当前分支为基础新建分支：git checkout -b branchname</p>\n<p>列举所有的分支：git branch </p>\n<p>单纯地切换到某个分支：git checkout branchname </p>\n<p>删掉特定的分支：git branch -D branchname </p>\n<p>合并分支：git merge branchname </p>\n<p>放弃合并：git merge –abort </p>\n<p>添加远程仓库：git remote add origin</p>\n<p>本地仓库改名：git branch -M main</p>\n<p>上传代码：git push -u origin main</p>\n<p>推送当前分支最新的提交到远程：git push</p>\n<p>拉取远程分支最新的提交到本地：git pull</p>\n<p>以上是git相关代码，也可以在<code>vscode</code>下载<code>GitLens</code>扩展插件来进行图形化操作，省去次次打代码 <del>复制代码</del> 的麻烦。</p>\n<p>学习了git相关的工作原理和如何在vscode中使用git来进行上传本地内容到github上建立的远程仓库中。但学习的仍然浅显，还需在多次实践和复习巩固中，了解掌握git的使用。</p>\n<p>假如我要更新个人博客的话，由于github在国内链接不稳定，通过vscode的powershell终端不一定能成功将本地库成功上传更新，所以我可以通过梯子来帮助，在梯子中打开cmd终端，先直接输入<code>&lt;目标硬盘&gt;:</code>进入到目标硬盘后，再输入<code>cd\\&lt;目标硬盘&gt;\\&lt;目标文件夹&gt;</code>打开我的blog文件夹，此时输入以下三条指令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .                      添加所有修改的文件</span><br><span class=\"line\">git commit -m &#x27;文字内容&#x27;         更新日志（文字内容可替换）</span><br><span class=\"line\">git push                       （推送更新）</span><br></pre></td></tr></table></figure>\n\n<p>就能实现将本地文件夹中的内容上传到远程仓库，更新自己的博客了。</p>\n<hr>\n<h2 id=\"8-4\"><a href=\"#8-4\" class=\"headerlink\" title=\"8.4\"></a>8.4</h2><p>今天讲的是C语言分支，主要有以下两点内容：</p>\n<h3 id=\"1-条件判断\"><a href=\"#1-条件判断\" class=\"headerlink\" title=\"1.条件判断\"></a><strong>1.条件判断</strong></h3><p>if(条件成立){…}如果条件成立，执行大括号里的内容，反之不执行，会跳过大括号里的内容。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/08/07/C%E8%AF%AD%E8%A8%80%E5%88%9D%E6%AC%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)/image-20230805155452616.png\" alt=\"`image-20230805155452616`\" data-caption=\"`image-20230805155452616`\" loading=\"lazy\">\n\n<ul>\n<li>关系运算的结果：当两个值的关系符合关系运算符的预期时，关系运算的结果为整数1，否则为整数0</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span>`(“%d\\n”,<span class=\"number\">5</span>==<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(“%d\\n”,<span class=\"number\">5</span>&gt;<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(“%d\\n”,<span class=\"number\">5</span>&lt;=<span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>优先级：所有的关系运算符的优先级比算术运算的低，但是比赋值运算的高</li>\n</ul>\n<p><code>7&gt;=3+4</code> 优先级高于<code>int r = a&gt;0;</code></p>\n<p><code>==</code>和<code>！=</code>的优先级比其他的低，而连续的关系运算是从左到右进行的</p>\n<p><code>5&gt;3==6&gt;4</code>  <code>6&gt;5&gt;4</code> <code>a==b==6</code> <code>a==b&gt;0</code></p>\n<ul>\n<li>注释：插入在程序代码中，用来向读者提高解释信息。它们对程序没有任何影响，但是往往使得程序更容易被人类读者理解。</li>\n</ul>\n<p>注释分为：<code>//</code>和<code>/**/</code></p>\n<p><code>//</code>是单行注释，<code>/**/</code>是多行注释，以<code>/*</code>开始,以<code>*/</code>结束</p>\n<p><strong>如果</strong></p>\n<p>如果条件不满足，做另一件事</p>\n<p>else&#x3D;否则的话</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(条件)&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>if语句</p>\n<p>一个基本的if语句由一个关键字开头，跟在括号里的一个表示条件的逻辑表达式，然后是一对大括号”{}”之间的若干条语句。如果表示条件的逻辑表达式的结果不是零，那么就执行后面跟着的这对大括号中的语句，否则就跳过这些语句不执行，而执行下面的其他语句。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f(total&gt;amount)  total=total+amount+<span class=\"number\">10</span>;</span><br></pre></td></tr></table></figure>\n\n<p>if语句这一行结束的时候并没有表示语句结束的“；”，而在后面的赋值语句写在if的下一行，并且缩进了，在这一行结束的时候有一个表示语句结束的“；”。这表明这条赋值语句是if语句的一部分，if语句拥有和控制这条赋值语句，决定它是否要被执行。</p>\n<p>PS：以下是某学长给予的宝贵知识，此处整合到周报中用来一并记忆学习</p>\n<h2 id=\"if-else\"><a href=\"#if-else\" class=\"headerlink\" title=\"if-else\"></a>if-else</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(条件) &#123;</span><br><span class=\"line\">    执行语句</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    执行语句</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>else</code> 是可有可无的</p>\n<p>当 <code>if</code> 条件满足时会执行 <code>if</code> 里面的语句，否则</p>\n<ul>\n<li><p>如果有 <code>else</code> 则执行 <code>else</code></p>\n<ul>\n<li><p>如果 <code>else</code> 后有 <code>if</code> ，将会再次判断是否符合，否则执行 <code>else</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(a&gt;<span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a大于100&quot;</span>);</span><br><span class=\"line\">    xxxxxx;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a&gt;<span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a大于10且小于等于100&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a&gt;<span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a大于5且a小于等于10&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a小于等于5&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>区别：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a = <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(a&gt;<span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a大于100&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"comment\">//else&#123;&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(a&gt;<span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a大于10且小于等于100&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"comment\">//else&#123;&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(a&gt;<span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a大于5且a小于等于10&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a小于等于5&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>如果没有 <code>else</code> 将不会执行</p>\n</li>\n</ul>\n<p>if简写</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(a&gt;<span class=\"number\">10</span>) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a大于10&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a小于等于10&quot;</span>);xxxxxx;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>if 嵌套</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(a) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b) &#123;</span><br><span class=\"line\">        xxx</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        xxxx</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    xxxxx</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-循环\"><a href=\"#2-循环\" class=\"headerlink\" title=\"2.循环\"></a><strong>2.循环</strong></h3><p>while(条件){…}从语法角度看循环和if类似，区别在于if指只会执行一次，while会执行多次。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/08/07/C%E8%AF%AD%E8%A8%80%E5%88%9D%E6%AC%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)/image-20230805165608821.png\" alt=\"image-20230805165608821\" data-caption=\"image-20230805165608821\" loading=\"lazy\">\n\n<ul>\n<li><strong>while循环</strong></li>\n</ul>\n<p>如果我们把while翻译作“当”，那么一个while循环的意思是：当条件满足时，不断地重复循环体内的语句。循环之前需要判断是否符合条件才能进入循环，所以有可能循环一次也没执行。条件成立是循环继续的基础。</p>\n<p>验证：测试程序常使用边界数据，如有效范围两端的数据，特殊的倍数等，在代码执行前一般都需要模拟一下。</p>\n<ul>\n<li><strong>do-while循环</strong></li>\n</ul>\n<p>在进入循环体的时候不做检查，而是在执行完一轮循环体的代码后，再来检查循环的条件是否满足，如果满足则继续下一轮循环，不满足则结束循环。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">&#123;\t&lt;循环体语句&gt;</span><br><span class=\"line\">&#125;<span class=\"keyword\">while</span>(&lt;循环条件&gt;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/08/07/C%E8%AF%AD%E8%A8%80%E5%88%9D%E6%AC%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)/image-20230805170423462.png\" alt=\"image-20230805170423462\" data-caption=\"image-20230805170423462\" loading=\"lazy\">\n\n<p>do-while循环和while循环很像，区别在循环体执行结束的时候才来判断条件。也就是说，无论如何，<code>循环都会执行至少一边遍</code>，然后再来判断条件。与while循环相同的是，条件满足时执行循环，条件不满足时结束循环。</p>\n<ul>\n<li><strong>for循环</strong></li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(初始条件；循环继续条件；循环每一轮要做的事情）&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">......</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>for循环像一个计数循环：设定一个计数器，初始化它，然后在计数器到达某值之前，重复执行循环体，而每执行一轮循环，计数器值以一定步骤进行调整，比如加1或者减1。例如：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span> </span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">5</span>;i=i+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个代码会不断执行循环，直到i&#x3D;5时，程序会停止循环，结果输出为01234</p>\n<p>for&#x3D;对于</p>\n<p>for(count&#x3D;10;count&gt;0;count–)就读成：”对于一开始的count&#x3D;10,当count&gt;0时，重复做循环体，每一轮循环在做完循环体语句后，使得count–。“</p>\n<!--Tips：做求和的程序时，记录结果的变量应该初始化为0，而做求和积的变量时，记录结果的变量应该初始化为1-->\n\n<ul>\n<li><strong>循环次数</strong></li>\n</ul>\n<p>for(i&#x3D;0;i&lt;n;i++)则循环的次数是n，而循环结束以后，i的值是n.循环的控制变量i，是选择从0开始还是从1开始，是判断i&lt;n还是判断i&lt;&#x3D;n；对循环的次数，循环结束后变量的值有影响。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/08/07/C%E8%AF%AD%E8%A8%80%E5%88%9D%E6%AC%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)/image-20230805171655526.png\" alt=\"image-20230805171655526\" data-caption=\"image-20230805171655526\" loading=\"lazy\">\n\n<p>如果有固定次数，用for如果必须执行一次，用do-while其他情况用while</p>\n<hr>\n<h2 id=\"8-5\"><a href=\"#8-5\" class=\"headerlink\" title=\"8.5\"></a>8.5</h2><p>今天事情比较多，没学习新的东西，只回顾了几遍笔记。在晚上读了读《提问的智慧》，受益匪浅。</p>\n<hr>\n<h2 id=\"8-6\"><a href=\"#8-6\" class=\"headerlink\" title=\"8.6\"></a>8.6</h2><p>今天讲的是C语言的进一步判断和循环,主要学习的是以下两点：</p>\n<h3 id=\"1-级联和嵌套的判断\"><a href=\"#1-级联和嵌套的判断\" class=\"headerlink\" title=\"1.级联和嵌套的判断\"></a><strong>1.级联和嵌套的判断</strong></h3><ul>\n<li><strong>级联</strong></li>\n</ul>\n<p>类似于分段函数<br>if<br>else if<br>else<br>不用再进else里的大括号<br>单一出口原则程序里操作不要多次输出</p>\n<ul>\n<li><strong>嵌套</strong></li>\n</ul>\n<p>如果if条件满足或不满足时，又进一个if 这就是if的嵌套语句。<br>缩进不能影响else的匹配。在没有大括号时，else跟最近的if匹配。在if或else后始终用{}。</p>\n<p>此处内容与8.4中if-else的内容相近，就不再详细记录了。</p>\n<h3 id=\"2-多支分路\"><a href=\"#2-多支分路\" class=\"headerlink\" title=\"2.多支分路\"></a><strong>2.多支分路</strong></h3><ul>\n<li><strong>switch-case</strong></li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span>(控制表达式）&#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> 常量：</span><br><span class=\"line\">语句</span><br><span class=\"line\">......</span><br><span class=\"line\"><span class=\"keyword\">case</span> 常量：</span><br><span class=\"line\">语句</span><br><span class=\"line\">......</span><br><span class=\"line\"><span class=\"keyword\">default</span>:</span><br><span class=\"line\">语句</span><br><span class=\"line\">......</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>控制表达式只能是整数型的结果常量可以是常数，也可以是常数计算的表达式。</p>\n<p>不会像级联一样 从头判断，控制表达式只能是整数型（int）结果<br>如果没有break 会顺序执行下面的case case只是跳转，我们可以利用这个特性来进行不同需求的程序设计。</p>\n<hr>\n<h2 id=\"8-7\"><a href=\"#8-7\" class=\"headerlink\" title=\"8.7\"></a>8.7</h2><p>今天打算在完成C语言作业之余，多去了解些C语言相关知识，继续阅读《提问的智慧》，争取在今后的学习中，能够更好的提出有意义 的提问，得到学长们的有效解答。QWQ</p>\n<p>以上就是这七天中学习的东西。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"C语言初次学习笔记-1\"><a href=\"#C语言初次学习笔记-1\" class=\"headerlink\" title=\"C语言初次学习笔记(1)\"></a>C语言初次学习笔记(1)</h1><hr>\n<h2 id=\"8-1\"><a href=\"#8-1\" class=\"headerlink\" title=\"8.1\"></a>8.1</h2><p>晚上8点开始听网络安全专业启蒙沙龙，其中提到了pwn，re，misc（安全杂项），洛谷等专业名词，了解网安专业方向的多样性，在未来的学习中我们要选定一个方向去钻研。之后由毕业学长为我们介绍网安的未来就业前景和现状，最后总结结束了沙龙。</p>\n<hr>\n<h2 id=\"8-2\"><a href=\"#8-2\" class=\"headerlink\" title=\"8.2\"></a>8.2</h2><p>今天讲的是C语言基础，学习了一下四点内容：</p>\n<h3 id=\"1-c语言概述\"><a href=\"#1-c语言概述\" class=\"headerlink\" title=\"1.c语言概述\"></a><strong>1.c语言概述</strong></h3><ul>\n<li><p>介绍了什么是C语言</p>\n</li>\n<li><p>为什么要学习C语言</p>\n</li>\n</ul>\n<h3 id=\"2-第一个c语言程序\"><a href=\"#2-第一个c语言程序\" class=\"headerlink\" title=\"2.第一个c语言程序\"></a><strong>2.第一个c语言程序</strong></h3><p>第一个C语言程序便是最经典的“Hello World!”</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;studio.h&gt;</span><span class=\"comment\">//导包</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span><span class=\"comment\">//主函数</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Hello World!\\n&quot;</span>);<span class=\"comment\">//输出</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//程序正常退出</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<!--一定要注意程序格式不然在开学后用的pta程序会跑不起来-->\n\n<blockquote>\n<p>“ ”里面的内容叫做字符串，printf会把””中的内容原封不动地输出</p>\n<blockquote>\n<p>\\n表示需要在输出的结果后面换行</p>\n<blockquote>\n<p>%d说明后面有一个<strong>整数</strong>要输出在这个位置上</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;13+14=%d\\n&quot;</span>,<span class=\"number\">13</span>+<span class=\"number\">14</span>);</span><br></pre></td></tr></table></figure>\n<p>那么此时就会输出13+14&#x3D;27</p>\n<!--注意中文的分号；和英文的;的区别-->\n\n<h3 id=\"3-变量\"><a href=\"#3-变量\" class=\"headerlink\" title=\"3.变量\"></a><strong>3.变量</strong></h3><ul>\n<li>变量：变量是一个保存数据的地方</li>\n</ul>\n<p>变量定义的一般形式就是：**&lt;类型名称&gt;&lt;变量名称&gt;;**</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a;</span><br><span class=\"line\"><span class=\"type\">int</span> a,b;<span class=\"comment\">//在同一行中可以定义多个变量</span></span><br></pre></td></tr></table></figure>\n\n<p>C语言关键字不可以做标识符（变量的名字）如：<strong>int,break,case</strong></p>\n<ul>\n<li>赋值和初始化</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> price = <span class=\"number\">0</span><span class=\"comment\">//此时的赋值叫做初始化</span></span><br></pre></td></tr></table></figure>\n\n<p>这里的“&#x3D;”是一个赋值运算符，<strong>表示将“&#x3D;“右边的值赋给左边</strong></p>\n<p>a&#x3D;b和b&#x3D;a在程序设计中与数学中不一样，在程序设计中相当于两个意思</p>\n<p>a&#x3D;b相当于叫计算机把b的值给a，反之亦然</p>\n<p>例如：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span> </span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a=<span class=\"number\">4</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b=<span class=\"number\">2</span>;</span><br><span class=\"line\">    a=b;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a=%d\\n&quot;</span>,a);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>此时程序运行便会输出a&#x3D;2</p>\n<h3 id=\"4-浮点数\"><a href=\"#4-浮点数\" class=\"headerlink\" title=\"4.浮点数\"></a><strong>4.浮点数</strong></h3><ul>\n<li>浮点数：带有小数点的数</li>\n</ul>\n<p>10是整数(int)，而10.0是浮点数</p>\n<p>C语言中采用float和double关键字来定位浮点数</p>\n<p>float：单精度浮点数(可以表示6到7位有效数字)</p>\n<p>double：双精度浮点数(可有表示15到16位有效数字)</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">float</span> a;</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%f&quot;</span>,&amp;a);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%f&quot;</span>,a);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">double</span> b:</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lf&quot;</span>,&amp;b);</span><br><span class=\"line\">prinf(<span class=\"string\">&quot;%f&quot;</span>,b);</span><br></pre></td></tr></table></figure>\n\n<p>当浮点数和整数放在一起运算时，C会将整数转换成浮点数，然后进行浮点数运算</p>\n<ul>\n<li>表达式</li>\n</ul>\n<p>运算符:是指进行运算的动作，比如加法运算符”+”,减法运算符”-“</p>\n<p>算子：是指参与运算的之，这个值可能是常数，也可能是变量，还可能是一个方法的返回值</p>\n<p>比如：a&#x3D;b+6;</p>\n<p>那么其中运算符有”&#x3D;”、”+”，算子有”a“、”b“、”6“</p>\n<img src=\"/2023/08/07/C%E8%AF%AD%E8%A8%80%E5%88%9D%E6%AC%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)/image-20230805172114403.png\" alt=\"image-20230805172114403\" style=\"zoom: 67%;\">\n\n<p>遵循先乘除后加减的运算规则（取余也算除法运算）可以通过括号改变运算顺序</p>\n<hr>\n<h2 id=\"8-3\"><a href=\"#8-3\" class=\"headerlink\" title=\"8.3\"></a>8.3</h2><img src=\"/2023/08/07/C%E8%AF%AD%E8%A8%80%E5%88%9D%E6%AC%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)/image-20230805172454571.png\" alt=\"image-20230805172454571\" style=\"zoom:67%;\">\n\n<h3 id=\"git的使用方法\"><a href=\"#git的使用方法\" class=\"headerlink\" title=\"git的使用方法\"></a>git的使用方法</h3><p>克隆仓库：git clone git地址</p>\n<p>初始化仓库：git init </p>\n<p>添加文件到暂存区：git add -A </p>\n<p>把暂存区的文件提交到仓库：git commit -m</p>\n<p>查看提交的历史记录：git log –stat</p>\n<p>工作区回滚：git checkout filename</p>\n<p>撤销最后一次提交：git reset HEAD^1</p>\n<p>以当前分支为基础新建分支：git checkout -b branchname</p>\n<p>列举所有的分支：git branch </p>\n<p>单纯地切换到某个分支：git checkout branchname </p>\n<p>删掉特定的分支：git branch -D branchname </p>\n<p>合并分支：git merge branchname </p>\n<p>放弃合并：git merge –abort </p>\n<p>添加远程仓库：git remote add origin</p>\n<p>本地仓库改名：git branch -M main</p>\n<p>上传代码：git push -u origin main</p>\n<p>推送当前分支最新的提交到远程：git push</p>\n<p>拉取远程分支最新的提交到本地：git pull</p>\n<p>以上是git相关代码，也可以在<code>vscode</code>下载<code>GitLens</code>扩展插件来进行图形化操作，省去次次打代码 <del>复制代码</del> 的麻烦。</p>\n<p>学习了git相关的工作原理和如何在vscode中使用git来进行上传本地内容到github上建立的远程仓库中。但学习的仍然浅显，还需在多次实践和复习巩固中，了解掌握git的使用。</p>\n<p>假如我要更新个人博客的话，由于github在国内链接不稳定，通过vscode的powershell终端不一定能成功将本地库成功上传更新，所以我可以通过梯子来帮助，在梯子中打开cmd终端，先直接输入<code>&lt;目标硬盘&gt;:</code>进入到目标硬盘后，再输入<code>cd\\&lt;目标硬盘&gt;\\&lt;目标文件夹&gt;</code>打开我的blog文件夹，此时输入以下三条指令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .                      添加所有修改的文件</span><br><span class=\"line\">git commit -m &#x27;文字内容&#x27;         更新日志（文字内容可替换）</span><br><span class=\"line\">git push                       （推送更新）</span><br></pre></td></tr></table></figure>\n\n<p>就能实现将本地文件夹中的内容上传到远程仓库，更新自己的博客了。</p>\n<hr>\n<h2 id=\"8-4\"><a href=\"#8-4\" class=\"headerlink\" title=\"8.4\"></a>8.4</h2><p>今天讲的是C语言分支，主要有以下两点内容：</p>\n<h3 id=\"1-条件判断\"><a href=\"#1-条件判断\" class=\"headerlink\" title=\"1.条件判断\"></a><strong>1.条件判断</strong></h3><p>if(条件成立){…}如果条件成立，执行大括号里的内容，反之不执行，会跳过大括号里的内容。</p>\n<img src=\"/2023/08/07/C%E8%AF%AD%E8%A8%80%E5%88%9D%E6%AC%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)/image-20230805155452616.png\" alt=\"`image-20230805155452616`\" style=\"zoom:50%;\">\n\n<ul>\n<li>关系运算的结果：当两个值的关系符合关系运算符的预期时，关系运算的结果为整数1，否则为整数0</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span>`(“%d\\n”,<span class=\"number\">5</span>==<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(“%d\\n”,<span class=\"number\">5</span>&gt;<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(“%d\\n”,<span class=\"number\">5</span>&lt;=<span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>优先级：所有的关系运算符的优先级比算术运算的低，但是比赋值运算的高</li>\n</ul>\n<p><code>7&gt;=3+4</code> 优先级高于<code>int r = a&gt;0;</code></p>\n<p><code>==</code>和<code>！=</code>的优先级比其他的低，而连续的关系运算是从左到右进行的</p>\n<p><code>5&gt;3==6&gt;4</code>  <code>6&gt;5&gt;4</code> <code>a==b==6</code> <code>a==b&gt;0</code></p>\n<ul>\n<li>注释：插入在程序代码中，用来向读者提高解释信息。它们对程序没有任何影响，但是往往使得程序更容易被人类读者理解。</li>\n</ul>\n<p>注释分为：<code>//</code>和<code>/**/</code></p>\n<p><code>//</code>是单行注释，<code>/**/</code>是多行注释，以<code>/*</code>开始,以<code>*/</code>结束</p>\n<p><strong>如果</strong></p>\n<p>如果条件不满足，做另一件事</p>\n<p>else&#x3D;否则的话</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(条件)&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>if语句</p>\n<p>一个基本的if语句由一个关键字开头，跟在括号里的一个表示条件的逻辑表达式，然后是一对大括号”{}”之间的若干条语句。如果表示条件的逻辑表达式的结果不是零，那么就执行后面跟着的这对大括号中的语句，否则就跳过这些语句不执行，而执行下面的其他语句。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f(total&gt;amount)  total=total+amount+<span class=\"number\">10</span>;</span><br></pre></td></tr></table></figure>\n\n<p>if语句这一行结束的时候并没有表示语句结束的“；”，而在后面的赋值语句写在if的下一行，并且缩进了，在这一行结束的时候有一个表示语句结束的“；”。这表明这条赋值语句是if语句的一部分，if语句拥有和控制这条赋值语句，决定它是否要被执行。</p>\n<p>PS：以下是某学长给予的宝贵知识，此处整合到周报中用来一并记忆学习</p>\n<h2 id=\"if-else\"><a href=\"#if-else\" class=\"headerlink\" title=\"if-else\"></a>if-else</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(条件) &#123;</span><br><span class=\"line\">    执行语句</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    执行语句</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>else</code> 是可有可无的</p>\n<p>当 <code>if</code> 条件满足时会执行 <code>if</code> 里面的语句，否则</p>\n<ul>\n<li><p>如果有 <code>else</code> 则执行 <code>else</code></p>\n<ul>\n<li><p>如果 <code>else</code> 后有 <code>if</code> ，将会再次判断是否符合，否则执行 <code>else</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(a&gt;<span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a大于100&quot;</span>);</span><br><span class=\"line\">    xxxxxx;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a&gt;<span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a大于10且小于等于100&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a&gt;<span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a大于5且a小于等于10&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a小于等于5&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>区别：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a = <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(a&gt;<span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a大于100&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"comment\">//else&#123;&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(a&gt;<span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a大于10且小于等于100&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"comment\">//else&#123;&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(a&gt;<span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a大于5且a小于等于10&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a小于等于5&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>如果没有 <code>else</code> 将不会执行</p>\n</li>\n</ul>\n<p>if简写</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(a&gt;<span class=\"number\">10</span>) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a大于10&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;a小于等于10&quot;</span>);xxxxxx;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>if 嵌套</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(a) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b) &#123;</span><br><span class=\"line\">        xxx</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        xxxx</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    xxxxx</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-循环\"><a href=\"#2-循环\" class=\"headerlink\" title=\"2.循环\"></a><strong>2.循环</strong></h3><p>while(条件){…}从语法角度看循环和if类似，区别在于if指只会执行一次，while会执行多次。</p>\n<img src=\"/2023/08/07/C%E8%AF%AD%E8%A8%80%E5%88%9D%E6%AC%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)/image-20230805165608821.png\" alt=\"image-20230805165608821\" style=\"zoom:80%;\">\n\n<ul>\n<li><strong>while循环</strong></li>\n</ul>\n<p>如果我们把while翻译作“当”，那么一个while循环的意思是：当条件满足时，不断地重复循环体内的语句。循环之前需要判断是否符合条件才能进入循环，所以有可能循环一次也没执行。条件成立是循环继续的基础。</p>\n<p>验证：测试程序常使用边界数据，如有效范围两端的数据，特殊的倍数等，在代码执行前一般都需要模拟一下。</p>\n<ul>\n<li><strong>do-while循环</strong></li>\n</ul>\n<p>在进入循环体的时候不做检查，而是在执行完一轮循环体的代码后，再来检查循环的条件是否满足，如果满足则继续下一轮循环，不满足则结束循环。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">&#123;\t&lt;循环体语句&gt;</span><br><span class=\"line\">&#125;<span class=\"keyword\">while</span>(&lt;循环条件&gt;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2023/08/07/C%E8%AF%AD%E8%A8%80%E5%88%9D%E6%AC%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)/image-20230805170423462.png\" alt=\"image-20230805170423462\" style=\"zoom:67%;\">\n\n<p>do-while循环和while循环很像，区别在循环体执行结束的时候才来判断条件。也就是说，无论如何，<code>循环都会执行至少一边遍</code>，然后再来判断条件。与while循环相同的是，条件满足时执行循环，条件不满足时结束循环。</p>\n<ul>\n<li><strong>for循环</strong></li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(初始条件；循环继续条件；循环每一轮要做的事情）&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">......</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>for循环像一个计数循环：设定一个计数器，初始化它，然后在计数器到达某值之前，重复执行循环体，而每执行一轮循环，计数器值以一定步骤进行调整，比如加1或者减1。例如：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span> </span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">5</span>;i=i+<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个代码会不断执行循环，直到i&#x3D;5时，程序会停止循环，结果输出为01234</p>\n<p>for&#x3D;对于</p>\n<p>for(count&#x3D;10;count&gt;0;count–)就读成：”对于一开始的count&#x3D;10,当count&gt;0时，重复做循环体，每一轮循环在做完循环体语句后，使得count–。“</p>\n<!--Tips：做求和的程序时，记录结果的变量应该初始化为0，而做求和积的变量时，记录结果的变量应该初始化为1-->\n\n<ul>\n<li><strong>循环次数</strong></li>\n</ul>\n<p>for(i&#x3D;0;i&lt;n;i++)则循环的次数是n，而循环结束以后，i的值是n.循环的控制变量i，是选择从0开始还是从1开始，是判断i&lt;n还是判断i&lt;&#x3D;n；对循环的次数，循环结束后变量的值有影响。</p>\n<img src=\"/2023/08/07/C%E8%AF%AD%E8%A8%80%E5%88%9D%E6%AC%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)/image-20230805171655526.png\" alt=\"image-20230805171655526\" style=\"zoom: 67%;\">\n\n<p>如果有固定次数，用for如果必须执行一次，用do-while其他情况用while</p>\n<hr>\n<h2 id=\"8-5\"><a href=\"#8-5\" class=\"headerlink\" title=\"8.5\"></a>8.5</h2><p>今天事情比较多，没学习新的东西，只回顾了几遍笔记。在晚上读了读《提问的智慧》，受益匪浅。</p>\n<hr>\n<h2 id=\"8-6\"><a href=\"#8-6\" class=\"headerlink\" title=\"8.6\"></a>8.6</h2><p>今天讲的是C语言的进一步判断和循环,主要学习的是以下两点：</p>\n<h3 id=\"1-级联和嵌套的判断\"><a href=\"#1-级联和嵌套的判断\" class=\"headerlink\" title=\"1.级联和嵌套的判断\"></a><strong>1.级联和嵌套的判断</strong></h3><ul>\n<li><strong>级联</strong></li>\n</ul>\n<p>类似于分段函数<br>if<br>else if<br>else<br>不用再进else里的大括号<br>单一出口原则程序里操作不要多次输出</p>\n<ul>\n<li><strong>嵌套</strong></li>\n</ul>\n<p>如果if条件满足或不满足时，又进一个if 这就是if的嵌套语句。<br>缩进不能影响else的匹配。在没有大括号时，else跟最近的if匹配。在if或else后始终用{}。</p>\n<p>此处内容与8.4中if-else的内容相近，就不再详细记录了。</p>\n<h3 id=\"2-多支分路\"><a href=\"#2-多支分路\" class=\"headerlink\" title=\"2.多支分路\"></a><strong>2.多支分路</strong></h3><ul>\n<li><strong>switch-case</strong></li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span>(控制表达式）&#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> 常量：</span><br><span class=\"line\">语句</span><br><span class=\"line\">......</span><br><span class=\"line\"><span class=\"keyword\">case</span> 常量：</span><br><span class=\"line\">语句</span><br><span class=\"line\">......</span><br><span class=\"line\"><span class=\"keyword\">default</span>:</span><br><span class=\"line\">语句</span><br><span class=\"line\">......</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>控制表达式只能是整数型的结果常量可以是常数，也可以是常数计算的表达式。</p>\n<p>不会像级联一样 从头判断，控制表达式只能是整数型（int）结果<br>如果没有break 会顺序执行下面的case case只是跳转，我们可以利用这个特性来进行不同需求的程序设计。</p>\n<hr>\n<h2 id=\"8-7\"><a href=\"#8-7\" class=\"headerlink\" title=\"8.7\"></a>8.7</h2><p>今天打算在完成C语言作业之余，多去了解些C语言相关知识，继续阅读《提问的智慧》，争取在今后的学习中，能够更好的提出有意义 的提问，得到学长们的有效解答。QWQ</p>\n<p>以上就是这七天中学习的东西。</p>\n"},{"title":"C语言初次学习笔记(2)","date":"2023-08-15T11:45:10.000Z","cover":"/illust_79559380_20210801_212327.png","_content":"# C语言初次学习笔记(2)\n\n### **1. 数据类型**\n\n- **字节**\n\n计算机专用的一种计量单位，一个字节代表了8个二进制位也就是256（0000 0000）2的8次方\n两个字节（BYTE）构成一个字（WORD），两个字（WORD）构成一个双字（DOUBLE WORD）\n\n双字可简写为DWORD，相当于四个字节\n\n> Q：为什么会有数据类型？\n>\n> A：在C语言中，数据类型指的是用于声明不同类型的变量或函数的一个广泛的系统。变量的类型决定了变量储存占用的空间，以及如何结束储存的位模式。\n\n#### C语言的数据类型共分为：\n\n1.基本类型：包括整形（int），浮点型（float），字符型（char），和双精度浮点型（double）\n\n2.枚举类型被用来定义在程序中只能赋予其一定的离散整数值的变量\n\n3.void类型：表示没有值的数据类型，通常用于函数返回值\n\n4.派生类型：包括数组类型，指针类型和结构体类型\n\n- **有符号和无符号关键字**\n\nSigned：类型默认位signed，也就是有符号数\n\nUnisigned：可以搭配基本类型进行定义，无符号数关键字\n\n有符号数和无符号数区分：\n\n有符号数就是负数，正数就是正数；无符号数负数也代表了一个正数\n\n```c\n#include <stdio.h>\nint main()\n{\n    int a=3;\n    int b=-1;\n    printf(\" %d %u \",a,a);\n    printf(\" %d %u \",b,b);\n    //%u就是unsigned int的占位符\n    return 0;\n}\n```\n\n输出的结果却是` 3 3  -1 4294967295  ` 4294967295可以看作范围的终点，而范围又可以看作是一个圆圈，过了这个终点又会变为起点，所以4294967295+1输出是0，这就是数据的溢出。\n\n- **sizeof()操作符**：用来查看参数的大小，操作数可以是变量，也可以是数据类型\n\n1.用于数据类型\n\nsizeof使用形式：sizeof(type)\t数据类型必须用括号括住：sizeof(int)\n\n2.用于变量\n\nsizeof使用形式：sizeo(var_name)或sizeof\tvar_name\n\n变量名可以不用括号括住 如：sizeof(var_name), sizeof\tvar_name等都是正确形式\n\n注意：sizeof操作符不能用于函数类型，不完全类型或位字段。\n\nsizeof操作符的结果类型是**size_t**\n\n#### 基本类型\n\n字符型：关键字char类型，用于对小型整数或者字符变量进行定义，可以搭配unsigned做无符号数使用，当是有符号数时数据宽度是-128~127，当是无符号数的时候数据宽度是0~256.char类型大小是1字节，占位符是%c。\n\n> 1字节==8比特(bit)==256\n\n计算机表示字符的方式：\n\nascall码：计算机方便对英文字符进行编码的操作码，一个ascall码有八位(1字节)\n\nunicode：计算机对各国字符统一进行的编码，一个unicode码有十六位(2字节)\n\n- 短整形：关键字short类型，用于对较小整数进行定义，可以搭配unsigned做无符号数使用，当是有符号数时数据宽度时-32768~32767，当时无符号数的时候数据宽度是0~65535。short类型大小是2字节，占位符是%hd。\n\n- 整形：关键字int类型，用于对一般整数进行定义，可以搭配unsigned做无符号数使用，当是有符号数时数据宽度时-2147483648~2147483647，当是无符号数的时候数据宽度是0~4294967296。int类型大小是4字节，占位符是%d。\n\n- 浮点形：关键字float类型，用于对浮点数进行定义，数据宽度是1.2E-38~3.4E+38。float类型大小是4字节，占位符是%f，精度范围是6位有效位。\n\n- 浮点形：关键字double类型，用于对浮点数进行定义，数据宽度是2.3E-308~3.4E+308。double类型大小是8字节，占位符是%f，精度范围是15位有效位。\n\n- void类型\n\nvoid，也就是无类型，\"无效的或完全空白的\"\n\n最熟悉的用途是：\n\n·虚函数返回类型\n\n·虚函数作为功能参数\n\n·空指针声明\n\n空指针(void*)：void指针可以指向任意类型的数据，就是说可以用任意类型的指针对void指针对void指针赋值\n\n当函数不需要返回值时，必须使用void限定，这就是我们所说的第一种情况。\n\n例如：void func(int a,char *b)。\n\n当函数不允许接受参数时，必须使用void限定，这就是我们所说的第二种情况。\n\n例如：int func(void)。\n\n<img src=\"C语言初次学习笔记(2)/image-20230812202043325.png\" alt=\"image-20230812202043325\" style=\"zoom: 50%;\" />\n\n### 2.函数\n\n函数是一组一起执行一个任务的语句。每个C程序都至少有一个函数，即主函数main()，所有简单的\n\n程序都可以定义其他额外的函数。\n\n您可以把代码划分到不同的函数中。如何划分代码到不同的函数中是由您来决定的，但在逻辑上，花灯通常是根据每个函数执行一个特定的任务来进行的。\n\n函数声明告诉编译器函数的名称、返回类型和参数。函数定义提供了函数的实际主体。\n\n函数形式\n\nreturn_type function_name(parameter list)\n{\nbody of the function\n}\n\n在C语言中，函数由一个函数头和一个函数主体组成。下面列出一个函数的所有组成部分：\n\n- 返回类型：一个函数可以i返回一个值。return_type是函数返回的值的数据类型。有些函数执行所需的操作而不返回值，在这种情况下，return_type是关键字void。\n- 函数名称：这是函数的实际名称。函数名和参数古列表一起构成了函数签名。\n- 参数：参数就像是占位符。当函数被调用时，您向参数传递一个值，这个值被称为实际参数。参数列表包括函数参数的类型、顺序、数量。参数是可选的，也就是说，函数可能不包含参数\n- 函数主体：函数主体包括一组定义函数执行任务的语句。\n\n函数例子\n\n```c\n#include <studio.h>\nint add(int a ,int b)/*左边代码add()表示一个加法的函数*/\n{\n    int c = a + b;/*这个函数在被调用时传递了两个参数，第一个是a,第二个是b*/\n    return c;\n}/*函数功能是借用函数里面定义的一个变量c来对a和b相加，再将这个变量c传递出去(return)*/\nint main()\n{\n    int a = 10;\n    int b = 5;\n    int c = add(a,b);\n    printf(\"%d\",c);\n}\n```\n\n我们可以通过将函数封装起来形成⼀个头文件，只需在使用时从头文件中调用函数，就可以使得main函数里面只需要⼀个函数便实现题目所需要的各种功能。\n\n### **3.数组**\n\n- 数组定义(array)\n\n数组是一个固定长度的储存相同数据类型的数据结构，数组中的元素被储存在一段连续的内存空间中。它是最简单的数据结构之一，大多数现代编程语言都内置数组支持。\n\n<img src=\"C语言初次学习笔记(2)/image-20230815170254386.png\" alt=\"image-20230815170254386\" style=\"zoom: 50%;\" />\n\n数组特点\n\n1.数组必须有相应的数据类型，而且数组里面元素的类型必须和数组本身的类型相对应。\n\n2.数组元素的个数和数组本身的大小有关系。\n\n3.数组通过下标遍历（循环）、寻找元素\n\n4.数组可以被函数调用（数组本身是一个变量）\n\n- 数组应用\n\n数组可以把许多相同的元素整合到一起保存使用，比如对输入能够直接使用数组输入，而不必像之前一样将scanf放在for循环里面。\n\n- 字符数组（字符串）\n\n字符数组实际上是一系列字符的集合，也就是字符串(String)\n\n在C语言中，没有专门的字符串变量，没有string类型，通常就用一个字符数组来存放一个字符串。在C语言中，字符串总是以 `\\0`作为结尾，所以`\\0`也被称为字符串结束标志，或者字符串结束符由`\"\"`包围的字符串会自动在末尾添加`\\0`。\n\n例如：`\"abc\"`看起来只包含了3个字符，但C语言会在最后添加一个`\\0`，但我们感受不到。而由`''`赋值的字符串则不会在末尾自动加\\0，若要以`%s`输出，则会输出错误，应该在末尾手动添加`\"\\0\"`。\n\n- 多维数组\n\nC语言的多维数组就相当于是元素为数组的数组（套娃）\n\n数组例题：用数组逆序输出一组个数为0~10的数\n\n```c\n#include <stdio.h>\nint main()\n{\n\tint number=0;\n\tscanf_s(\"%d\",&number);\n\tint array[10];\n\tfor(int i=0;i<number;i++)\n\t{\n\t\tscanf_s(\"%d\",&array[i]);\n\t}\n\tfor(int i=0;i<number/2;i++)\n\t{\n\t\t int temp=array[i];\n\t\tarray[i]=array[number-i -1];\n\t\tarray[number-i -1]=temp;\n\t}\n\tfor(int i=0;i<number;i++)\n\t{\n\t\tprintf(\"%d \",array[i]);\n\t}\n}\n```\n\n\n\n","source":"_posts/C语言初次学习笔记(2).md","raw":"---\ntitle: C语言初次学习笔记(2)\ndate: 2023-08-15 19:45:10\ncover: /illust_79559380_20210801_212327.png\ntags: 笔记\n---\n# C语言初次学习笔记(2)\n\n### **1. 数据类型**\n\n- **字节**\n\n计算机专用的一种计量单位，一个字节代表了8个二进制位也就是256（0000 0000）2的8次方\n两个字节（BYTE）构成一个字（WORD），两个字（WORD）构成一个双字（DOUBLE WORD）\n\n双字可简写为DWORD，相当于四个字节\n\n> Q：为什么会有数据类型？\n>\n> A：在C语言中，数据类型指的是用于声明不同类型的变量或函数的一个广泛的系统。变量的类型决定了变量储存占用的空间，以及如何结束储存的位模式。\n\n#### C语言的数据类型共分为：\n\n1.基本类型：包括整形（int），浮点型（float），字符型（char），和双精度浮点型（double）\n\n2.枚举类型被用来定义在程序中只能赋予其一定的离散整数值的变量\n\n3.void类型：表示没有值的数据类型，通常用于函数返回值\n\n4.派生类型：包括数组类型，指针类型和结构体类型\n\n- **有符号和无符号关键字**\n\nSigned：类型默认位signed，也就是有符号数\n\nUnisigned：可以搭配基本类型进行定义，无符号数关键字\n\n有符号数和无符号数区分：\n\n有符号数就是负数，正数就是正数；无符号数负数也代表了一个正数\n\n```c\n#include <stdio.h>\nint main()\n{\n    int a=3;\n    int b=-1;\n    printf(\" %d %u \",a,a);\n    printf(\" %d %u \",b,b);\n    //%u就是unsigned int的占位符\n    return 0;\n}\n```\n\n输出的结果却是` 3 3  -1 4294967295  ` 4294967295可以看作范围的终点，而范围又可以看作是一个圆圈，过了这个终点又会变为起点，所以4294967295+1输出是0，这就是数据的溢出。\n\n- **sizeof()操作符**：用来查看参数的大小，操作数可以是变量，也可以是数据类型\n\n1.用于数据类型\n\nsizeof使用形式：sizeof(type)\t数据类型必须用括号括住：sizeof(int)\n\n2.用于变量\n\nsizeof使用形式：sizeo(var_name)或sizeof\tvar_name\n\n变量名可以不用括号括住 如：sizeof(var_name), sizeof\tvar_name等都是正确形式\n\n注意：sizeof操作符不能用于函数类型，不完全类型或位字段。\n\nsizeof操作符的结果类型是**size_t**\n\n#### 基本类型\n\n字符型：关键字char类型，用于对小型整数或者字符变量进行定义，可以搭配unsigned做无符号数使用，当是有符号数时数据宽度是-128~127，当是无符号数的时候数据宽度是0~256.char类型大小是1字节，占位符是%c。\n\n> 1字节==8比特(bit)==256\n\n计算机表示字符的方式：\n\nascall码：计算机方便对英文字符进行编码的操作码，一个ascall码有八位(1字节)\n\nunicode：计算机对各国字符统一进行的编码，一个unicode码有十六位(2字节)\n\n- 短整形：关键字short类型，用于对较小整数进行定义，可以搭配unsigned做无符号数使用，当是有符号数时数据宽度时-32768~32767，当时无符号数的时候数据宽度是0~65535。short类型大小是2字节，占位符是%hd。\n\n- 整形：关键字int类型，用于对一般整数进行定义，可以搭配unsigned做无符号数使用，当是有符号数时数据宽度时-2147483648~2147483647，当是无符号数的时候数据宽度是0~4294967296。int类型大小是4字节，占位符是%d。\n\n- 浮点形：关键字float类型，用于对浮点数进行定义，数据宽度是1.2E-38~3.4E+38。float类型大小是4字节，占位符是%f，精度范围是6位有效位。\n\n- 浮点形：关键字double类型，用于对浮点数进行定义，数据宽度是2.3E-308~3.4E+308。double类型大小是8字节，占位符是%f，精度范围是15位有效位。\n\n- void类型\n\nvoid，也就是无类型，\"无效的或完全空白的\"\n\n最熟悉的用途是：\n\n·虚函数返回类型\n\n·虚函数作为功能参数\n\n·空指针声明\n\n空指针(void*)：void指针可以指向任意类型的数据，就是说可以用任意类型的指针对void指针对void指针赋值\n\n当函数不需要返回值时，必须使用void限定，这就是我们所说的第一种情况。\n\n例如：void func(int a,char *b)。\n\n当函数不允许接受参数时，必须使用void限定，这就是我们所说的第二种情况。\n\n例如：int func(void)。\n\n<img src=\"C语言初次学习笔记(2)/image-20230812202043325.png\" alt=\"image-20230812202043325\" style=\"zoom: 50%;\" />\n\n### 2.函数\n\n函数是一组一起执行一个任务的语句。每个C程序都至少有一个函数，即主函数main()，所有简单的\n\n程序都可以定义其他额外的函数。\n\n您可以把代码划分到不同的函数中。如何划分代码到不同的函数中是由您来决定的，但在逻辑上，花灯通常是根据每个函数执行一个特定的任务来进行的。\n\n函数声明告诉编译器函数的名称、返回类型和参数。函数定义提供了函数的实际主体。\n\n函数形式\n\nreturn_type function_name(parameter list)\n{\nbody of the function\n}\n\n在C语言中，函数由一个函数头和一个函数主体组成。下面列出一个函数的所有组成部分：\n\n- 返回类型：一个函数可以i返回一个值。return_type是函数返回的值的数据类型。有些函数执行所需的操作而不返回值，在这种情况下，return_type是关键字void。\n- 函数名称：这是函数的实际名称。函数名和参数古列表一起构成了函数签名。\n- 参数：参数就像是占位符。当函数被调用时，您向参数传递一个值，这个值被称为实际参数。参数列表包括函数参数的类型、顺序、数量。参数是可选的，也就是说，函数可能不包含参数\n- 函数主体：函数主体包括一组定义函数执行任务的语句。\n\n函数例子\n\n```c\n#include <studio.h>\nint add(int a ,int b)/*左边代码add()表示一个加法的函数*/\n{\n    int c = a + b;/*这个函数在被调用时传递了两个参数，第一个是a,第二个是b*/\n    return c;\n}/*函数功能是借用函数里面定义的一个变量c来对a和b相加，再将这个变量c传递出去(return)*/\nint main()\n{\n    int a = 10;\n    int b = 5;\n    int c = add(a,b);\n    printf(\"%d\",c);\n}\n```\n\n我们可以通过将函数封装起来形成⼀个头文件，只需在使用时从头文件中调用函数，就可以使得main函数里面只需要⼀个函数便实现题目所需要的各种功能。\n\n### **3.数组**\n\n- 数组定义(array)\n\n数组是一个固定长度的储存相同数据类型的数据结构，数组中的元素被储存在一段连续的内存空间中。它是最简单的数据结构之一，大多数现代编程语言都内置数组支持。\n\n<img src=\"C语言初次学习笔记(2)/image-20230815170254386.png\" alt=\"image-20230815170254386\" style=\"zoom: 50%;\" />\n\n数组特点\n\n1.数组必须有相应的数据类型，而且数组里面元素的类型必须和数组本身的类型相对应。\n\n2.数组元素的个数和数组本身的大小有关系。\n\n3.数组通过下标遍历（循环）、寻找元素\n\n4.数组可以被函数调用（数组本身是一个变量）\n\n- 数组应用\n\n数组可以把许多相同的元素整合到一起保存使用，比如对输入能够直接使用数组输入，而不必像之前一样将scanf放在for循环里面。\n\n- 字符数组（字符串）\n\n字符数组实际上是一系列字符的集合，也就是字符串(String)\n\n在C语言中，没有专门的字符串变量，没有string类型，通常就用一个字符数组来存放一个字符串。在C语言中，字符串总是以 `\\0`作为结尾，所以`\\0`也被称为字符串结束标志，或者字符串结束符由`\"\"`包围的字符串会自动在末尾添加`\\0`。\n\n例如：`\"abc\"`看起来只包含了3个字符，但C语言会在最后添加一个`\\0`，但我们感受不到。而由`''`赋值的字符串则不会在末尾自动加\\0，若要以`%s`输出，则会输出错误，应该在末尾手动添加`\"\\0\"`。\n\n- 多维数组\n\nC语言的多维数组就相当于是元素为数组的数组（套娃）\n\n数组例题：用数组逆序输出一组个数为0~10的数\n\n```c\n#include <stdio.h>\nint main()\n{\n\tint number=0;\n\tscanf_s(\"%d\",&number);\n\tint array[10];\n\tfor(int i=0;i<number;i++)\n\t{\n\t\tscanf_s(\"%d\",&array[i]);\n\t}\n\tfor(int i=0;i<number/2;i++)\n\t{\n\t\t int temp=array[i];\n\t\tarray[i]=array[number-i -1];\n\t\tarray[number-i -1]=temp;\n\t}\n\tfor(int i=0;i<number;i++)\n\t{\n\t\tprintf(\"%d \",array[i]);\n\t}\n}\n```\n\n\n\n","slug":"C语言初次学习笔记(2)","published":1,"updated":"2023-12-09T10:19:53.828Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq0w2cle000a8wv57x7k4k3a","content":"<h1 id=\"C语言初次学习笔记-2\"><a href=\"#C语言初次学习笔记-2\" class=\"headerlink\" title=\"C语言初次学习笔记(2)\"></a>C语言初次学习笔记(2)</h1><h3 id=\"1-数据类型\"><a href=\"#1-数据类型\" class=\"headerlink\" title=\"1. 数据类型\"></a><strong>1. 数据类型</strong></h3><ul>\n<li><strong>字节</strong></li>\n</ul>\n<p>计算机专用的一种计量单位，一个字节代表了8个二进制位也就是256（0000 0000）2的8次方<br>两个字节（BYTE）构成一个字（WORD），两个字（WORD）构成一个双字（DOUBLE WORD）</p>\n<p>双字可简写为DWORD，相当于四个字节</p>\n<blockquote>\n<p>Q：为什么会有数据类型？</p>\n<p>A：在C语言中，数据类型指的是用于声明不同类型的变量或函数的一个广泛的系统。变量的类型决定了变量储存占用的空间，以及如何结束储存的位模式。</p>\n</blockquote>\n<h4 id=\"C语言的数据类型共分为：\"><a href=\"#C语言的数据类型共分为：\" class=\"headerlink\" title=\"C语言的数据类型共分为：\"></a>C语言的数据类型共分为：</h4><p>1.基本类型：包括整形（int），浮点型（float），字符型（char），和双精度浮点型（double）</p>\n<p>2.枚举类型被用来定义在程序中只能赋予其一定的离散整数值的变量</p>\n<p>3.void类型：表示没有值的数据类型，通常用于函数返回值</p>\n<p>4.派生类型：包括数组类型，指针类型和结构体类型</p>\n<ul>\n<li><strong>有符号和无符号关键字</strong></li>\n</ul>\n<p>Signed：类型默认位signed，也就是有符号数</p>\n<p>Unisigned：可以搭配基本类型进行定义，无符号数关键字</p>\n<p>有符号数和无符号数区分：</p>\n<p>有符号数就是负数，正数就是正数；无符号数负数也代表了一个正数</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a=<span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b=<span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot; %d %u &quot;</span>,a,a);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot; %d %u &quot;</span>,b,b);</span><br><span class=\"line\">    <span class=\"comment\">//%u就是unsigned int的占位符</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输出的结果却是<code>3 3  -1 4294967295 </code> 4294967295可以看作范围的终点，而范围又可以看作是一个圆圈，过了这个终点又会变为起点，所以4294967295+1输出是0，这就是数据的溢出。</p>\n<ul>\n<li><strong>sizeof()操作符</strong>：用来查看参数的大小，操作数可以是变量，也可以是数据类型</li>\n</ul>\n<p>1.用于数据类型</p>\n<p>sizeof使用形式：sizeof(type)\t数据类型必须用括号括住：sizeof(int)</p>\n<p>2.用于变量</p>\n<p>sizeof使用形式：sizeo(var_name)或sizeof\tvar_name</p>\n<p>变量名可以不用括号括住 如：sizeof(var_name), sizeof\tvar_name等都是正确形式</p>\n<p>注意：sizeof操作符不能用于函数类型，不完全类型或位字段。</p>\n<p>sizeof操作符的结果类型是<strong>size_t</strong></p>\n<h4 id=\"基本类型\"><a href=\"#基本类型\" class=\"headerlink\" title=\"基本类型\"></a>基本类型</h4><p>字符型：关键字char类型，用于对小型整数或者字符变量进行定义，可以搭配unsigned做无符号数使用，当是有符号数时数据宽度是-128<del>127，当是无符号数的时候数据宽度是0</del>256.char类型大小是1字节，占位符是%c。</p>\n<blockquote>\n<p>1字节&#x3D;&#x3D;8比特(bit)&#x3D;&#x3D;256</p>\n</blockquote>\n<p>计算机表示字符的方式：</p>\n<p>ascall码：计算机方便对英文字符进行编码的操作码，一个ascall码有八位(1字节)</p>\n<p>unicode：计算机对各国字符统一进行的编码，一个unicode码有十六位(2字节)</p>\n<ul>\n<li><p>短整形：关键字short类型，用于对较小整数进行定义，可以搭配unsigned做无符号数使用，当是有符号数时数据宽度时-32768<del>32767，当时无符号数的时候数据宽度是0</del>65535。short类型大小是2字节，占位符是%hd。</p>\n</li>\n<li><p>整形：关键字int类型，用于对一般整数进行定义，可以搭配unsigned做无符号数使用，当是有符号数时数据宽度时-2147483648<del>2147483647，当是无符号数的时候数据宽度是0</del>4294967296。int类型大小是4字节，占位符是%d。</p>\n</li>\n<li><p>浮点形：关键字float类型，用于对浮点数进行定义，数据宽度是1.2E-38~3.4E+38。float类型大小是4字节，占位符是%f，精度范围是6位有效位。</p>\n</li>\n<li><p>浮点形：关键字double类型，用于对浮点数进行定义，数据宽度是2.3E-308~3.4E+308。double类型大小是8字节，占位符是%f，精度范围是15位有效位。</p>\n</li>\n<li><p>void类型</p>\n</li>\n</ul>\n<p>void，也就是无类型，”无效的或完全空白的”</p>\n<p>最熟悉的用途是：</p>\n<p>·虚函数返回类型</p>\n<p>·虚函数作为功能参数</p>\n<p>·空指针声明</p>\n<p>空指针(void*)：void指针可以指向任意类型的数据，就是说可以用任意类型的指针对void指针对void指针赋值</p>\n<p>当函数不需要返回值时，必须使用void限定，这就是我们所说的第一种情况。</p>\n<p>例如：void func(int a,char *b)。</p>\n<p>当函数不允许接受参数时，必须使用void限定，这就是我们所说的第二种情况。</p>\n<p>例如：int func(void)。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/08/15/C%E8%AF%AD%E8%A8%80%E5%88%9D%E6%AC%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(2)/image-20230812202043325.png\" alt=\"image-20230812202043325\" data-caption=\"image-20230812202043325\" loading=\"lazy\">\n\n<h3 id=\"2-函数\"><a href=\"#2-函数\" class=\"headerlink\" title=\"2.函数\"></a>2.函数</h3><p>函数是一组一起执行一个任务的语句。每个C程序都至少有一个函数，即主函数main()，所有简单的</p>\n<p>程序都可以定义其他额外的函数。</p>\n<p>您可以把代码划分到不同的函数中。如何划分代码到不同的函数中是由您来决定的，但在逻辑上，花灯通常是根据每个函数执行一个特定的任务来进行的。</p>\n<p>函数声明告诉编译器函数的名称、返回类型和参数。函数定义提供了函数的实际主体。</p>\n<p>函数形式</p>\n<p>return_type function_name(parameter list)<br>{<br>body of the function<br>}</p>\n<p>在C语言中，函数由一个函数头和一个函数主体组成。下面列出一个函数的所有组成部分：</p>\n<ul>\n<li>返回类型：一个函数可以i返回一个值。return_type是函数返回的值的数据类型。有些函数执行所需的操作而不返回值，在这种情况下，return_type是关键字void。</li>\n<li>函数名称：这是函数的实际名称。函数名和参数古列表一起构成了函数签名。</li>\n<li>参数：参数就像是占位符。当函数被调用时，您向参数传递一个值，这个值被称为实际参数。参数列表包括函数参数的类型、顺序、数量。参数是可选的，也就是说，函数可能不包含参数</li>\n<li>函数主体：函数主体包括一组定义函数执行任务的语句。</li>\n</ul>\n<p>函数例子</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;studio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">add</span><span class=\"params\">(<span class=\"type\">int</span> a ,<span class=\"type\">int</span> b)</span><span class=\"comment\">/*左边代码add()表示一个加法的函数*/</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> c = a + b;<span class=\"comment\">/*这个函数在被调用时传递了两个参数，第一个是a,第二个是b*/</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*函数功能是借用函数里面定义的一个变量c来对a和b相加，再将这个变量c传递出去(return)*/</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b = <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> c = add(a,b);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,c);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>我们可以通过将函数封装起来形成⼀个头文件，只需在使用时从头文件中调用函数，就可以使得main函数里面只需要⼀个函数便实现题目所需要的各种功能。</p>\n<h3 id=\"3-数组\"><a href=\"#3-数组\" class=\"headerlink\" title=\"3.数组\"></a><strong>3.数组</strong></h3><ul>\n<li>数组定义(array)</li>\n</ul>\n<p>数组是一个固定长度的储存相同数据类型的数据结构，数组中的元素被储存在一段连续的内存空间中。它是最简单的数据结构之一，大多数现代编程语言都内置数组支持。</p>\n<img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/2023/08/15/C%E8%AF%AD%E8%A8%80%E5%88%9D%E6%AC%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(2)/image-20230815170254386.png\" alt=\"image-20230815170254386\" data-caption=\"image-20230815170254386\" loading=\"lazy\">\n\n<p>数组特点</p>\n<p>1.数组必须有相应的数据类型，而且数组里面元素的类型必须和数组本身的类型相对应。</p>\n<p>2.数组元素的个数和数组本身的大小有关系。</p>\n<p>3.数组通过下标遍历（循环）、寻找元素</p>\n<p>4.数组可以被函数调用（数组本身是一个变量）</p>\n<ul>\n<li>数组应用</li>\n</ul>\n<p>数组可以把许多相同的元素整合到一起保存使用，比如对输入能够直接使用数组输入，而不必像之前一样将scanf放在for循环里面。</p>\n<ul>\n<li>字符数组（字符串）</li>\n</ul>\n<p>字符数组实际上是一系列字符的集合，也就是字符串(String)</p>\n<p>在C语言中，没有专门的字符串变量，没有string类型，通常就用一个字符数组来存放一个字符串。在C语言中，字符串总是以 <code>\\0</code>作为结尾，所以<code>\\0</code>也被称为字符串结束标志，或者字符串结束符由<code>&quot;&quot;</code>包围的字符串会自动在末尾添加<code>\\0</code>。</p>\n<p>例如：<code>&quot;abc&quot;</code>看起来只包含了3个字符，但C语言会在最后添加一个<code>\\0</code>，但我们感受不到。而由<code>&#39;&#39;</code>赋值的字符串则不会在末尾自动加\\0，若要以<code>%s</code>输出，则会输出错误，应该在末尾手动添加<code>&quot;\\0&quot;</code>。</p>\n<ul>\n<li>多维数组</li>\n</ul>\n<p>C语言的多维数组就相当于是元素为数组的数组（套娃）</p>\n<p>数组例题：用数组逆序输出一组个数为0~10的数</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> number=<span class=\"number\">0</span>;</span><br><span class=\"line\">\tscanf_s(<span class=\"string\">&quot;%d&quot;</span>,&amp;number);</span><br><span class=\"line\">\t<span class=\"type\">int</span> <span class=\"built_in\">array</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;number;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tscanf_s(<span class=\"string\">&quot;%d&quot;</span>,&amp;<span class=\"built_in\">array</span>[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;number/<span class=\"number\">2</span>;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t <span class=\"type\">int</span> temp=<span class=\"built_in\">array</span>[i];</span><br><span class=\"line\">\t\t<span class=\"built_in\">array</span>[i]=<span class=\"built_in\">array</span>[number-i <span class=\"number\">-1</span>];</span><br><span class=\"line\">\t\t<span class=\"built_in\">array</span>[number-i <span class=\"number\">-1</span>]=temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;number;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,<span class=\"built_in\">array</span>[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"C语言初次学习笔记-2\"><a href=\"#C语言初次学习笔记-2\" class=\"headerlink\" title=\"C语言初次学习笔记(2)\"></a>C语言初次学习笔记(2)</h1><h3 id=\"1-数据类型\"><a href=\"#1-数据类型\" class=\"headerlink\" title=\"1. 数据类型\"></a><strong>1. 数据类型</strong></h3><ul>\n<li><strong>字节</strong></li>\n</ul>\n<p>计算机专用的一种计量单位，一个字节代表了8个二进制位也就是256（0000 0000）2的8次方<br>两个字节（BYTE）构成一个字（WORD），两个字（WORD）构成一个双字（DOUBLE WORD）</p>\n<p>双字可简写为DWORD，相当于四个字节</p>\n<blockquote>\n<p>Q：为什么会有数据类型？</p>\n<p>A：在C语言中，数据类型指的是用于声明不同类型的变量或函数的一个广泛的系统。变量的类型决定了变量储存占用的空间，以及如何结束储存的位模式。</p>\n</blockquote>\n<h4 id=\"C语言的数据类型共分为：\"><a href=\"#C语言的数据类型共分为：\" class=\"headerlink\" title=\"C语言的数据类型共分为：\"></a>C语言的数据类型共分为：</h4><p>1.基本类型：包括整形（int），浮点型（float），字符型（char），和双精度浮点型（double）</p>\n<p>2.枚举类型被用来定义在程序中只能赋予其一定的离散整数值的变量</p>\n<p>3.void类型：表示没有值的数据类型，通常用于函数返回值</p>\n<p>4.派生类型：包括数组类型，指针类型和结构体类型</p>\n<ul>\n<li><strong>有符号和无符号关键字</strong></li>\n</ul>\n<p>Signed：类型默认位signed，也就是有符号数</p>\n<p>Unisigned：可以搭配基本类型进行定义，无符号数关键字</p>\n<p>有符号数和无符号数区分：</p>\n<p>有符号数就是负数，正数就是正数；无符号数负数也代表了一个正数</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a=<span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b=<span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot; %d %u &quot;</span>,a,a);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot; %d %u &quot;</span>,b,b);</span><br><span class=\"line\">    <span class=\"comment\">//%u就是unsigned int的占位符</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输出的结果却是<code>3 3  -1 4294967295 </code> 4294967295可以看作范围的终点，而范围又可以看作是一个圆圈，过了这个终点又会变为起点，所以4294967295+1输出是0，这就是数据的溢出。</p>\n<ul>\n<li><strong>sizeof()操作符</strong>：用来查看参数的大小，操作数可以是变量，也可以是数据类型</li>\n</ul>\n<p>1.用于数据类型</p>\n<p>sizeof使用形式：sizeof(type)\t数据类型必须用括号括住：sizeof(int)</p>\n<p>2.用于变量</p>\n<p>sizeof使用形式：sizeo(var_name)或sizeof\tvar_name</p>\n<p>变量名可以不用括号括住 如：sizeof(var_name), sizeof\tvar_name等都是正确形式</p>\n<p>注意：sizeof操作符不能用于函数类型，不完全类型或位字段。</p>\n<p>sizeof操作符的结果类型是<strong>size_t</strong></p>\n<h4 id=\"基本类型\"><a href=\"#基本类型\" class=\"headerlink\" title=\"基本类型\"></a>基本类型</h4><p>字符型：关键字char类型，用于对小型整数或者字符变量进行定义，可以搭配unsigned做无符号数使用，当是有符号数时数据宽度是-128<del>127，当是无符号数的时候数据宽度是0</del>256.char类型大小是1字节，占位符是%c。</p>\n<blockquote>\n<p>1字节&#x3D;&#x3D;8比特(bit)&#x3D;&#x3D;256</p>\n</blockquote>\n<p>计算机表示字符的方式：</p>\n<p>ascall码：计算机方便对英文字符进行编码的操作码，一个ascall码有八位(1字节)</p>\n<p>unicode：计算机对各国字符统一进行的编码，一个unicode码有十六位(2字节)</p>\n<ul>\n<li><p>短整形：关键字short类型，用于对较小整数进行定义，可以搭配unsigned做无符号数使用，当是有符号数时数据宽度时-32768<del>32767，当时无符号数的时候数据宽度是0</del>65535。short类型大小是2字节，占位符是%hd。</p>\n</li>\n<li><p>整形：关键字int类型，用于对一般整数进行定义，可以搭配unsigned做无符号数使用，当是有符号数时数据宽度时-2147483648<del>2147483647，当是无符号数的时候数据宽度是0</del>4294967296。int类型大小是4字节，占位符是%d。</p>\n</li>\n<li><p>浮点形：关键字float类型，用于对浮点数进行定义，数据宽度是1.2E-38~3.4E+38。float类型大小是4字节，占位符是%f，精度范围是6位有效位。</p>\n</li>\n<li><p>浮点形：关键字double类型，用于对浮点数进行定义，数据宽度是2.3E-308~3.4E+308。double类型大小是8字节，占位符是%f，精度范围是15位有效位。</p>\n</li>\n<li><p>void类型</p>\n</li>\n</ul>\n<p>void，也就是无类型，”无效的或完全空白的”</p>\n<p>最熟悉的用途是：</p>\n<p>·虚函数返回类型</p>\n<p>·虚函数作为功能参数</p>\n<p>·空指针声明</p>\n<p>空指针(void*)：void指针可以指向任意类型的数据，就是说可以用任意类型的指针对void指针对void指针赋值</p>\n<p>当函数不需要返回值时，必须使用void限定，这就是我们所说的第一种情况。</p>\n<p>例如：void func(int a,char *b)。</p>\n<p>当函数不允许接受参数时，必须使用void限定，这就是我们所说的第二种情况。</p>\n<p>例如：int func(void)。</p>\n<img src=\"/2023/08/15/C%E8%AF%AD%E8%A8%80%E5%88%9D%E6%AC%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(2)/image-20230812202043325.png\" alt=\"image-20230812202043325\" style=\"zoom: 50%;\">\n\n<h3 id=\"2-函数\"><a href=\"#2-函数\" class=\"headerlink\" title=\"2.函数\"></a>2.函数</h3><p>函数是一组一起执行一个任务的语句。每个C程序都至少有一个函数，即主函数main()，所有简单的</p>\n<p>程序都可以定义其他额外的函数。</p>\n<p>您可以把代码划分到不同的函数中。如何划分代码到不同的函数中是由您来决定的，但在逻辑上，花灯通常是根据每个函数执行一个特定的任务来进行的。</p>\n<p>函数声明告诉编译器函数的名称、返回类型和参数。函数定义提供了函数的实际主体。</p>\n<p>函数形式</p>\n<p>return_type function_name(parameter list)<br>{<br>body of the function<br>}</p>\n<p>在C语言中，函数由一个函数头和一个函数主体组成。下面列出一个函数的所有组成部分：</p>\n<ul>\n<li>返回类型：一个函数可以i返回一个值。return_type是函数返回的值的数据类型。有些函数执行所需的操作而不返回值，在这种情况下，return_type是关键字void。</li>\n<li>函数名称：这是函数的实际名称。函数名和参数古列表一起构成了函数签名。</li>\n<li>参数：参数就像是占位符。当函数被调用时，您向参数传递一个值，这个值被称为实际参数。参数列表包括函数参数的类型、顺序、数量。参数是可选的，也就是说，函数可能不包含参数</li>\n<li>函数主体：函数主体包括一组定义函数执行任务的语句。</li>\n</ul>\n<p>函数例子</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;studio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">add</span><span class=\"params\">(<span class=\"type\">int</span> a ,<span class=\"type\">int</span> b)</span><span class=\"comment\">/*左边代码add()表示一个加法的函数*/</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> c = a + b;<span class=\"comment\">/*这个函数在被调用时传递了两个参数，第一个是a,第二个是b*/</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">&#125;<span class=\"comment\">/*函数功能是借用函数里面定义的一个变量c来对a和b相加，再将这个变量c传递出去(return)*/</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> b = <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> c = add(a,b);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,c);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>我们可以通过将函数封装起来形成⼀个头文件，只需在使用时从头文件中调用函数，就可以使得main函数里面只需要⼀个函数便实现题目所需要的各种功能。</p>\n<h3 id=\"3-数组\"><a href=\"#3-数组\" class=\"headerlink\" title=\"3.数组\"></a><strong>3.数组</strong></h3><ul>\n<li>数组定义(array)</li>\n</ul>\n<p>数组是一个固定长度的储存相同数据类型的数据结构，数组中的元素被储存在一段连续的内存空间中。它是最简单的数据结构之一，大多数现代编程语言都内置数组支持。</p>\n<img src=\"/2023/08/15/C%E8%AF%AD%E8%A8%80%E5%88%9D%E6%AC%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(2)/image-20230815170254386.png\" alt=\"image-20230815170254386\" style=\"zoom: 50%;\">\n\n<p>数组特点</p>\n<p>1.数组必须有相应的数据类型，而且数组里面元素的类型必须和数组本身的类型相对应。</p>\n<p>2.数组元素的个数和数组本身的大小有关系。</p>\n<p>3.数组通过下标遍历（循环）、寻找元素</p>\n<p>4.数组可以被函数调用（数组本身是一个变量）</p>\n<ul>\n<li>数组应用</li>\n</ul>\n<p>数组可以把许多相同的元素整合到一起保存使用，比如对输入能够直接使用数组输入，而不必像之前一样将scanf放在for循环里面。</p>\n<ul>\n<li>字符数组（字符串）</li>\n</ul>\n<p>字符数组实际上是一系列字符的集合，也就是字符串(String)</p>\n<p>在C语言中，没有专门的字符串变量，没有string类型，通常就用一个字符数组来存放一个字符串。在C语言中，字符串总是以 <code>\\0</code>作为结尾，所以<code>\\0</code>也被称为字符串结束标志，或者字符串结束符由<code>&quot;&quot;</code>包围的字符串会自动在末尾添加<code>\\0</code>。</p>\n<p>例如：<code>&quot;abc&quot;</code>看起来只包含了3个字符，但C语言会在最后添加一个<code>\\0</code>，但我们感受不到。而由<code>&#39;&#39;</code>赋值的字符串则不会在末尾自动加\\0，若要以<code>%s</code>输出，则会输出错误，应该在末尾手动添加<code>&quot;\\0&quot;</code>。</p>\n<ul>\n<li>多维数组</li>\n</ul>\n<p>C语言的多维数组就相当于是元素为数组的数组（套娃）</p>\n<p>数组例题：用数组逆序输出一组个数为0~10的数</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> number=<span class=\"number\">0</span>;</span><br><span class=\"line\">\tscanf_s(<span class=\"string\">&quot;%d&quot;</span>,&amp;number);</span><br><span class=\"line\">\t<span class=\"type\">int</span> <span class=\"built_in\">array</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;number;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tscanf_s(<span class=\"string\">&quot;%d&quot;</span>,&amp;<span class=\"built_in\">array</span>[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;number/<span class=\"number\">2</span>;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t <span class=\"type\">int</span> temp=<span class=\"built_in\">array</span>[i];</span><br><span class=\"line\">\t\t<span class=\"built_in\">array</span>[i]=<span class=\"built_in\">array</span>[number-i <span class=\"number\">-1</span>];</span><br><span class=\"line\">\t\t<span class=\"built_in\">array</span>[number-i <span class=\"number\">-1</span>]=temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;number;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,<span class=\"built_in\">array</span>[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"markdown语法","date":"2023-07-28T14:29:01.000Z","cover":"/illust_79559380_20210801_212327.png","_content":"\n(1)标题\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n==高亮==\n(2)字体\n**加粗**\n*倾斜*\n<下划线>\n~~删除线~~\n这是^上标^\n这是~下标~\n(3)列表\n①有序列表\n\n1. 窗竹影摇书案上\n2. 野泉声入砚池中\n3. 少年辛苦终身事\n4. 莫向光阴惰寸功\n\n②无序列表\n\n- 窗竹影摇书案上\n  - 野泉声入砚池中\n    - 少年辛苦终身事\n      - 莫向光阴惰寸功 \n\n (4)表格\n\n| MON  | TUE  | WED  | THU  | FRI  | SUN  |\n| :--- | ---- | :--- | ---- | ---- | ---- |\n|      |      |      |      |      |      |\n|      |      |      |      |      |      |\n\n(5)引用/链接\n> [Typora学习教程]: https://www.bilibili.com/video/BV1R4411575c/?spm_id_from=333.999.0.0&amp;vd_source=14aeb69c51d9ed19399930b46e98dc5d\n>\n>\n\n(6)分割线\n\n----------\n-------\n(7)代码\n\n生成并部署博客：`npm run deploy`\n\n上传源代码：``git add .``\n``git commit -m 'update'``\n``git push``\n\n以上就是今天学习到的东西~~","source":"_posts/markdown语法.md","raw":"---\ntitle: markdown语法\ndate: 2023-07-28 22:29:01\ncover: /illust_79559380_20210801_212327.png\ntags: 笔记\n---\n\n(1)标题\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n==高亮==\n(2)字体\n**加粗**\n*倾斜*\n<下划线>\n~~删除线~~\n这是^上标^\n这是~下标~\n(3)列表\n①有序列表\n\n1. 窗竹影摇书案上\n2. 野泉声入砚池中\n3. 少年辛苦终身事\n4. 莫向光阴惰寸功\n\n②无序列表\n\n- 窗竹影摇书案上\n  - 野泉声入砚池中\n    - 少年辛苦终身事\n      - 莫向光阴惰寸功 \n\n (4)表格\n\n| MON  | TUE  | WED  | THU  | FRI  | SUN  |\n| :--- | ---- | :--- | ---- | ---- | ---- |\n|      |      |      |      |      |      |\n|      |      |      |      |      |      |\n\n(5)引用/链接\n> [Typora学习教程]: https://www.bilibili.com/video/BV1R4411575c/?spm_id_from=333.999.0.0&amp;vd_source=14aeb69c51d9ed19399930b46e98dc5d\n>\n>\n\n(6)分割线\n\n----------\n-------\n(7)代码\n\n生成并部署博客：`npm run deploy`\n\n上传源代码：``git add .``\n``git commit -m 'update'``\n``git push``\n\n以上就是今天学习到的东西~~","slug":"markdown语法","published":1,"updated":"2023-12-09T11:26:00.448Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clq0w2clh000c8wv5cth7c001","content":"<p>(1)标题</p>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6><p>&#x3D;&#x3D;高亮&#x3D;&#x3D;<br>(2)字体<br><strong>加粗</strong><br><em>倾斜</em><br>&lt;下划线&gt;<br><del>删除线</del><br>这是^上标^<br>这是<del>下标</del><br>(3)列表<br>①有序列表</p>\n<ol>\n<li>窗竹影摇书案上</li>\n<li>野泉声入砚池中</li>\n<li>少年辛苦终身事</li>\n<li>莫向光阴惰寸功</li>\n</ol>\n<p>②无序列表</p>\n<ul>\n<li>窗竹影摇书案上<ul>\n<li>野泉声入砚池中<ul>\n<li>少年辛苦终身事<ul>\n<li>莫向光阴惰寸功</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p> (4)表格</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">MON</th>\n<th>TUE</th>\n<th align=\"left\">WED</th>\n<th>THU</th>\n<th>FRI</th>\n<th>SUN</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"></td>\n<td></td>\n<td align=\"left\"></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td></td>\n<td align=\"left\"></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<p>(5)引用&#x2F;链接</p>\n<blockquote>\n</blockquote>\n<p>(6)分割线</p>\n<hr>\n<hr>\n<p>(7)代码</p>\n<p>生成并部署博客：<code>npm run deploy</code></p>\n<p>上传源代码：<code>git add .</code><br><code>git commit -m &#39;update&#39;</code><br><code>git push</code></p>\n<p>以上就是今天学习到的东西~~</p>\n","site":{"data":{}},"excerpt":"","more":"<p>(1)标题</p>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6><p>&#x3D;&#x3D;高亮&#x3D;&#x3D;<br>(2)字体<br><strong>加粗</strong><br><em>倾斜</em><br>&lt;下划线&gt;<br><del>删除线</del><br>这是^上标^<br>这是<del>下标</del><br>(3)列表<br>①有序列表</p>\n<ol>\n<li>窗竹影摇书案上</li>\n<li>野泉声入砚池中</li>\n<li>少年辛苦终身事</li>\n<li>莫向光阴惰寸功</li>\n</ol>\n<p>②无序列表</p>\n<ul>\n<li>窗竹影摇书案上<ul>\n<li>野泉声入砚池中<ul>\n<li>少年辛苦终身事<ul>\n<li>莫向光阴惰寸功</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p> (4)表格</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">MON</th>\n<th>TUE</th>\n<th align=\"left\">WED</th>\n<th>THU</th>\n<th>FRI</th>\n<th>SUN</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"></td>\n<td></td>\n<td align=\"left\"></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td></td>\n<td align=\"left\"></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<p>(5)引用&#x2F;链接</p>\n<blockquote>\n</blockquote>\n<p>(6)分割线</p>\n<hr>\n<hr>\n<p>(7)代码</p>\n<p>生成并部署博客：<code>npm run deploy</code></p>\n<p>上传源代码：<code>git add .</code><br><code>git commit -m &#39;update&#39;</code><br><code>git push</code></p>\n<p>以上就是今天学习到的东西~~</p>\n"}],"PostAsset":[{"_id":"source/_posts/BUU MISC第一页/image-20230930163911778.png","slug":"image-20230930163911778.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20230930164004910.png","slug":"image-20230930164004910.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20230930164221394.png","slug":"image-20230930164221394.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20230930173034922.png","slug":"image-20230930173034922.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20230930173205837.png","slug":"image-20230930173205837.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20230930212147299.png","slug":"image-20230930212147299.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20230930212627558.png","slug":"image-20230930212627558.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20230930213026565.png","slug":"image-20230930213026565.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20230930213249124.png","slug":"image-20230930213249124.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20230930213621224.png","slug":"image-20230930213621224.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20230930213829225.png","slug":"image-20230930213829225.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20230930213926268.png","slug":"image-20230930213926268.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20230930214228085.png","slug":"image-20230930214228085.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231001172555622.png","slug":"image-20231001172555622.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231001172947373.png","slug":"image-20231001172947373.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231001173850299.png","slug":"image-20231001173850299.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231002094128310.png","slug":"image-20231002094128310.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231002094431742.png","slug":"image-20231002094431742.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231028224942131.png","slug":"image-20231028224942131.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231028234454306.png","slug":"image-20231028234454306.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231028234954685.png","slug":"image-20231028234954685.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231028235343604.png","slug":"image-20231028235343604.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029003945960.png","slug":"image-20231029003945960.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029004112936.png","slug":"image-20231029004112936.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029004556450.png","slug":"image-20231029004556450.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029004746711.png","slug":"image-20231029004746711.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029004836940.png","slug":"image-20231029004836940.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029005308275.png","slug":"image-20231029005308275.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029005951080.png","slug":"image-20231029005951080.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029010246211.png","slug":"image-20231029010246211.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029010621087.png","slug":"image-20231029010621087.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029010704171.png","slug":"image-20231029010704171.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029011321260.png","slug":"image-20231029011321260.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029115441069.png","slug":"image-20231029115441069.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029115542623.png","slug":"image-20231029115542623.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029115626925.png","slug":"image-20231029115626925.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029115756413.png","slug":"image-20231029115756413.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029120238846.png","slug":"image-20231029120238846.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231029120258482.png","slug":"image-20231029120258482.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102212518643.png","slug":"image-20231102212518643.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102213104750.png","slug":"image-20231102213104750.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102213403194.png","slug":"image-20231102213403194.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102213431727.png","slug":"image-20231102213431727.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102213914912.png","slug":"image-20231102213914912.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102214029035.png","slug":"image-20231102214029035.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102214111978.png","slug":"image-20231102214111978.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102214520587.png","slug":"image-20231102214520587.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102214609938.png","slug":"image-20231102214609938.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102214710293.png","slug":"image-20231102214710293.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102214846232.png","slug":"image-20231102214846232.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102215106284.png","slug":"image-20231102215106284.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102215310432.png","slug":"image-20231102215310432.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102215855616.png","slug":"image-20231102215855616.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102220055514.png","slug":"image-20231102220055514.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102220155299.png","slug":"image-20231102220155299.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102220347569.png","slug":"image-20231102220347569.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102220519996.png","slug":"image-20231102220519996.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102220653728.png","slug":"image-20231102220653728.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102221201766.png","slug":"image-20231102221201766.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102221521959.png","slug":"image-20231102221521959.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102221601915.png","slug":"image-20231102221601915.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102221721436.png","slug":"image-20231102221721436.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102221834000.png","slug":"image-20231102221834000.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102222126043.png","slug":"image-20231102222126043.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102222148401.png","slug":"image-20231102222148401.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102222308370.png","slug":"image-20231102222308370.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102222345938.png","slug":"image-20231102222345938.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102222523421.png","slug":"image-20231102222523421.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102222908349.png","slug":"image-20231102222908349.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102223141331.png","slug":"image-20231102223141331.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102223340945.png","slug":"image-20231102223340945.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102223501625.png","slug":"image-20231102223501625.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102223628322.png","slug":"image-20231102223628322.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102223807463.png","slug":"image-20231102223807463.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102223852291.png","slug":"image-20231102223852291.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102224321611.png","slug":"image-20231102224321611.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102225030297.png","slug":"image-20231102225030297.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102225220084.png","slug":"image-20231102225220084.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102225312706.png","slug":"image-20231102225312706.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102225625699.png","slug":"image-20231102225625699.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102225844041.png","slug":"image-20231102225844041.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102230035556.png","slug":"image-20231102230035556.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102230147582.png","slug":"image-20231102230147582.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102230514379.png","slug":"image-20231102230514379.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102230818881.png","slug":"image-20231102230818881.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102231012323.png","slug":"image-20231102231012323.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102231106840.png","slug":"image-20231102231106840.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102231640468.png","slug":"image-20231102231640468.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102231956416.png","slug":"image-20231102231956416.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102233018433.png","slug":"image-20231102233018433.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102233059352.png","slug":"image-20231102233059352.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102233238234.png","slug":"image-20231102233238234.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102233345082.png","slug":"image-20231102233345082.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102233459493.png","slug":"image-20231102233459493.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102233654669.png","slug":"image-20231102233654669.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102233746895.png","slug":"image-20231102233746895.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102234139687.png","slug":"image-20231102234139687.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231102234729104.png","slug":"image-20231102234729104.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103003547955.png","slug":"image-20231103003547955.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103003839414.png","slug":"image-20231103003839414.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103003852745.png","slug":"image-20231103003852745.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103003948441.png","slug":"image-20231103003948441.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103004156589.png","slug":"image-20231103004156589.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103004450135.png","slug":"image-20231103004450135.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103004510022.png","slug":"image-20231103004510022.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103004554135.png","slug":"image-20231103004554135.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103004735062.png","slug":"image-20231103004735062.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103005021667.png","slug":"image-20231103005021667.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103005639019.png","slug":"image-20231103005639019.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103005837061.png","slug":"image-20231103005837061.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103005941061.png","slug":"image-20231103005941061.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103010501946.png","slug":"image-20231103010501946.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103010715509.png","slug":"image-20231103010715509.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103010912859.png","slug":"image-20231103010912859.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103011023899.png","slug":"image-20231103011023899.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103011342352.png","slug":"image-20231103011342352.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103011637325.png","slug":"image-20231103011637325.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103012341902.png","slug":"image-20231103012341902.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103012644500.png","slug":"image-20231103012644500.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103013233392.png","slug":"image-20231103013233392.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103013245028.png","slug":"image-20231103013245028.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103013306460.png","slug":"image-20231103013306460.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103013456425.png","slug":"image-20231103013456425.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103013524387.png","slug":"image-20231103013524387.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103013646579.png","slug":"image-20231103013646579.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103013729241.png","slug":"image-20231103013729241.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103013912432.png","slug":"image-20231103013912432.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103014131334.png","slug":"image-20231103014131334.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103221255746.png","slug":"image-20231103221255746.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231103221622135.png","slug":"image-20231103221622135.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231104014235292.png","slug":"image-20231104014235292.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231104014429443.png","slug":"image-20231104014429443.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231104014606341.png","slug":"image-20231104014606341.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231104014643534.png","slug":"image-20231104014643534.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231104015204886.png","slug":"image-20231104015204886.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231104015842337.png","slug":"image-20231104015842337.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231104020108651.png","slug":"image-20231104020108651.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231104020306299.png","slug":"image-20231104020306299.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231209093654842.png","slug":"image-20231209093654842.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231209093808700.png","slug":"image-20231209093808700.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231209094139199.png","slug":"image-20231209094139199.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231209094240801.png","slug":"image-20231209094240801.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231209094302547.png","slug":"image-20231209094302547.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231209094335558.png","slug":"image-20231209094335558.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231209094829089.png","slug":"image-20231209094829089.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231209094950730.png","slug":"image-20231209094950730.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第一页/image-20231209095025603.png","slug":"image-20231209095025603.png","post":"clq0w2ckv00018wv5dd1j2frk","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231116195450524.png","slug":"image-20231116195450524.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231116195905524.png","slug":"image-20231116195905524.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231116195953609.png","slug":"image-20231116195953609.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231116200756188.png","slug":"image-20231116200756188.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231116201610324.png","slug":"image-20231116201610324.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231116202048077.png","slug":"image-20231116202048077.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231116202136439.png","slug":"image-20231116202136439.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231116202242375.png","slug":"image-20231116202242375.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231116202340218.png","slug":"image-20231116202340218.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231116202652184.png","slug":"image-20231116202652184.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231116221127242.png","slug":"image-20231116221127242.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231116221149333.png","slug":"image-20231116221149333.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231116221219237.png","slug":"image-20231116221219237.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231125114517454.png","slug":"image-20231125114517454.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231125114555413.png","slug":"image-20231125114555413.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231125114810488.png","slug":"image-20231125114810488.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231125114834857.png","slug":"image-20231125114834857.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231125115048235.png","slug":"image-20231125115048235.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231125115216084.png","slug":"image-20231125115216084.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203190350284.png","slug":"image-20231203190350284.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203192026164.png","slug":"image-20231203192026164.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203192047884.png","slug":"image-20231203192047884.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203192100854.png","slug":"image-20231203192100854.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203192156470.png","slug":"image-20231203192156470.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203192350491.png","slug":"image-20231203192350491.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203192447918.png","slug":"image-20231203192447918.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203193202986.png","slug":"image-20231203193202986.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203193314238.png","slug":"image-20231203193314238.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203193406311.png","slug":"image-20231203193406311.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203193508467.png","slug":"image-20231203193508467.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203193558273.png","slug":"image-20231203193558273.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203193700775.png","slug":"image-20231203193700775.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203194054577.png","slug":"image-20231203194054577.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203194139439.png","slug":"image-20231203194139439.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203194211872.png","slug":"image-20231203194211872.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203194305702.png","slug":"image-20231203194305702.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203194617231.png","slug":"image-20231203194617231.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203194647200.png","slug":"image-20231203194647200.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203194837293.png","slug":"image-20231203194837293.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203195200078.png","slug":"image-20231203195200078.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203195313506.png","slug":"image-20231203195313506.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203195411777.png","slug":"image-20231203195411777.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203200040795.png","slug":"image-20231203200040795.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203201303694.png","slug":"image-20231203201303694.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203201344531.png","slug":"image-20231203201344531.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203201439351.png","slug":"image-20231203201439351.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203201654872.png","slug":"image-20231203201654872.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203201759058.png","slug":"image-20231203201759058.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203201833309.png","slug":"image-20231203201833309.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203234818626.png","slug":"image-20231203234818626.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203234908095.png","slug":"image-20231203234908095.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203235021837.png","slug":"image-20231203235021837.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203235059836.png","slug":"image-20231203235059836.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203235207075.png","slug":"image-20231203235207075.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203235306913.png","slug":"image-20231203235306913.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203235419051.png","slug":"image-20231203235419051.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203235552446.png","slug":"image-20231203235552446.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203235603898.png","slug":"image-20231203235603898.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231203235950197.png","slug":"image-20231203235950197.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204000002248.png","slug":"image-20231204000002248.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204000213007.png","slug":"image-20231204000213007.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204000229830.png","slug":"image-20231204000229830.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204000656325.png","slug":"image-20231204000656325.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204001906241.png","slug":"image-20231204001906241.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204002400611.png","slug":"image-20231204002400611.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204002452504.png","slug":"image-20231204002452504.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204002850837.png","slug":"image-20231204002850837.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204003047862.png","slug":"image-20231204003047862.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204190453001.png","slug":"image-20231204190453001.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204190517609.png","slug":"image-20231204190517609.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204190542422.png","slug":"image-20231204190542422.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204190628126.png","slug":"image-20231204190628126.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204190948248.png","slug":"image-20231204190948248.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204191213913.png","slug":"image-20231204191213913.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204191302186.png","slug":"image-20231204191302186.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204191340102.png","slug":"image-20231204191340102.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204191408741.png","slug":"image-20231204191408741.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204191629040.png","slug":"image-20231204191629040.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204191844688.png","slug":"image-20231204191844688.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204192355168.png","slug":"image-20231204192355168.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204192520360.png","slug":"image-20231204192520360.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204193006361.png","slug":"image-20231204193006361.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204193210939.png","slug":"image-20231204193210939.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204193242805.png","slug":"image-20231204193242805.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204193356600.png","slug":"image-20231204193356600.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204193508018.png","slug":"image-20231204193508018.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204193715022.png","slug":"image-20231204193715022.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204193959516.png","slug":"image-20231204193959516.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204194155541.png","slug":"image-20231204194155541.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204194247971.png","slug":"image-20231204194247971.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204194313711.png","slug":"image-20231204194313711.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204194827296.png","slug":"image-20231204194827296.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204195602509.png","slug":"image-20231204195602509.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204211343476.png","slug":"image-20231204211343476.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231204211456819.png","slug":"image-20231204211456819.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207191425076.png","slug":"image-20231207191425076.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207191452348.png","slug":"image-20231207191452348.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207192019538.png","slug":"image-20231207192019538.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207192129749.png","slug":"image-20231207192129749.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207192155042.png","slug":"image-20231207192155042.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207192302627.png","slug":"image-20231207192302627.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207194219079.png","slug":"image-20231207194219079.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207194435380.png","slug":"image-20231207194435380.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207195203651.png","slug":"image-20231207195203651.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207195254469.png","slug":"image-20231207195254469.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207195431073.png","slug":"image-20231207195431073.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207195745064.png","slug":"image-20231207195745064.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207200019211.png","slug":"image-20231207200019211.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207200225524.png","slug":"image-20231207200225524.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207200405626.png","slug":"image-20231207200405626.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207200452371.png","slug":"image-20231207200452371.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207201125291.png","slug":"image-20231207201125291.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207201214134.png","slug":"image-20231207201214134.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207201323027.png","slug":"image-20231207201323027.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207201445968.png","slug":"image-20231207201445968.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207201537387.png","slug":"image-20231207201537387.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207201739356.png","slug":"image-20231207201739356.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207202117408.png","slug":"image-20231207202117408.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207202128334.png","slug":"image-20231207202128334.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207202214558.png","slug":"image-20231207202214558.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231207221841155.png","slug":"image-20231207221841155.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231208135026442.png","slug":"image-20231208135026442.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231208140317860.png","slug":"image-20231208140317860.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231208140603455.png","slug":"image-20231208140603455.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231208140756245.png","slug":"image-20231208140756245.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231208141323096.png","slug":"image-20231208141323096.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231208141521644.png","slug":"image-20231208141521644.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231208141659361.png","slug":"image-20231208141659361.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231208142144663.png","slug":"image-20231208142144663.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209011036959.png","slug":"image-20231209011036959.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209011121881.png","slug":"image-20231209011121881.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209011152563.png","slug":"image-20231209011152563.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209011611589.png","slug":"image-20231209011611589.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209011700990.png","slug":"image-20231209011700990.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209012049579.png","slug":"image-20231209012049579.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209012139794.png","slug":"image-20231209012139794.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209012303742.png","slug":"image-20231209012303742.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209012523387.png","slug":"image-20231209012523387.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209012740846.png","slug":"image-20231209012740846.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209013048700.png","slug":"image-20231209013048700.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209100308231.png","slug":"image-20231209100308231.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209100928434.png","slug":"image-20231209100928434.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209100935662.png","slug":"image-20231209100935662.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209100947253.png","slug":"image-20231209100947253.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209101119204.png","slug":"image-20231209101119204.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209101148513.png","slug":"image-20231209101148513.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209101318319.png","slug":"image-20231209101318319.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209101456458.png","slug":"image-20231209101456458.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209101820536.png","slug":"image-20231209101820536.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209164924674.png","slug":"image-20231209164924674.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209170236676.png","slug":"image-20231209170236676.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209170524315.png","slug":"image-20231209170524315.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209170630653.png","slug":"image-20231209170630653.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209170721640.png","slug":"image-20231209170721640.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209170749859.png","slug":"image-20231209170749859.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209171124461.png","slug":"image-20231209171124461.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209171406231.png","slug":"image-20231209171406231.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209171448092.png","slug":"image-20231209171448092.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209171933148.png","slug":"image-20231209171933148.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209172049261.png","slug":"image-20231209172049261.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209172213470.png","slug":"image-20231209172213470.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209172415401.png","slug":"image-20231209172415401.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209172524394.png","slug":"image-20231209172524394.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209172550260.png","slug":"image-20231209172550260.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/BUU MISC第二页/image-20231209172641900.png","slug":"image-20231209172641900.png","post":"clq0w2clb00078wv5b0c7cp6r","modified":0,"renderable":0},{"_id":"source/_posts/C语言初次学习笔记(1)/image-20230805154931621.png","slug":"image-20230805154931621.png","post":"clq0w2clc00088wv54cgg2n1i","modified":0,"renderable":0},{"_id":"source/_posts/C语言初次学习笔记(1)/image-20230805155452616.png","slug":"image-20230805155452616.png","post":"clq0w2clc00088wv54cgg2n1i","modified":0,"renderable":0},{"_id":"source/_posts/C语言初次学习笔记(1)/image-20230805165608821.png","slug":"image-20230805165608821.png","post":"clq0w2clc00088wv54cgg2n1i","modified":0,"renderable":0},{"_id":"source/_posts/C语言初次学习笔记(1)/image-20230805170423462.png","slug":"image-20230805170423462.png","post":"clq0w2clc00088wv54cgg2n1i","modified":0,"renderable":0},{"_id":"source/_posts/C语言初次学习笔记(1)/image-20230805171655526.png","slug":"image-20230805171655526.png","post":"clq0w2clc00088wv54cgg2n1i","modified":0,"renderable":0},{"_id":"source/_posts/C语言初次学习笔记(1)/image-20230805172114403.png","slug":"image-20230805172114403.png","post":"clq0w2clc00088wv54cgg2n1i","modified":0,"renderable":0},{"_id":"source/_posts/C语言初次学习笔记(1)/image-20230805172454571.png","slug":"image-20230805172454571.png","post":"clq0w2clc00088wv54cgg2n1i","modified":0,"renderable":0},{"_id":"source/_posts/C语言初次学习笔记(2)/image-20230812202043325.png","slug":"image-20230812202043325.png","post":"clq0w2cle000a8wv57x7k4k3a","modified":0,"renderable":0},{"_id":"source/_posts/C语言初次学习笔记(2)/image-20230815170254386.png","slug":"image-20230815170254386.png","post":"clq0w2cle000a8wv57x7k4k3a","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"clq0w2ckv00018wv5dd1j2frk","tag_id":"clq0w2cl400038wv54of95s9p","_id":"clq0w2cl900068wv5fy05b7ug"},{"post_id":"clq0w2clb00078wv5b0c7cp6r","tag_id":"clq0w2cl400038wv54of95s9p","_id":"clq0w2cle00098wv55law98ow"},{"post_id":"clq0w2clc00088wv54cgg2n1i","tag_id":"clq0w2clg000b8wv59e5odxel","_id":"clq0w2clm000e8wv50e4ralh5"},{"post_id":"clq0w2cle000a8wv57x7k4k3a","tag_id":"clq0w2clg000b8wv59e5odxel","_id":"clq0w2clo000g8wv583sg3z42"},{"post_id":"clq0w2clh000c8wv5cth7c001","tag_id":"clq0w2clg000b8wv59e5odxel","_id":"clq0w2clo000h8wv5b5tq0i33"}],"Tag":[{"name":"做题记录","_id":"clq0w2cl400038wv54of95s9p"},{"name":"笔记","_id":"clq0w2clg000b8wv59e5odxel"}]}}